//
//  DataBase.m
//  DataBase
//
//  Created by Deepak Gantala on 09/10/13.
//  Copyright (c) 2013 Enstrapp IT Solutions . All rights reserved.
//

#import "DataBase.h"
#import "ConsoleLogHandler.h"
#import "CoreDataHelper.h"
#import "AppDelegate.h"
#import "XMLDictionary.h"
#import "FunctionalLocation.h"
#import "Equipment.h"
#import "Material.h"
#import "EquipMptt.h"
#import "FlocMptt.h"
#import "EquipmentBOMHeader.h"
#import "EquipmentBOMTransaction.h"
#import "Meascodes.h"
#import "StockOverView.h"

#define DBNAME  @"PlantMaintenance.sqlite"

@implementation DataBase
@synthesize defaults,orderDetails,notifDetails;

#pragma mark-
#pragma mark- Insert Methods

#pragma mark - singleton object

static dispatch_once_t onceToken;

+ (id)sharedInstance
{
    static DataBase *sharedInstance = nil;
    dispatch_once(&onceToken, ^{
        sharedInstance = [[self alloc] init];
    });
    return sharedInstance;
}

- (NSString *)deviceUUID
{
    return [[[UIDevice currentDevice] identifierForVendor] UUIDString];
}

- (BOOL)connectDatabase
{
    if ([self checkDatabaseFileAvailablity]) {
        
        if (dataBase!= NULL) {
            [self closeDatabase];
        }
        
        defaults = [NSUserDefaults standardUserDefaults];
        
        if (sqlite3_open([databaseFilePath UTF8String], &dataBase)==SQLITE_OK)
        {
            return YES;
        }
    }
    
    return NO;
}

- (BOOL)closeDatabase
{
    if (dataBase) {
        if (query_stment!=NULL) {
            sqlite3_reset(query_stment);
            sqlite3_finalize(query_stment);
            query_stment=NULL;
        }
        sqlite3_close(dataBase);
        dataBase = NULL;
    }
    
    return YES;
}

- (BOOL)set_query:(NSString *)queryString
{
    if (query_stment!=NULL) {
        sqlite3_reset(query_stment);
        sqlite3_finalize(query_stment);
        query_stment=NULL;
    }
    
    int st=sqlite3_prepare_v2(dataBase, [queryString UTF8String], -1, &query_stment, NULL);
    
    if (st==SQLITE_OK){
        
        return TRUE;
    }
    else{
        [ConsoleLogHandler showLog:[NSString stringWithFormat:@"%i",st]];
        return FALSE;
    }
}

- (BOOL)checkDatabaseFileAvailablity
{
    if (!databaseFilePath.length) {
        
        databaseFilePath=[[NSString alloc] initWithString:[[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:DBNAME]];
    }
    
    if ([[NSFileManager defaultManager] fileExistsAtPath:databaseFilePath])
    {
        NSError *error;
        NSDictionary *fileAttributes = [[NSFileManager defaultManager] attributesOfItemAtPath:databaseFilePath error:&error];
        if ([fileAttributes fileSize] == 0) {
            [[NSFileManager defaultManager] removeItemAtPath:databaseFilePath error:&error];
            if (error) {
                {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"Cannot delete empty sqlite %@",error.description]];
                }
            }
        }
    }
    
    [ConsoleLogHandler showLog:databaseFilePath];
    if (![[NSFileManager defaultManager] fileExistsAtPath:databaseFilePath]) {
        NSString *localopath=[[NSBundle mainBundle] pathForResource:DBNAME ofType:nil];
        NSError *error;
        [[NSFileManager defaultManager] copyItemAtPath:localopath toPath:databaseFilePath error:&error];
        if (error) {
            [ConsoleLogHandler showLog:error.description];
            return NO;
        }
        //[self initiateDB];
        // [self loadDataforTable:@"Type"];
        //  [self loadDataforTable:@"Sales"];
    }
    return YES;
}

- (BOOL)run_Queries_NODATA
{
    if (sqlite3_step(query_stment)==SQLITE_DONE) {
        sqlite3_reset(query_stment);
        sqlite3_finalize(query_stment);
        query_stment=NULL;
        return TRUE;
    }
    else {
        return FALSE;
    }
}

- (NSMutableArray *)run_Queries_WITHDATA
{
    NSMutableArray * data = [[NSMutableArray alloc] init];
    
    while (sqlite3_step(query_stment)==SQLITE_ROW) {
        int column_count=sqlite3_column_count(query_stment);
        NSMutableArray *tempArray=[[NSMutableArray alloc] initWithCapacity:column_count] ;
        
        for (int i=0; i<column_count; i++) {
            
            int type=sqlite3_column_type(query_stment, i);
            
            switch (type) {
                    
                case 1:
                    [tempArray addObject:[NSString stringWithFormat:@"%i",sqlite3_column_int(query_stment, i)]];
                    break;
                case 2:
                    [tempArray addObject:[NSString stringWithFormat:@"%f",sqlite3_column_double(query_stment, i)]];
                    break;
                case 3:
                    [tempArray addObject:[NSString stringWithFormat:@"%s",(const char*)sqlite3_column_text(query_stment, i)]];
                    break;
                case 4:
                    [tempArray addObject:[[NSData alloc] initWithBytes: sqlite3_column_blob(query_stment, i) length: sqlite3_column_bytes(query_stment, i)]];
                    break;
                case 5:
                    [tempArray addObject:@""];
                    break;
                default:
                    break;
            }
        }
        [data addObject:tempArray];
        
    }
    return data;
}

- (NSMutableArray *)run_Queries_WITHDICTIONARY
{
    NSMutableArray * data = [[NSMutableArray alloc] init];
    //[temp addObject:];
    while (sqlite3_step(query_stment)==SQLITE_ROW) {
        int column_count=sqlite3_column_count(query_stment);
        NSMutableDictionary *tempDictionary=[[NSMutableDictionary alloc] initWithCapacity:column_count] ;
        for (int i=0; i<column_count; i++) {
            int type=sqlite3_column_type(query_stment, i);
            switch (type) {
                case 1:
                    [tempDictionary setObject:[NSString stringWithFormat:@"%i",sqlite3_column_int(query_stment, i)] forKey:[NSString stringWithFormat:@"%s",sqlite3_column_name(query_stment, i)]];
                    break;
                case 2:
                    [tempDictionary setObject:[NSString stringWithFormat:@"%f",sqlite3_column_double(query_stment, i)] forKey:[NSString stringWithFormat:@"%s",sqlite3_column_name(query_stment, i)]];
                    break;
                case 3:
                    [tempDictionary setObject:[NSString stringWithFormat:@"%s",sqlite3_column_text(query_stment, i)] forKey:[NSString stringWithFormat:@"%s",sqlite3_column_name(query_stment, i)]];
                    break;
                case 4:
                    [tempDictionary setObject:[[NSData alloc] initWithBytes: sqlite3_column_blob(query_stment, i) length: sqlite3_column_bytes(query_stment, i)] forKey:[NSString stringWithFormat:@"%s",sqlite3_column_name(query_stment, i)]];
                    break;
                case 5:
                    [tempDictionary setObject:@"" forKey:[NSString stringWithFormat:@"%s",sqlite3_column_name(query_stment, i)]];
                    break;
                default:
                    break;
            }
        }
        [data addObject:tempDictionary];
        
        //NSLog(@"%s",sqlite3_column_text(query_stment, 0));
        
    }
    return data;
}

- (NSMutableArray *)run_Queries_WITHDATA_singleArray
{
    NSMutableArray * data = [[NSMutableArray alloc] init];
    
    while (sqlite3_step(query_stment)==SQLITE_ROW) {
        int column_count=sqlite3_column_count(query_stment);
        for (int i=0; i<column_count; i++) {
            int type=sqlite3_column_type(query_stment, i);
            switch (type) {
                case 1:
                    [data addObject:[NSString stringWithFormat:@"%i",sqlite3_column_int(query_stment, i)]];
                    break;
                case 2:
                    [data addObject:[NSString stringWithFormat:@"%f",sqlite3_column_double(query_stment, i)]];
                    break;
                case 3:
                    [data addObject:[NSString stringWithFormat:@"%s",sqlite3_column_text(query_stment, i)]];
                    break;
                case 5:
                    [data addObject:@""];
                    break;
                default:
                    break;
            }
        }
        //NSLog(@"%s",sqlite3_column_text(query_stment, 0));
        
    }
    return data;
}

#pragma mark - unique id generation

- (NSString*)createUniqueIdfortable:(NSString*)tblname
{
    return [[NSUUID UUID] UUIDString];
}

#pragma mark - Create Notification Methods

- (NSMutableArray *)getListOfReasons :(NSString *)plantString
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select Grund, Grdtx from GETCONFIRMREASONMASTER where Werks = '%@'",plantString];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfActivityTypes:(NSDictionary *)getHeaderRelated
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select Kokrs,Latyp,Lstar,Ktext from ACTIVITYTYPEMASTER where Kokrs = '%@' and Kostl = '%@'",[getHeaderRelated objectForKey:@"workarea"],[getHeaderRelated objectForKey:@"costcenter"]];
    //[queryString appendFormat:@"select Kokrs,Latyp,Lstar,Ktext from ACTIVITYTYPEMASTER where Kokrs = '%@'",[getHeaderRelated objectForKey:@"workarea"]];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getSyncMapData :(NSString *)endPoint
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from SYNC_MAP_DATA where Endpoint = '%@' ORDER BY Zdoctype",endPoint];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getAppSettingsData
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from APPSETTINGSMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationEffect
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from NOTIFEFFECTMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationTypes
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from NOTIFICATIONTYPEMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

-(NSMutableArray *)getNotificationTypesinSingleArray{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select notificationtype_description from NOTIFICATIONTYPEMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfControlKeys
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from CONTROLKEYMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getPersonResonsibleMasterforPlant:(NSString *)plantID forWorkcenter:(NSString *)workcenterid
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    //CREATE TABLE "PERSONRESPONSIBLEMASTER" ("Werks" VARCHAR, "Arbpl" VARCHAR, "Objid" VARCHAR, "Lastname" VARCHAR, "Firstname" VARCHAR)
    
     if (plantID.length) {
        
       // [queryString appendFormat:@"select * from PERSONRESPONSIBLEMASTER where Werks='%@' or Arbpl='%@'",plantID,workcenterid];
         [queryString appendFormat:@"select * from PERSONRESPONSIBLEMASTER where Werks='%@' ORDER by Objid ASC ",plantID];

        
        }
    else{
        
        [queryString appendFormat:@"select distinct Werks,Arbpl,Objid,Lastname,Firstname from PERSONRESPONSIBLEMASTER "];
     }
    
     if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
      }
    return [NSMutableArray array];
}

- (NSMutableArray *)getPlannerGroupMasterforPlant:(NSString *)plantID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from PLANNERGROUPMASTER where Iwerk='%@'",plantID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

 


- (NSMutableArray *)getUserTokenDataArray
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from USER_TOKENIDS"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDICTIONARY];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getInspectionMeasDocsforCodegroup:(NSString *)codeGroupId
{
    
    //    CREATE TABLE "INSPECTION_MEAS_CODES" ("header_id" VARCHAR, "Codegruppe" VARCHAR, "Kurztext" VARCHAR, "Code" VARCHAR, "Kurztext1" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from INSPECTION_MEAS_CODES where Codegruppe='%@'",codeGroupId];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSString *)getImageDirectory
{
    NSString *temp=[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];
    NSString *imagePath=@"";
    
    switch (self.imagecaputreTag) {
        case 1:
            imagePath = [temp stringByAppendingPathComponent:@"NotificationImages"];
            break;
            
        default:
            break;
    }
    if (![[NSFileManager defaultManager] fileExistsAtPath:imagePath]) {
        [[NSFileManager defaultManager] createDirectoryAtPath:imagePath withIntermediateDirectories:NO attributes:Nil error:Nil];
    }
    return imagePath;
}
/*
 -(void)clearAllSubviewsForView:(UIView*)view
 {
 if ([view isKindOfClass:[UIButton class]]) {
 //        // // //shy//DLogg(@"%i",view.tag);
 [(UIButton *)view setBackgroundImage:nil forState:UIControlStateNormal];
 [(UIButton *)view setBackgroundImage:nil forState:UIControlStateSelected];
 [(UIButton *)view setBackgroundImage:nil forState:UIControlStateHighlighted];
 [(UIButton *)view setImage:nil forState:UIControlStateNormal];
 [(UIButton *)view setImage:nil forState:UIControlStateSelected];
 [(UIButton *)view setImage:nil forState:UIControlStateHighlighted];
 [(UIButton *)view removeTarget:nil action:NULL forControlEvents:UIControlEventAllEvents];
 }
 else
 if([view isKindOfClass:[UIImageView class]])
 {
 [(UIImageView*)view setImage:nil];
 //            [view removeFromSuperview]
 
 }
 
 for(UIView *temp in [view subviews])
 {
 //            // // //shy//DLogg(@"%i and %i",[view.subviews count],view.tag);
 if(temp)
 {
 if ([temp isKindOfClass:[UIButton class]]) {
 [(UIButton *)temp setBackgroundImage:nil forState:UIControlStateNormal];
 }
 
 else if([temp isKindOfClass:[UIImageView class]])
 {
 [(UIImageView*)temp setImage:nil];
 }
 if ([[temp subviews] count]) {
 [self clearAllSubviewsForView:temp];
 }
 
 [temp removeFromSuperview];
 
 }
 //            // // // //shy//DLoggg(@"%i",++x);
 }
 }*/

-(NSMutableArray *)getUserDataMasterinSingleArray{
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select distinct Iwerk, Arbpl from USERDATAMASTER"];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)getPernrFromMasterData
{
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select Pernr from USERDATAMASTER"];
    
    if ([self set_query:queryString])
    {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

//

- (NSMutableArray *)getNotifPriorityTypes
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from NOTIFICATION_PRIORITYMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

-(NSMutableArray *)getNotificationPriorityinSingleArray{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select priority_description from NOTIFICATION_PRIORITYMASTER"];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)getOrderPriorityinSingleArray{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select priority_description from ORDER_PRIORITYMASTER"];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getOrderPriorityTypes
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from ORDER_PRIORITYMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getUserData:(NSString *)str_userName
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    if ([str_userName isEqual:@""]) {
        [queryString appendFormat:@"select Kostl from USERDATAMASTER"];
    }
    else
        [queryString appendFormat:@"select Kostl from USERDATAMASTER where Muser = '%@'",[str_userName uppercaseString]];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getInspectionResultforEquipment:(NSString *)equipmentID
{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select distinct Qmnum, Aufnr, Vornr, Equnr, Mdocm, Point, Mpobj, Mpobt, Psort, Pttxt, Atinn, Idate, Itime, Mdtxt, Readr, Atbez, Msehi, Msehl, Readc, Desic, Prest, Docaf, Codct, Codgr, Vlcod, Action from NOTIFICATION_INSPECTION where Equnr = '%@' ORDER BY Idate,Itime DESC",equipmentID];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}


- (NSMutableArray *)getCostCentersList:(NSString *)plant_id
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
   // [queryString appendFormat:@"select costcenter_id,costcenter_description from COSTCENTERMASTER where plant_id = %@ ORDER BY costcenter_id ASC",plant_id];
    
     [queryString appendFormat:@"select * from COSTCENTERMASTER"];
    
 
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getAllNotifCodes
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from NOTIFICATION_COMPONENTMASTER"];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)getOrderTypesinSingleArray{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select ordertype_description from ORDERTYPEMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getOrderTypes
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from ORDERTYPEMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getWCMUsageswithPlantText:(NSString *)plantID forObject:(NSString *)objArt
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WCM_USAGES  where Iwerk ='%@' and Objart ='%@'",plantID,objArt];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getWCMUsageswithPlantTextforId:(NSString *)usageId withIwerk:(NSString *)iwerkString
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WCM_USAGES  where Use_id ='%@' and Iwerk ='%@'",usageId,iwerkString];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getWCMAuthorizationGroup
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WCM_AUTHORIZATION_GROUP"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getOrderSystemCondition
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from ORDERSYSTEMCONDITIONMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getOrderWBSElements
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from ETWBSMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getOrderRevisison
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from ETREVNRMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getAccIndicator
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from ACCINDICATORMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfPlants
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from PLANTSMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getPlantText :(NSString *)plantID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select plant_text from PLANTSMASTER where plant_id = '%@'",plantID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfStorageLocation:(NSString *)plantID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    if (plantID.length) {
        [queryString appendFormat:@"select * from STORAGELOCATIONMASTER WHERE plant_id = '%@'",plantID];
    }
    else{
        [queryString appendFormat:@"select * from STORAGELOCATIONMASTER"];
    }
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfMovementTypes
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from MOVEMENTTYPESMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfWorkCenter
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WORKCENTERMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfWorkCenterwithKeys
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WORKCENTERMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDICTIONARY];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getListOfWorkCenter:(NSString *)SelectedPlant
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WORKCENTERMASTER where plant_id ='%@'",SelectedPlant];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDICTIONARY];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationTextforId:(NSString *)notificationTypeString
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select notificationtype_description from NOTIFICATIONTYPEMASTER where notificationtype_id ='%@'",notificationTypeString];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getPlannerGroupTextforId:(NSString *)locationID ForplantId:(NSString *)plantID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select Innam from PLANNERGROUPMASTER where Ingrp ='%@' and Iwerk='%@'",locationID,plantID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
    
}

- (NSMutableArray *)getPriorityTextforId:(NSString *)priorityTypeString
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select priority_description from NOTIFICATION_PRIORITYMASTER where priority_id ='%@'",priorityTypeString];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getUnits:(NSString *)str_UnitType
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    if (str_UnitType.length ==0) {
        [queryString appendFormat:@"select unittype_description from GETUNITTYPEMASTER"];
    }
    else
        // [queryString appendFormat:@"select unittype_description from GETUNITTYPEMASTER where unittype_id = '%@'",str_UnitType];
        [queryString appendFormat:@"select unittype_id from GETUNITTYPEMASTER where unittype_description = '%@'",str_UnitType];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getComponentsForCatalogID:(NSString *)catalogID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select distinct component_id,component_description from NOTIFICATION_COMPONENTMASTER where component_catalogprofile_id = '%@'",catalogID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getCaseGroupForCatalogID:(NSString *)catalogID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct causegroup_id,causegroup_description from NOTIFICATION_CAUSEGROUPMASTER where causegroup_catalogprofile_id = '%@'",catalogID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getObjectGroupForCatalogID:(NSString *)catalogID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct objectgroup_id,objectgroup_description from NOTIFICATION_OBJECTGROUPMASTER where objectgroup_catalogprofile_id = '%@'",catalogID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}



-(NSMutableArray *)insertetMeasDocs :(NSMutableArray *)measDocsArray
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    [queryString setString:@"DELETE from INSPECTION_MEAS_CODES"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //CREATE TABLE "INSPECTION_MEAS_CODES" ("header_id" VARCHAR, "Codegruppe" VARCHAR, "Kurztext" VARCHAR, "Code" VARCHAR, "Kurztext1" VARCHAR)
    
    for (int i=0; i<[measDocsArray count]; i++) {
        
        NSArray *codesArray=[[NSArray alloc] init];
        
        codesArray=[[[measDocsArray objectAtIndex:i] objectForKey:@"Codes"] objectForKey:@"item"];
        
        for (int k=0; k<[codesArray count]; k++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into INSPECTION_MEAS_CODES (header_id, Codegruppe, Kurztext, Code, Kurztext1) values('%@','%@','%@','%@','%@')",@"",[[measDocsArray objectAtIndex:i] objectForKey:@"Codegruppe"],[[measDocsArray objectAtIndex:i] objectForKey:@"Kurztext"],[[codesArray objectAtIndex:k] objectForKey:@"Code"],[[codesArray objectAtIndex:k] objectForKey:@"Kurztext1"]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return [NSMutableArray array];
}


-(BOOL)insertintoMUserData :(NSArray *)arr_MUserData
{
    //    CREATE TABLE "MUSERDATAMASTER" ("inactive" VARCHAR, "mandt" VARCHAR, "muser" VARCHAR, "zactivity" VARCHAR, "zdoctype" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from MUSERDATAMASTER"];
    
    for (int i =0; i<[arr_MUserData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO MUSERDATAMASTER(inactive,mandt,muser,zactivity,zdoctype) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_MUserData objectAtIndex:i] objectForKey:@"Inactive"],[[arr_MUserData objectAtIndex:i] objectForKey:@"Mandt"],[[arr_MUserData objectAtIndex:i] objectForKey:@"Muser"],[[arr_MUserData objectAtIndex:i] objectForKey:@"Zactivity"],[[arr_MUserData objectAtIndex:i] objectForKey:@"Zdoctype"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoScreenUserData :(NSArray *)arr_ScreenUserData
{
    // CREATE TABLE "SCREEN_FUNCTION_DATA" ("inactive" VARCHAR, "mandt" VARCHAR, "scrlevel" VARCHAR, "scrtype" VARCHAR, "usgrp" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from SCREEN_FUNCTION_DATA"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_ScreenUserData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO SCREEN_FUNCTION_DATA(inactive,mandt,scrlevel,scrtype,usgrp) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_ScreenUserData objectAtIndex:i] objectForKey:@"Inactive"],[[arr_ScreenUserData objectAtIndex:i] objectForKey:@"Mandt"],[[arr_ScreenUserData objectAtIndex:i] objectForKey:@"Scrlevel"],[[arr_ScreenUserData objectAtIndex:i] objectForKey:@"Scrtype"],[[arr_ScreenUserData objectAtIndex:i] objectForKey:@"Usgrp"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoUserFunctionData :(NSArray *)arr_UserFunctionData
{
    // CREATE TABLE "USER_FUNCTION_DATA_MASTER" ("inactive" VARCHAR, "mandt" VARCHAR, "usgrp" VARCHAR, "zactivity" VARCHAR, "zdoctype" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from USER_FUNCTION_DATA_MASTER"];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_UserFunctionData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO USER_FUNCTION_DATA_MASTER(inactive,mandt,usgrp,zactivity,zdoctype) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_UserFunctionData objectAtIndex:i] objectForKey:@"Inactive"],[[arr_UserFunctionData objectAtIndex:i] objectForKey:@"Mandt"],[[arr_UserFunctionData objectAtIndex:i] objectForKey:@"Usgrp"],[[arr_UserFunctionData objectAtIndex:i] objectForKey:@"Zactivity"],[[arr_UserFunctionData objectAtIndex:i] objectForKey:@"Zdoctype"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}


-(void)fetchAuthorizationData
{
    NSMutableArray *mUserDetails = [NSMutableArray new];
    NSMutableArray *userFunctionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from MUSERDATAMASTER "];
    
    if ([self set_query:queryString]) {
        [mUserDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [[NSUserDefaults standardUserDefaults] setObject:[mUserDetails copy] forKey:@"MUserAuth"];
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"SELECT * from USER_FUNCTION_DATA_MASTER"];
    
    if ([self set_query:queryString]) {
        [userFunctionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [[NSUserDefaults standardUserDefaults] setObject:[mUserDetails copy] forKey:@"UserFuncAuth"];
    
    [[NSUserDefaults standardUserDefaults] synchronize];
}

- (NSMutableArray *)getOrderTypeFromNotificationType:(NSString *)notificationTypeID{
    
    NSMutableArray *orderTypeDescription = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select distinct Auart from NOTIF_ORDER_TYPE_RELATION_MASTER where Qmart = '%@'",notificationTypeID];
    
    if ([self set_query:queryString]) {
        
        NSMutableArray *orderTypeID = [NSMutableArray new];
        
        [orderTypeID addObjectsFromArray:[self run_Queries_WITHDATA_singleArray]];
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"select distinct ordertype_description from ORDERTYPEMASTER where ordertype_id = '%@'",[orderTypeID objectAtIndex:0]];
        
        if ([self set_query:queryString]) {
            
            [orderTypeDescription addObjectsFromArray:[NSMutableArray arrayWithObjects:[orderTypeID objectAtIndex:0],[self run_Queries_WITHDATA_singleArray],nil]];
        }
        
        return orderTypeDescription;
    }
    return [NSMutableArray array];
    
}

-(BOOL)deleteUserAuthorizationData{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from MUSERDATAMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"delete from USER_FUNCTION_DATA_MASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"delete from SCREEN_FUNCTION_DATA"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    [queryString setString:@""];
    
    return YES;
}

//taskgroup
- (NSMutableArray *)getTaskGroupForCatalogID:(NSString *)catalogID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    if (catalogID.length) {
        [queryString appendFormat:@"select distinct taskgroup_id,taskgroup_description from NOTIFICATION_TASKGROUPMASTER where taskgroup_catalogprofile_id = '%@'",catalogID];
    }
    else{
        [queryString appendFormat:@"select distinct taskgroup_id,taskgroup_description from NOTIFICATION_TASKGROUPMASTER"];
    }
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getComponentsForNotificationID:(NSString *)notificationID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select distinct component_id,component_description from NOTIFICATION_COMPONENTMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getActivityCodeGroups:(NSString *)catalogProfileid
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select distinct notificationa_codegruppe,notificationa_codetext from NOTIFICATION_ACTIVITY_CODEGROUP_MASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getActivityCodes:(NSString *)codeGroupID{

   NSMutableString *queryString = [[NSMutableString alloc] init];
 
   [queryString appendFormat:@"select distinct activity_id, activity_text from NOTIFICATION_ACTIVITYMASTER where code_group_id = '%@'",codeGroupID];
    
    if ([self set_query:queryString]) {
      return [self run_Queries_WITHDATA];
    }

   return [NSMutableArray array];

}

- (NSMutableArray *)getCaseGroupForNotificationID:(NSString *)notificationID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct causegroup_id,causegroup_description from NOTIFICATION_CAUSEGROUPMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getObjectGroupForNotificationID:(NSString *)notificationID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct objectgroup_id,objectgroup_description from NOTIFICATION_OBJECTGROUPMASTER"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getProblemDetailsForComponentID:(NSString *)componentID :(NSString *)notificationTypeId :(NSString *)catalogprofileId
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct problem_id,problem_description from NOTIFICATION_COMPONENT_PROBLEMMASTER where problem_component_id = '%@'",componentID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getObjectGroupDetailsForObjectGroupID:(NSString *)objectGroupID :(NSString *)notificationTypeId :(NSString *)catalogprofileId
{
    //CREATE TABLE "NOTIFICATION_OGROUP_OBJECTCODEMASTER" ("objectcode_id" VARCHAR,"objectcode_description" VARCHAR,"objectcode_ogroup_id" VARCHAR,"objectgroup_notificationtype_id" VARCHAR,"objectgroup_catalogprofile_id" VARCHAR DEFAULT (null) )
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct objectcode_id,objectcode_description from NOTIFICATION_OGROUP_OBJECTCODEMASTER where objectcode_ogroup_id = '%@'",objectGroupID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getCauseCodeForCaseGroupID:(NSString *)caseGroupID :(NSString *)notificationTypeId :(NSString *)catalogprofileId
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct causecode_id,causecode_description from NOTIFICATION_CGROUP_CAUSECODEMASTER where causecode_cgroup_id = '%@'",caseGroupID];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

//taskcodes
- (NSMutableArray *)getTaskGroupDetailsForTaskCodeID:(NSString *)taskGroupID :(NSString *)notificationTypeId :(NSString *)catalogprofileId
{
    //CREATE TABLE "NOTIFICATION_OGROUP_OBJECTCODEMASTER" ("objectcode_id" VARCHAR,"objectcode_description" VARCHAR,"objectcode_ogroup_id" VARCHAR,"objectgroup_notificationtype_id" VARCHAR,"objectgroup_catalogprofile_id" VARCHAR DEFAULT (null) )
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    if([taskGroupID length])
    {
        [queryString appendFormat:@"select distinct taskcode_id,taskcode_description from NOTIFICATION_TGROUP_TASKCODEMASTER where taskcode_tgroup_id = '%@'",taskGroupID];
    }
    else if ([notificationTypeId length])
    {
        [queryString appendFormat:@"select distinct taskcode_id,taskcode_description from NOTIFICATION_TGROUP_TASKCODEMASTER where  and taskgroup_notificationtype_id = '%@' ",notificationTypeId];
    }
    else if ([catalogprofileId length])
    {
        [queryString appendFormat:@"select distinct taskcode_id,taskcode_description from NOTIFICATION_TGROUP_TASKCODEMASTER where  taskgroup_catalogprofile_id = '%@'",catalogprofileId];
    }
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationTransactionsForNotificationHeaderID:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    [queryString appendFormat:@"select * from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",headerID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationHeaderForNotificationId:(NSString *)qmnumId
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER where nh_objectID = '%@'",qmnumId];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDICTIONARY];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getComponentsForMaterails:(NSMutableDictionary *)conditionDictionary
{
    NSArray *keyArray = [conditionDictionary allKeys];
    NSMutableString *conditionString = [[NSMutableString alloc]init];
    [conditionString appendFormat:@""];
    if ([keyArray count]) {
        if ([keyArray containsObject:@"PLANT"]) {
            [conditionString appendFormat:@"plant_id = '%@'",[conditionDictionary objectForKey:@"PLANT"]];
        }
        if ([keyArray containsObject:@"STORAGELOCATION"]) {
            
            [conditionString appendFormat:@" and storagelocation_id = '%@'",[conditionDictionary objectForKey:@"STORAGELOCATION"]];
        }
        if ([keyArray containsObject:@"MATERIALDESCRIPTION"]) {
            
            [conditionString appendFormat:@" and material_name like '%@'",[conditionDictionary objectForKey:@"MATERIALDESCRIPTION"]];
        }
    }
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    [queryString appendFormat:@"select distinct material_name, material_id from COMPONENTSMASTER where (%@)",conditionString];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getCustomFields:(NSDictionary *)searchCriteria
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    [queryString appendFormat:@"select * from CUSTOMFIELDSMASTER where doctypeitem = '%@'",[searchCriteria objectForKey:@"OBJECTTYPE"]];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationCustomFields:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    if (!headerID.length) {
        [queryString appendFormat:@"select * from NOTIFICATION_HEADER_CUSTOMFIELDS_MASTER"];
    }
    else
        [queryString appendFormat:@"select * from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@'",headerID];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}


- (NSMutableArray *)getTaksCustomFields:(NSDictionary *)searchCriteria
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    [queryString appendFormat:@"select * from CUSTOMFIELDSMASTER where doctypeitem = '%@'",[searchCriteria objectForKey:@"OBJECTTYPE"]];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

-(NSMutableArray *)getEndPointURL:(NSDictionary *)endPoint{
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    
    if (![[endPoint objectForKey:@"ACTIVITY"] isEqualToString:@""]) {
        
        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = '%@' and Zactivity = '%@' and Zdoctype = '%@' ",[endPoint objectForKey:@"ENDPOINT"],[endPoint objectForKey:@"ACTIVITY"],[endPoint objectForKey:@"DOCTYPE"]];
    }
    else{
        
        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = '%@' and Zactivity = '%@' ",[endPoint objectForKey:@"ENDPOINT"],[endPoint objectForKey:@"DOCTYPE"]];
        
    }
    
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getNotificationTransactionCustomFields:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    if (!headerID.length) {
        [queryString appendFormat:@"select * from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_MASTER"];
    }
    else
        [queryString appendFormat:@"select * from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@'",headerID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableArray *)deleteinsertDataIntoHeader:(NSString *)headerIDType{
    
    NSMutableString *queryString = [NSMutableString new];
    //NSMutableArray *fetchedData = [NSMutableArray new];
    if ([headerIDType isEqualToString:@"N"]) {
        //
        //        [queryString setString:@""];
        //        [queryString appendFormat:@"select notificationh_id from NOTIFICATION_HEADER where nh_sync_status !='New' and notificationh_status = 'DUE'"];
        //
        //        if ([self set_query:queryString]) {
        //
        //            [fetchedData addObjectsFromArray:[self run_Queries_WITHDATA]];
        //        }
        //
        //         NSMutableString *massDeletion = [NSMutableString new];
        //
        //         for (NSArray *inOperatorArray in fetchedData) {
        //         [massDeletion appendString:[[NSString alloc] initWithFormat:@"'%@', ", [inOperatorArray objectAtIndex:0]]];
        //         }
        //
        //         // for (int i =0; i<[fetchedData count]; i++) {
        //         [queryString setString:@""];
        //         if([massDeletion length] >0)
        //         {
        //         [massDeletion setString:[massDeletion substringToIndex:[massDeletion length] - 2]];
        //         }
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER_CUSTOMFIELDS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TASKS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTFICATION_TASKS_CUSTOMFIELDS_COPY"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
    }
    else if ([headerIDType isEqualToString:@"O"]){
        
        //        [queryString setString:@""];
        //
        //        [queryString appendFormat:@"select * orderh_id from ORDER_HEADER"];
        //
        //        if ([self set_query:queryString]) {
        //
        //            [fetchedData addObjectsFromArray:[self run_Queries_WITHDATA]];
        //        }
        //
        //
        //        NSMutableString *massDeletion = [NSMutableString new];
        //
        //        for (NSArray *inOperatorArray in fetchedData) {
        //            [massDeletion appendString:[[NSString alloc] initWithFormat:@"'%@', ", [inOperatorArray objectAtIndex:0]]];
        //        }
        //
        //        // for (int i =0; i<[fetchedData count]; i++) {
        //        [queryString setString:@""];
        //        if([massDeletion length] >0)
        //        {
        //            [massDeletion setString:[massDeletion substringToIndex:[massDeletion length] - 2]];
        //        }
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_ATTACHMENTS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_TRANSACTION"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS"];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)deleteinsertedDataForTheSelectedCriteria:(NSDictionary *)selectedCriteriaDictionary{
    
    NSArray *keyArray = [selectedCriteriaDictionary allKeys];
    NSMutableArray *fetchedData = [NSMutableArray new];
    if ([[selectedCriteriaDictionary objectForKey:@"TYPE"] isEqualToString:@"N"]) {
        NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct notificationh_id from NOTIFICATION_HEADER where (nh_sync_status !='New' and"];
        
        NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
        if ([keyArray count]) {
            if ([keyArray containsObject:@"COMPLETE"]) {
                [queryString appendString:@" notificationh_status = 'OPEN')"];
            }
            else if ([keyArray containsObject:@"DUE"]){
                
                [queryString appendString:@" notificationh_status = 'DUE')"];
                
            }
            else
            {
                [queryString appendString:@" )"];
            }
            NSArray *dataArray;
            for (int i=0; i <[keyArray count]; i++) {
                
                if ([[keyArray objectAtIndex:i] isEqualToString:@"NTYPENAME"]) {
                    if (conditionString.length) {
                        [conditionString appendString:@" and "];
                    }
                    [conditionString appendFormat:@"notificationh_type_name like '%@'",[selectedCriteriaDictionary objectForKey:@"NTYPENAME"]];
                }
                else if ([[keyArray objectAtIndex:i] isEqualToString:@"NTYPEID"]) {
                    if (conditionString.length) {
                        [conditionString appendString:@" and "];
                    }
                    [conditionString appendFormat:@" notificationh_type_id = '%@'",[selectedCriteriaDictionary objectForKey:@"NTYPEID"]];
                }
                else if ([[keyArray objectAtIndex:i] isEqualToString:@"NNOTIFNO"]){
                    if (conditionString.length) {
                        [conditionString appendString:@" and "];
                    }
                    dataArray = [selectedCriteriaDictionary objectForKeyedSubscript:@"NNOTIFNO"];
                    switch ([dataArray count]) {
                        case 1:
                            [conditionString appendFormat:@" nh_objectID = '%@'",[dataArray firstObject]];
                            break;
                        case 2:
                            [conditionString appendFormat:@" nh_objectID between '%@' and '%@'",[dataArray firstObject],[dataArray lastObject]];
                            break;
                        default:
                            break;
                    }
                }
                //                else if ([[keyArray objectAtIndex:i] isEqualToString:@"NNOTIFNO"]){
                //                    if (conditionString.length) {
                //                        [conditionString appendString:@" and "];
                //                    }
                //                    [conditionString appendFormat:@" nh_objectID = '%@'",[selectedCriteriaDictionary objectForKey:@"NNOTIFNO"]];
                //                }
                else if ([[keyArray objectAtIndex:i] isEqualToString:@"DATE"]) {
                    if (conditionString.length) {
                        [conditionString appendString:@" and "];
                    }
                    dataArray = [selectedCriteriaDictionary objectForKeyedSubscript:@"DATE"];
                    switch ([dataArray count]) {
                        case 1:
                            [conditionString appendFormat:@" notificationh_startdate = '%@'",[dataArray firstObject]];
                            break;
                        case 2:
                            [conditionString appendFormat:@" notificationh_startdate between '%@' and '%@'",[dataArray firstObject],[dataArray lastObject]];
                            break;
                        default:
                            break;
                    }
                }
                else if ([[keyArray objectAtIndex:i] isEqualToString:@"NFLOCATION"]) {
                    if (conditionString.length) {
                        [conditionString appendString:@" and "];
                    }
                    dataArray = [selectedCriteriaDictionary objectForKeyedSubscript:@"NFLOCATION"];
                    switch ([dataArray count]) {
                        case 1:
                            [conditionString appendFormat:@" notificationh_funcloc_name = '%@'",[dataArray firstObject]];
                            break;
                        case 2:
                            [conditionString appendFormat:@" notificationh_funcloc_name between '%@' and '%@'",[dataArray firstObject],[dataArray lastObject]];
                            break;
                        default:
                            break;
                    }
                }
                else if ([[keyArray objectAtIndex:i] isEqualToString:@"NEQUIPMENTNAME"]) {
                    if (conditionString.length) {
                        [conditionString appendString:@" and "];
                    }
                    dataArray = [selectedCriteriaDictionary objectForKeyedSubscript:@"NEQUIPMENTNAME"];
                    switch ([dataArray count]) {
                        case 1:
                            [conditionString appendFormat:@" notificationh_equip_name = '%@'",[dataArray firstObject]];
                            break;
                        case 2:
                            [conditionString appendFormat:@" notificationh_equip_name between '%@' and '%@'",[dataArray firstObject],[dataArray lastObject]];
                            break;
                        default:
                            break;
                    }
                }
                else if ([[keyArray objectAtIndex:i] isEqualToString:@"COMPLETE"])
                {
                    
                }
                else if([[keyArray objectAtIndex:i] isEqualToString:@"OBJECTID"])
                {
                    [conditionString appendString:@" and nh_objectid != ''"];
                }
            }
        }
        else
        {
            [queryString appendString:@")"];
        }
        if ([keyArray containsObject:@"COLOUMN"]){
            [conditionString appendFormat:@" ORDER BY %@ %@",[selectedCriteriaDictionary objectForKey:@"COLOUMN"],[selectedCriteriaDictionary objectForKey:@"SORT"]];
        }
        
        if ([selectedCriteriaDictionary count]) {
            [queryString appendFormat:@" %@",conditionString];
        }
        /* if ([keyArray count]) {
         if ([keyArray containsObject:@"COMPLETE"]) {
         [queryString appendString:@" orderh_status = 'P' or orderh_status = 'S' or orderh_status = 'C')"];
         }
         else if ([keyArray containsObject:@"DUE"]){
         [queryString appendString:@" orderh_status = 'DO')"];
         }
         else
         {
         [queryString appendString:@" )"];
         }
         NSArray *dataArray;
         for (int i=0; i <[keyArray count]; i++) {
         
         if ([[keyArray objectAtIndex:i] isEqualToString:@"OTYPENAME"]) {
         if (conditionString.length) {
         [conditionString appendString:@" and "];
         }
         [conditionString appendFormat:@"orderh_type_name like '%@'",[selectedCriteriaDictionary objectForKey:@"OTYPENAME"]];
         }
         else
         if ([[keyArray objectAtIndex:i] isEqualToString:@"OTYPEID"]) {
         if (conditionString.length) {
         [conditionString appendString:@" and "];
         }
         [conditionString appendFormat:@" orderh_type_id = '%@'",[selectedCriteriaDictionary objectForKey:@"OTYPEID"]];
         }
         else if ([[keyArray objectAtIndex:i] isEqualToString:@"DATE"]) {
         if (conditionString.length) {
         [conditionString appendString:@" and "];
         }
         dataArray = [selectedCriteriaDictionary objectForKeyedSubscript:@"DATE"];
         switch ([dataArray count]) {
         case 1:
         [conditionString appendFormat:@" orderh_startdate = '%@'",[dataArray firstObject]];
         break;
         case 2:
         [conditionString appendFormat:@" orderh_startdate between '%@' and '%@'",[dataArray firstObject],[dataArray lastObject]];
         break;
         default:
         break;
         }
         }
         else if ([[keyArray objectAtIndex:i] isEqualToString:@"OFLOCATION"]) {
         if (conditionString.length) {
         [conditionString appendString:@" and "];
         }
         [conditionString appendFormat:@" orderh_funcloc_name like '%@'",[[selectedCriteriaDictionary objectForKey:@"OFLOCATION"] stringByAppendingString:@"%"]];
         }
         else if ([[keyArray objectAtIndex:i] isEqualToString:@"OEQUIPMENTNAME"]) {
         if (conditionString.length) {
         [conditionString appendString:@" and "];
         }
         [conditionString appendFormat:@"orderh_equip_name like '%@'",[[selectedCriteriaDictionary objectForKey:@"OEQUIPMENTNAME"] stringByAppendingString:@"%"]];
         }
         else if ([[keyArray objectAtIndex:i] isEqualToString:@"COMPLETE"])
         {
         
         }
         else if([[keyArray objectAtIndex:i] isEqualToString:@"OBJECTID"])
         {
         [conditionString appendString:@" and oh_objectid != ''"];
         }
         }
         }
         else
         {
         [queryString appendString:@")"];
         }
         
         if ([keyArray containsObject:@"COLOUMN"]){
         [conditionString appendFormat:@" ORDER BY %@ %@",[selectedCriteriaDictionary objectForKey:@"COLOUMN"],[selectedCriteriaDictionary objectForKey:@"SORT"]];
         }
         
         if ([selectedCriteriaDictionary count]) {
         [queryString appendFormat:@" %@",conditionString];
         }*/
        if([self set_query:queryString])
        {
            [fetchedData addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        NSMutableString *massDeletion = [NSMutableString new];
        
        for (NSArray *inOperatorArray in fetchedData) {
            [massDeletion appendString:[[NSString alloc] initWithFormat:@"'%@', ", [inOperatorArray objectAtIndex:0]]];
        }
        
        // for (int i =0; i<[fetchedData count]; i++) {
        [queryString setString:@""];
        if([massDeletion length] >0)
        {
            [massDeletion setString:[massDeletion substringToIndex:[massDeletion length] - 2]];
        }
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id IN (%@)",massDeletion];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id IN (%@)",massDeletion];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_header_id IN (%@)",massDeletion];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id IN (%@)",massDeletion];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS where notificationa_header_id IN (%@)",massDeletion];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
    }
    else
        if ([[selectedCriteriaDictionary objectForKey:@"TYPE"] isEqualToString:@"O"]) {
            
            NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct orderh_id from ORDER_HEADER where (oh_sync_status !='New' and"];
            
            NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
            if ([keyArray count]) {
                if ([keyArray containsObject:@"COMPLETE"]) {
                    [queryString appendString:@" orderh_status = 'OPEN')"];
                }
                else if ([keyArray containsObject:@"DUE"]){
                    [queryString appendString:@" orderh_status = 'DUE')"];
                }
                else
                {
                    [queryString appendString:@" )"];
                }
                NSArray *dataArray;
                for (int i=0; i <[keyArray count]; i++) {
                    
                    if ([[keyArray objectAtIndex:i] isEqualToString:@"OTYPENAME"]) {
                        if (conditionString.length) {
                            [conditionString appendString:@" and "];
                        }
                        [conditionString appendFormat:@"orderh_type_name like '%@'",[selectedCriteriaDictionary objectForKey:@"OTYPENAME"]];
                    }
                    else
                        if ([[keyArray objectAtIndex:i] isEqualToString:@"OTYPEID"]) {
                            if (conditionString.length) {
                                [conditionString appendString:@" and "];
                            }
                            [conditionString appendFormat:@" orderh_type_id = '%@'",[selectedCriteriaDictionary objectForKey:@"OTYPEID"]];
                        }
                        else if ([[keyArray objectAtIndex:i] isEqualToString:@"DATE"]) {
                            if (conditionString.length) {
                                [conditionString appendString:@" and "];
                            }
                            dataArray = [selectedCriteriaDictionary objectForKeyedSubscript:@"DATE"];
                            switch ([dataArray count]) {
                                case 1:
                                    [conditionString appendFormat:@" orderh_startdate = '%@'",[dataArray firstObject]];
                                    break;
                                case 2:
                                    [conditionString appendFormat:@" orderh_startdate between '%@' and '%@'",[dataArray firstObject],[dataArray lastObject]];
                                    break;
                                default:
                                    break;
                            }
                        }
                        else if ([[keyArray objectAtIndex:i] isEqualToString:@"OFLOCATION"]) {
                            if (conditionString.length) {
                                [conditionString appendString:@" and "];
                            }
                            [conditionString appendFormat:@" orderh_funcloc_name like '%@'",[[selectedCriteriaDictionary objectForKey:@"OFLOCATION"] stringByAppendingString:@"%"]];
                        }
                        else if ([[keyArray objectAtIndex:i] isEqualToString:@"OEQUIPMENTNAME"]) {
                            if (conditionString.length) {
                                [conditionString appendString:@" and "];
                            }
                            [conditionString appendFormat:@"orderh_equip_name like '%@'",[[selectedCriteriaDictionary objectForKey:@"OEQUIPMENTNAME"] stringByAppendingString:@"%"]];
                        }
                        else if ([[keyArray objectAtIndex:i] isEqualToString:@"COMPLETE"])
                        {
                            
                        }
                        else if([[keyArray objectAtIndex:i] isEqualToString:@"OBJECTID"])
                        {
                            [conditionString appendString:@" and oh_objectid != ''"];
                        }
                }
            }
            else
            {
                [queryString appendString:@")"];
            }
            
            if ([keyArray containsObject:@"COLOUMN"]){
                [conditionString appendFormat:@" ORDER BY %@ %@",[selectedCriteriaDictionary objectForKey:@"COLOUMN"],[selectedCriteriaDictionary objectForKey:@"SORT"]];
            }
            
            if ([selectedCriteriaDictionary count]) {
                [queryString appendFormat:@" %@",conditionString];
            }
            if([self set_query:queryString])
            {
                [fetchedData addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            
            NSMutableString *massDeletion = [NSMutableString new];
            
            for (NSArray *inOperatorArray in fetchedData) {
                [massDeletion appendString:[[NSString alloc] initWithFormat:@"'%@', ", [inOperatorArray objectAtIndex:0]]];
            }
            
            // for (int i =0; i<[fetchedData count]; i++) {
            [queryString setString:@""];
            if([massDeletion length] >0)
            {
                [massDeletion setString:[massDeletion substringToIndex:[massDeletion length] - 2]];
            }
            [queryString setString:@""];
            [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id IN (%@)",massDeletion];
            [self set_query:queryString];
            if (![self run_Queries_NODATA]) {
                NSLog(@"Cannot delete");
            }
            
            [queryString setString:@""];
            [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id IN (%@)",massDeletion];
            [self set_query:queryString];
            if (![self run_Queries_NODATA]) {
                NSLog(@"Cannot delete");
            }
            
            [queryString setString:@""];
            [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT where orderp_header_id IN (%@)",massDeletion];
            [self set_query:queryString];
            if (![self run_Queries_NODATA]) {
                NSLog(@"Cannot delete");
            }
            
            [queryString setString:@""];
            [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id IN (%@)",massDeletion];
            [self set_query:queryString];
            if (![self run_Queries_NODATA]) {
                NSLog(@"Cannot delete");
            }
        }
    
    return [NSMutableArray array];
}

//add notif tasks//add notif tasks
-(NSMutableArray *)insertNotificationTasks:(NSDictionary *)taskDetails withCustomFields:(NSMutableArray *)customFields{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    NSArray *taskCodeDetails = [taskDetails objectForKey:@"TASKS"];
    
    
    [queryString appendFormat:@"insert into NOTIFICATION_TASKS_COPY (notificationt_header_id, notificationt_taskkey, notificationt_tgroup_id, notificationt_tgroup_name, notificationt_tcode_id, notificationt_tcode_name, notificationt_Description, notificationt_tprocessor_id, notificationt_tprocessor_name, notificationt_response_name, notificationt_planned_startdate, notificatont_planned_finishdate, notificatont_release_status, notificatont_complete_status, notificatont_success_status, notificationt_itemkey,notificationt_item_status,notificationt_item_partgrp_id,notificationt_item_partgrp_name,notificationt_item_partcode_id,notificationt_item_partcode_name,notificationt_item_defectgrp_id,notificationt_item_defectgrp_name,notificationt_item_defectcode_id,notificationt_item_defectcode_name,notificationt_item_defectshtxt,notificationt_item_userstatus,notificationt_item_systemstatus,notificationt_item_smsttxt,notificationt_item_smastxt,notificationt_item_usr01,notificationt_item_usr02,notificationt_item_usr03,notificationt_item_usr04,notificationt_item_usr05,notificationt_planned_stime,notificationt_planned_ftime,notificationt_completion_date,notificationt_completion_time,notificationt_completed_by) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[taskDetails objectForKey:@"ID"],[taskCodeDetails objectAtIndex:2],[taskCodeDetails objectAtIndex:3],[taskCodeDetails objectAtIndex:4],[taskCodeDetails objectAtIndex:5],[taskCodeDetails objectAtIndex:6],[taskCodeDetails objectAtIndex:7],[taskCodeDetails objectAtIndex:8],[taskCodeDetails objectAtIndex:9],[taskCodeDetails objectAtIndex:10],[taskCodeDetails objectAtIndex:11],[taskCodeDetails objectAtIndex:12],[taskCodeDetails objectAtIndex:13],[taskCodeDetails objectAtIndex:14],[taskCodeDetails objectAtIndex:15],[taskCodeDetails objectAtIndex:16],[taskCodeDetails objectAtIndex:17],[taskCodeDetails objectAtIndex:18],[taskCodeDetails objectAtIndex:19],[taskCodeDetails objectAtIndex:20],[taskCodeDetails objectAtIndex:21],[taskCodeDetails objectAtIndex:22],[taskCodeDetails objectAtIndex:23],[taskCodeDetails objectAtIndex:24],[taskCodeDetails objectAtIndex:25],[taskCodeDetails objectAtIndex:26],[taskCodeDetails objectAtIndex:27],[taskCodeDetails objectAtIndex:28],[taskCodeDetails objectAtIndex:29],[taskCodeDetails objectAtIndex:30],[taskCodeDetails objectAtIndex:31],[taskCodeDetails objectAtIndex:32],[taskCodeDetails objectAtIndex:33],[taskCodeDetails objectAtIndex:34],[taskCodeDetails objectAtIndex:35],[taskCodeDetails objectAtIndex:36],[taskCodeDetails objectAtIndex:37],[taskCodeDetails objectAtIndex:38],[taskCodeDetails objectAtIndex:39],[taskCodeDetails objectAtIndex:40]];
    
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
        }
    }
    
    for (int x=0; x<[customFields count]; x++) {
        [queryString setString:@""];
        
        //    CREATE TABLE "NOTFICATION_TASKS_CUSTOMFIELDS_COPY" ("notificationt_id" VARCHAR, "notificationt_itemkey" VARCHAR, "notificationt_taskkey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR, "tabname" VARCHAR, "fieldname" VARCHAR, "value" VARCHAR, "label" VARCHAR, "datatype" VARCHAR, "sequence" VARCHAR, "length" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTFICATION_TASKS_CUSTOMFIELDS_COPY(notificationt_id,  notificationt_itemkey, notificationt_taskkey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[taskDetails objectForKey:@"ID"],[taskCodeDetails objectAtIndex:16],[taskCodeDetails objectAtIndex:3]];
        
        for (int y=0; y<[[customFields objectAtIndex:x] count]; y++) {
            [queryString appendFormat:@",'%@'",[[customFields objectAtIndex:x] objectAtIndex:y]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    
    return [NSMutableArray array];
}

//TASK CODE
-(NSMutableArray *)updateNotificationTasks:(NSDictionary *)taskDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //CREATE TABLE "NOTIFICATION_TASKS_COPY" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_taskkey" VARCHAR,"notificationt_tgroup_id" VARCHAR,"notificationt_tgroup_name" VARCHAR,"notificationt_tcode_id" VARCHAR,"notificationt_tcode_name" ,"notificationt_Description" VARCHAR NOT NULL ,"notificationt_tprocessor_id" VARCHAR NOT NULL ,"notificationt_tprocessor_name" VARCHAR NOT NULL ,"notificationt_response_name" VARCHAR,"notificationt_planned_startdate" VARCHAR,"notificatont_planned_finishdate" VARCHAR,"notificatont_release_status" VARCHAR,"notificatont_complete_status" VARCHAR,"notificatont_success_status" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_item_status" VARCHAR,"notificationt_item_partgrp_id" VARCHAR DEFAULT (null) ,"notificationt_item_partgrp_name" VARCHAR,"notificationt_item_partcode_id" VARCHAR,"notificationt_item_partcode_name" VARCHAR,"notificationt_item_defectgrp_id" VARCHAR DEFAULT (null) , "notificationt_item_defectgrp_name" VARCHAR, "notificationt_item_defectcode_id" VARCHAR, "notificationt_item_defectcode_name" VARCHAR, "notificationt_item_defectshtxt" VARCHAR, "notificationt_item_userstatus" VARCHAR, "notificationt_item_systemstatus" VARCHAR, "notificationt_item_smsttxt" VARCHAR, "notificationt_item_smastxt" VARCHAR, "notificationt_item_usr01" VARCHAR, "notificationt_item_usr02" VARCHAR, "notificationt_item_usr03" VARCHAR, "notificationt_item_usr04" VARCHAR, "notificationt_item_usr05" VARCHAR)
    
    [queryString appendFormat:@"update NOTIFICATION_TASKS_COPY set notificationt_tgroup_id = '%@', notificationt_tgroup_name = '%@', notificationt_tcode_id = '%@', notificationt_tcode_name = '%@', notificationt_Description = '%@', notificationt_tprocessor_id = '%@', notificationt_tprocessor_name = '%@', notificationt_response_name = '%@', notificationt_planned_startdate = '%@', notificatont_planned_finishdate = '%@', notificatont_release_status = '%@', notificatont_complete_status = '%@', notificatont_success_status = '%@', notificationt_item_status = '%@' where notificationt_header_id = '%@' and notificationt_taskkey = '%@'",[taskDetails objectForKey:@"GROUPID"],[taskDetails objectForKey:@"GROUPNAME"],[taskDetails objectForKey:@"TASKCODE"],[taskDetails objectForKey:@"TASKNAME"],[taskDetails objectForKey:@"DESCRIPTION"],[taskDetails objectForKey:@"PROCESSORID"],[taskDetails objectForKey:@"PROCESSORNAME"],[taskDetails objectForKey:@"RESPONSENAME"],[taskDetails objectForKey:@"STARTDATE"],[taskDetails objectForKey:@"FINISHEDDATE"],[taskDetails objectForKey:@"RELEASE"],[taskDetails objectForKey:@"COMPLETE"],[taskDetails objectForKey:@"SUCCESS"],[taskDetails objectForKey:@"TASKSTATUS"],[taskDetails objectForKey:@"ID"],[taskDetails objectForKey:@"TASKKEY"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

- (NSString *)insertDataIntoNotificationHeader:(NSDictionary *)notificationHeaderDetails withAttachments:(NSMutableArray *)attachments withTransaction:(NSMutableArray *)notificationTransactionDetails alongwithOrder:(NSDictionary *)orderHeaderDetails withAttachments:(NSMutableArray *)attachmentDetails withPermits:(NSMutableArray *)permitDetails withTransaction:(NSMutableArray *)orderTransactionDetails
{
    //For Notification Header
    NSMutableString *queryString = [NSMutableString new];
    BOOL isNew = YES;
    if ([[notificationHeaderDetails objectForKey:@"ID"] length]) {
        isNew = NO;
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id = '%@'",[notificationHeaderDetails objectForKey:@"ID"]];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the notification";
        }
    }
    else
    {
        [notificationHeaderDetails setValue:[self createUniqueIdfortable:@"NTH"] forKey:@"ID"];
    }
    
    NSString *objectIDStr = @"";
    if ([notificationHeaderDetails objectForKey:@"OBJECTID"]) {
        objectIDStr = [notificationHeaderDetails objectForKey:@"OBJECTID"];
    }
    
    [queryString setString:@""];
    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    [queryString appendFormat:@"insert into NOTIFICATION_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[notificationHeaderDetails objectForKey:@"ID"],[notificationHeaderDetails objectForKey:@"NID"],[notificationHeaderDetails objectForKey:@"NNAME"],[notificationHeaderDetails objectForKey:@"SHORTTEXT"],[notificationHeaderDetails objectForKey:@"LONGTEXT"],[notificationHeaderDetails objectForKey:@"FID"],[notificationHeaderDetails objectForKey:@"FNAME"],[notificationHeaderDetails objectForKey:@"EQID"],[notificationHeaderDetails objectForKey:@"EQNAME"],[notificationHeaderDetails objectForKey:@"NPID"],[notificationHeaderDetails objectForKey:@"NPNAME"],[notificationHeaderDetails objectForKey:@"SDATE"],[notificationHeaderDetails objectForKey:@"EDATE"],[notificationHeaderDetails objectForKey:@"BREAKDOWN"],[notificationHeaderDetails objectForKey:@"PLANTID"],[notificationHeaderDetails objectForKey:@"PLANTNAME"],[notificationHeaderDetails objectForKey:@"WORKCENTERID"],[notificationHeaderDetails objectForKey:@"WORKCENTERNAME"],[notificationHeaderDetails objectForKey:@"LATITUDE"],[notificationHeaderDetails objectForKey:@"LONGITUDE"],[notificationHeaderDetails objectForKey:@"ALTITUDE"],[notificationHeaderDetails objectForKey:@"NSTATUS"],[notificationHeaderDetails objectForKey:@"REPORTEDBY"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[notificationHeaderDetails objectForKey:@"DOCS"]];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the notification";
        }
    }
    else
    {
        return @"Cannot update the notification";
    }
    
    id equipmentHistory;
    if ([[notificationHeaderDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
        equipmentHistory = [notificationHeaderDetails objectForKey:@"EQUIPMENTHISTORY"];
    }
    
    //For Notification Header Equipments Fields.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where notificationh_id = '%@' ",[notificationHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[equipmentHistory count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_HEADER_EQUIPMENTS_HISTORY" ("notificationh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
         */
        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_EQUIPMENTS_HISTORY(notificationh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[notificationHeaderDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    id customHeaderFields = [notificationHeaderDetails objectForKey:@"CFH"];
    
    //For Notification Header Custom Fields.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@' ",[notificationHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[customHeaderFields count]; i++) {
        [queryString setString:@""];
        //CREATE TABLE "NOTIFICATION_HEADER_CUSTOMFIELDS" ("notificationh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_CUSTOMFIELDS(notificationh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[notificationHeaderDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Notification Header Attachments.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS where notificationa_header_id = '%@' ",[notificationHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[attachments count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_ATTACHMENTS" ("notificationa_header_id" VARCHAR,"notificationa_doc_id" VARCHAR ,"notificationa_doc_type" VARCHAR, "notificationa_file_name" VARCHAR, "notificationa_file_type" VARCHAR, "notificationa_file_size" VARCHAR, "notificationa_obj_type" VARCHAR, "notificationa_file_content" VARCHAR, "notificationa_action" VARCHAR)
         */
        [queryString appendFormat:@"insert into NOTIFICATION_ATTACHMENTS(notificationa_header_id, notificationa_doc_id, notificationa_doc_type, notificationa_file_name, notificationa_file_type, notificationa_file_size, notificationa_obj_type, notificationa_file_content, notificationa_action) values('%@'",[notificationHeaderDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[attachments objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[attachments objectAtIndex:i] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Notification Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",[notificationHeaderDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //For Notification Transaction Custom Fields
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@' ",[notificationHeaderDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[notificationTransactionDetails count]; i++) {
        [queryString setString:@""];
        //CREATE TABLE "NOTIFICATION_TRANSACTION" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_component_id" VARCHAR,"notificationt_component_name" VARCHAR,"notificationt_problem_id" VARCHAR,"notificationt_problem_name" VARCHAR,"notificationt_causegroup_id" VARCHAR,"notificationt_causegroup_name" VARCHAR,"notificationt_causecode_id" VARCHAR,"notificationt_causecode_name" VARCHAR,"notificatont_description" VARCHAR,"notificatont_causecode_description" VARCHAR DEFAULT (null) ,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR,"notificationt_compstatus" VARCHAR,"notificationt_itemstatus" VARCHAR,"notificationt_objectpartgroup" VARCHAR,"notificationt_objectpart" VARCHAR DEFAULT (null) )
        
        [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION(notificationt_header_id, notificationt_component_id, notificationt_component_name, notificationt_problem_id, notificationt_problem_name, notificationt_causegroup_id, notificationt_causegroup_name, notificationt_causecode_id, notificationt_causecode_name,notificatont_description,notificatont_causecode_description,notificationt_itemkey,notificationt_causekey,notificationt_compstatus,notificationt_itemstatus,notificationt_objectpartgroup,notificationt_objectpart,notificationt_objectpartgroup_text,notificationt_objectpart_text) values('%@'",[notificationHeaderDetails objectForKey:@"ID"]];
        
        for (int j=2; j<[[[notificationTransactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[notificationTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customDamageTransactionFields,customCauseTransactionFields;
        
        if ([[notificationTransactionDetails objectAtIndex:i] count]>1) {
            customDamageTransactionFields = [[notificationTransactionDetails objectAtIndex:i] objectAtIndex:1];
            customCauseTransactionFields = [[notificationTransactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customDamageTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[notificationHeaderDetails objectForKey:@"ID"],[[[notificationTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[notificationTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
            
            for (int y=0; y<[[customDamageTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customDamageTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
        
        for (int x=0; x<[customCauseTransactionFields count]; x++) {
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[notificationHeaderDetails objectForKey:@"ID"],[[[notificationTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[notificationTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
            
            for (int y=0; y<[[customCauseTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customCauseTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //isNew = YES;
    if ([[orderHeaderDetails objectForKey:@"ID"] length]) {
        isNew = NO;
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",[orderHeaderDetails objectForKey:@"ID"]];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the Order";
        }
    }
    else
    {
        [orderHeaderDetails setValue:[self createUniqueIdfortable:@"OTH"] forKey:@"ID"];
    }
    
    objectIDStr = @"";
    if ([orderHeaderDetails objectForKey:@"OBJECTID"]) {
        objectIDStr = [orderHeaderDetails objectForKey:@"OBJECTID"];
    }
    
    [queryString setString:@""];
    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    [queryString appendFormat:@"insert into ORDER_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[orderHeaderDetails objectForKey:@"ID"],[orderHeaderDetails objectForKey:@"OID"],[orderHeaderDetails objectForKey:@"ONAME"],[orderHeaderDetails objectForKey:@"OSHORTTEXT"],[orderHeaderDetails objectForKey:@"OLONGTEXT"],[orderHeaderDetails objectForKey:@"OFID"],[orderHeaderDetails objectForKey:@"OFNAME"],[orderHeaderDetails objectForKey:@"OEQID"],[orderHeaderDetails objectForKey:@"OEQNAME"],[orderHeaderDetails objectForKey:@"ACCINCID"],[orderHeaderDetails objectForKey:@"ACCINCNAME"],[orderHeaderDetails objectForKey:@"OPID"],[orderHeaderDetails objectForKey:@"OPNAME"],[orderHeaderDetails objectForKey:@"OSDATE"],[orderHeaderDetails objectForKey:@"OEDATE"],[orderHeaderDetails objectForKey:@"OPLANTID"],[orderHeaderDetails objectForKey:@"OPLANTNAME"],[orderHeaderDetails objectForKey:@"OWORKCENTERID"],[orderHeaderDetails objectForKey:@"OWORKCENTERNAME"],[orderHeaderDetails objectForKey:@"LATITUDE"],[orderHeaderDetails objectForKey:@"LONGITUDE"],[orderHeaderDetails objectForKey:@"ALTITUDE"],[orderHeaderDetails objectForKey:@"REPORTEDBY"],[orderHeaderDetails objectForKey:@"OSTATUS"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[orderHeaderDetails objectForKey:@"ODOCS"],[orderHeaderDetails objectForKey:@"OSYNCSTATUS"]];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the Order";
        }
    }
    else
    {
        return @"Cannot update the Order";
    }
    
    if ([[orderHeaderDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
        //For Order Attachments.
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@' ",[orderHeaderDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        equipmentHistory = [orderHeaderDetails objectForKey:@"EQUIPMENTHISTORY"];
    }
    
    for (int i =0; i<[equipmentHistory count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_HEADER_EQUIPMENTS_HISTORY" ("orderh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_HEADER_EQUIPMENTS_HISTORY(orderh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[orderHeaderDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    customHeaderFields = [orderHeaderDetails objectForKey:@"OCFH"];
    if ([customHeaderFields count]) {
        //For Order Header Custom Fields.
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@' ",[orderHeaderDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        //For Order Header Custom Fields
        for (int i=0; i<[customHeaderFields count]; i++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_HEADER_CUSTOMFIELDS" ("orderh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            [queryString appendFormat:@"insert into ORDER_HEADER_CUSTOMFIELDS(orderh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[orderHeaderDetails objectForKey:@"ID"]];
            
            for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
                [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For Order Attachments.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@' ",[orderHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[attachmentDetails count]; i++) {
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_ATTACHMENTS" ("ordera_header_id" VARCHAR,"ordera_doc_id" VARCHAR ,"ordera_doc_type" VARCHAR, "ordera_file_name" VARCHAR, "ordera_file_type" VARCHAR, "ordera_file_size" VARCHAR, "ordera_obj_type" VARCHAR, "ordera_file_content" VARCHAR, "ordera_action" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_ATTACHMENTS(ordera_header_id, ordera_doc_id, ordera_doc_type, ordera_file_name, ordera_file_type, ordera_file_size, ordera_obj_type, ordera_file_content, ordera_action) values('%@'",[orderHeaderDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[attachmentDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[attachmentDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    ////////////////////
    
    //For Order Permits.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT where orderp_header_id = '%@' ",[orderHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    if ([permitDetails count]) {
        
        for (int i =0; i<[permitDetails count]; i++) {
            [queryString setString:@""];
            /*
             CREATE TABLE "ORDER_HEADER_PERMIT" ("orderp_header_id" VARCHAR, "orderp_permit_id" VARCHAR, "orderp_permit_name" VARCHAR, "orderp_relase_id" VARCHAR, "orderp_complete_id" VARCHAR, "orderp_notrelavent_id" VARCHAR, "orderp_issuedby_id" VARCHAR, "orderp_issuedby_name" VARCHAR, "orderp_action" VARCHAR)
             */
            [queryString appendFormat:@"insert into ORDER_HEADER_PERMIT(orderp_header_id, orderp_permit_id, orderp_permit_name, orderp_relase_id, orderp_complete_id, orderp_notrelavent_id, orderp_issuedby_id, orderp_issuedby_name, orderp_action) values('%@'",[orderHeaderDetails objectForKey:@"ID"]];
            
            for (int j=1; j<[[permitDetails objectAtIndex:i] count]; j++) {
                [queryString appendFormat:@",'%@'",[[permitDetails objectAtIndex:i] objectAtIndex:j]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    ////////////////////
    
    //For Order Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@' ",[orderHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' ",[orderHeaderDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[orderTransactionDetails count]; i++) {
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_rsnum" VARCHAR,"ordert_rspos" VARCHAR,"ordert_component_id" VARCHAR,"ordert_component_name" VARCHAR,"ordert_werks" VARCHAR,"ordert_lgort" VARCHAR,"ordert_posnr" VARCHAR,"ordert_quantity_name" VARCHAR,"ordert_quantity_id" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_component_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_postp" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR DEFAULT (null) , "bemot" VARCHAR, "grund" VARCHAR, "learr" VARCHAR, "leknw" VARCHAR, "operation_plantid" VARCHAR, "operation_plantname" VARCHAR, "operation_workcenterid" VARCHAR, "operation_workcentertext" VARCHAR, "ordert_steustext" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_TRANSACTION(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_rsnum, ordert_rspos, ordert_component_id, ordert_component_name, ordert_werks, ordert_lgort, ordert_posnr, ordert_quantity_name, ordert_quantity_id, ordert_operation_action, ordert_component_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_postp, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",[orderHeaderDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[[orderTransactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[orderTransactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customOperationTransactionFields,customComponentTransactionFields;
        
        if ([[orderTransactionDetails objectAtIndex:i] count]>1) {
            customOperationTransactionFields = [[orderTransactionDetails objectAtIndex:i] objectAtIndex:1];
            customComponentTransactionFields = [[orderTransactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customOperationTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[orderHeaderDetails objectForKey:@"ID"],[[[orderTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[orderTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:15]];
            
            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
        
        for (int x=0; x<[customComponentTransactionFields count]; x++) {
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[orderHeaderDetails objectForKey:@"ID"],[[[orderTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[orderTransactionDetails objectAtIndex:i] firstObject]objectAtIndex:15]];
            
            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    if ([orderHeaderDetails objectForKey:@"NOSYNCLOG"] && [notificationHeaderDetails objectForKey:@"NOSYNCLOG"]) {
        return @"";
    }
    
    //For Sync Log
    [queryString setString:@""];
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    if (!isNew) {
        if ([[notificationHeaderDetails objectForKey:@"OBJECTID"] length]) {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification & Order','Create','%@','Complete','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[notificationHeaderDetails objectForKey:@"REPORTEDBY"],[notificationHeaderDetails objectForKey:@"ID"],[notificationHeaderDetails objectForKey:@"OBJECTID"]];
        }
        else
        {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification & Order','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[notificationHeaderDetails objectForKey:@"REPORTEDBY"],[notificationHeaderDetails objectForKey:@"ID"]];
        }
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
        
        return @"";
    }
    
    return @"";
}

- (NSString *)insertDataIntoNotificationHeader:(NSDictionary *)headerDetails withAttachments:(NSMutableArray *)attachments withTransaction:(NSMutableArray *)transactionDetails withActivityCodes:(NSMutableArray *)activityDetails withTaskcodes:(NSMutableArray *)taskCodeDetails withInspectionResult:(NSMutableArray *)inspectionResultArray withNotifStatusCode:(NSMutableArray *)notifStatus
{
    //For Notification Header
    NSMutableString *queryString = [NSMutableString new];
    BOOL isNew = YES;
    if ([[headerDetails objectForKey:@"ID"] length]) {
        isNew = false;
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id = '%@'",[headerDetails objectForKey:@"ID"]];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the notification";
        }
    }
    else
    {
        [headerDetails setValue:[self createUniqueIdfortable:@"NTH"] forKey:@"ID"];
    }
    
    NSString *objectIDStr = @"";
    if ([headerDetails objectForKey:@"OBJECTID"]) {
        objectIDStr = [headerDetails objectForKey:@"OBJECTID"];
    }
    
    [queryString setString:@""];
    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
 
    [queryString appendFormat:@"insert into NOTIFICATION_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"NID"],[headerDetails objectForKey:@"NNAME"],[headerDetails objectForKey:@"SHORTTEXT"],[headerDetails objectForKey:@"LONGTEXT"],[headerDetails objectForKey:@"FID"],[headerDetails objectForKey:@"FNAME"],[headerDetails objectForKey:@"EQID"],[headerDetails objectForKey:@"EQNAME"],[headerDetails objectForKey:@"NPID"],[headerDetails objectForKey:@"NPNAME"],[headerDetails objectForKey:@"SDATE"],[headerDetails objectForKey:@"EDATE"],[headerDetails objectForKey:@"BREAKDOWN"],[headerDetails objectForKey:@"PLANTID"],[headerDetails objectForKey:@"PLANTNAME"],[headerDetails objectForKey:@"WORKCENTERID"],[headerDetails objectForKey:@"WORKCENTERNAME"],[headerDetails objectForKey:@"LATITUDE"],[headerDetails objectForKey:@"LONGITUDE"],[headerDetails objectForKey:@"ALTITUDE"],[headerDetails objectForKey:@"NSTATUS"],[headerDetails objectForKey:@"REPORTEDBY"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[headerDetails objectForKey:@"DOCS"],[headerDetails objectForKey:@"RSDATE"],[headerDetails objectForKey:@"REDATE"],[headerDetails objectForKey:@"SHIFT"],[headerDetails objectForKey:@"NOOFPERSON"],[headerDetails objectForKey:@"EFFECTID"],[headerDetails objectForKey:@"EFFECTNAME"],[headerDetails objectForKey:@"PARNRID"],[headerDetails objectForKey:@"PARNRTEXT"],[headerDetails objectForKey:@"AUFNR"],[headerDetails objectForKey:@"NREPORTEDBY"],[headerDetails objectForKey:@"PLANNERGROUP"],[headerDetails objectForKey:@"PLANNERGROUPNAME"],[headerDetails objectForKey:@"USR01"],[headerDetails objectForKey:@"USR02"],[headerDetails objectForKey:@"QMDAT"]];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the notification";
        }
    }
    else
    {
        return @"Cannot update the notification";
    }
    
    [queryString setString:@""];
    
    id equipmentHistory;
    if ([[headerDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
        equipmentHistory = [headerDetails objectForKey:@"EQUIPMENTHISTORY"];
    }
    
    //For Notification Header Equipments Fields.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where notificationh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[equipmentHistory count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_HEADER_EQUIPMENTS_HISTORY" ("notificationh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
         */
        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_EQUIPMENTS_HISTORY(notificationh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    id customHeaderFields = [headerDetails objectForKey:@"CFH"];
    
    //For Notification Header Custom Fields.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[customHeaderFields count]; i++) {
        [queryString setString:@""];
        //CREATE TABLE "NOTIFICATION_HEADER_CUSTOMFIELDS" ("notificationh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_CUSTOMFIELDS(notificationh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Notification Header Attachments.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS where notificationa_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[attachments count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_ATTACHMENTS" ("notificationa_header_id" VARCHAR,"notificationa_doc_id" VARCHAR ,"notificationa_doc_type" VARCHAR, "notificationa_file_name" VARCHAR, "notificationa_file_type" VARCHAR, "notificationa_file_size" VARCHAR, "notificationa_obj_type" VARCHAR, "notificationa_file_content" VARCHAR, "notificationa_action" VARCHAR)
         */
        [queryString appendFormat:@"insert into NOTIFICATION_ATTACHMENTS(notificationa_header_id, notificationa_doc_id, notificationa_doc_type, notificationa_file_name, notificationa_file_type, notificationa_file_size, notificationa_obj_type, notificationa_file_content, notificationa_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[attachments objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[attachments objectAtIndex:i] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Notification Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //For Notification Transaction Custom Fields
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@'",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[transactionDetails count]; i++) {
        [queryString setString:@""];
        
        //CREATE TABLE "NOTIFICATION_TRANSACTION" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_component_id" VARCHAR,"notificationt_component_name" VARCHAR,"notificationt_problem_id" VARCHAR,"notificationt_problem_name" VARCHAR, "notificationt_causegroup_id" VARCHAR,"notificationt_causegroup_name" VARCHAR,"notificationt_causecode_id" VARCHAR,"notificationt_causecode_name" VARCHAR,"notificatont_description" VARCHAR,"notificatont_causecode_description" VARCHAR DEFAULT (null) ,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR,"notificationt_compstatus" VARCHAR, "notificationt_itemstatus" VARCHAR, "notificationt_objectpartgroup" VARCHAR, "notification_objectpart" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION(notificationt_header_id, notificationt_component_id, notificationt_component_name, notificationt_problem_id, notificationt_problem_name, notificationt_causegroup_id, notificationt_causegroup_name, notificationt_causecode_id, notificationt_causecode_name,notificatont_description,notificatont_causecode_description,notificationt_itemkey,notificationt_causekey,notificationt_compstatus,notificationt_itemstatus,notificationt_objectpartgroup,notificationt_objectpart,notificationt_objectpartgroup_text,notificationt_objectpart_text) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=2; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customDamageTransactionFields,customCauseTransactionFields;
        
        if ([[transactionDetails objectAtIndex:i] count]>1) {
            customDamageTransactionFields = [[transactionDetails objectAtIndex:i] objectAtIndex:1];
            customCauseTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customDamageTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
            
            for (int y=0; y<[[customDamageTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customDamageTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
        
        for (int x=0; x<[customCauseTransactionFields count]; x++) {
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
            
            for (int y=0; y<[[customCauseTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customCauseTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATIONS_ACTIVITY where notificationa_id = '%@'",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
 
    for (int i=0; i<[activityDetails count]; i++) {
        
        [queryString setString:@""];
        
        // CREATE TABLE "NOTIFICATIONS_ACTIVITY_COPY" ( `notificationa_id` TEXT, `notificationa_header_id` TEXT, `notificationa_Actcodetext` TEXT, `notificationa_Actgrptext` TEXT, `notificationa_Action` TEXT, `notificationa_ActvCod` TEXT, `notificationa_ActvGrp` TEXT, `notificationa_ActvKey` TEXT, `notificationa_ActvShtxt` TEXT, `notificationa_CauseKey` TEXT, `notificationa_Defectcodetext` TEXT, `notificationa_Defectgrptext` TEXT, `notificationa_ItemKey` TEXT, `notificationa_ItemdefectCod` TEXT, `notificationa_ItemdefectGrp` TEXT, `notificationa_ItemdefectShtxt` TEXT, `notificationa_ItempartCod` TEXT, `notificationa_ItempartGrp` TEXT, `notificationa_Partcodetext` TEXT, `notificationa_Partgrptext` TEXT, `Qmnum` TEXT, `Usr01` TEXT, `Usr02` TEXT, `Usr03` TEXT, `Usr04` TEXT, `Usr05` TEXT )
 
        [queryString appendFormat:@"insert into NOTIFICATIONS_ACTIVITY (notificationa_id, notificationa_header_id, notificationa_Actcodetext, notificationa_Actgrptext, notificationa_Action, notificationa_ActvCod, notificationa_ActvGrp, notificationa_ActvKey, notificationa_ActvShtxt,notificationa_CauseKey,notificationa_Defectcodetext,notificationa_Defectgrptext,notificationa_ItemKey,notificationa_ItemdefectCod,notificationa_ItemdefectGrp,notificationa_ItemdefectShtxt,notificationa_ItempartCod,notificationa_ItempartGrp,notificationa_Partcodetext,notificationa_Partgrptext,Qmnum,Usr01,Usr02,Usr03,Usr04,Usr05) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],@"",[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Actcodetext"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Actgrptext"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Action"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ActvCod"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ActvGrp"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ActvKey"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ActvShtxt"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_CauseKey"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Defectcodetext"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Defectgrptext"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ItemKey"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ItemdefectCod"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ItemdefectGrp"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ItemdefectShtxt"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ItempartCod"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_ItempartGrp"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Partcodetext"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"notificationa_Partgrptext"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"Qmnum"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"Usr01"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"Usr02"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"Usr03"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"Usr04"],[[[activityDetails objectAtIndex:i] firstObject] objectForKey:@"Usr05"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@" activity copyinserted %i",i]];
            }
        }
    }
        
 
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_STATUS where notifications_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
 
    for (int i=0; i<[notifStatus count]; i++) {
        
        [queryString setString:@""];
        
        //CREATE TABLE "NOTIFICATION_STATUS" ("notifications_header_id" VARCHAR, "notifications_aufnr" VARCHAR,"notifications_objnr" VARCHAR,"notifications_manum" VARCHAR,"notifications_stsma" VARCHAR,"notifications_inist" VARCHAR,"notifications_stonr" VARCHAR,"notifications_hsonr" VARCHAR, "notifications_nsonr" VARCHAR, "notifications_stat" VARCHAR,"notifications_act" VARCHAR,"notifications_txt04" VARCHAR,"notifications_txt30" VARCHAR,"notifications_action" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTIFICATION_STATUS (notifications_header_id, notifications_aufnr, notifications_objnr, notifications_manum, notifications_stsma, notifications_inist, notifications_stonr, notifications_hsonr, notifications_nsonr, notifications_stat, notifications_act, notifications_txt04, notifications_txt30, notifications_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[notifStatus objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[notifStatus objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TASKS where notificationt_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
 
    for (int i=0; i<[taskCodeDetails count]; i++) {
        
        [queryString setString:@""];
 
        [queryString appendFormat:@"insert into NOTIFICATION_TASKS (notificationt_header_id, notificationt_taskkey, notificationt_tgroup_id, notificationt_tgroup_name, notificationt_tcode_id, notificationt_tcode_name, notificationt_Description, notificationt_tprocessor_id, notificationt_tprocessor_name, notificationt_response_name, notificationt_planned_startdate, notificatont_planned_finishdate, notificatont_release_status, notificatont_complete_status, notificatont_success_status, notificationt_itemkey,notificationt_item_status,notificationt_item_partgrp_id,notificationt_item_partgrp_name,notificationt_item_partcode_id,notificationt_item_partcode_name,notificationt_item_defectgrp_id,notificationt_item_defectgrp_name,notificationt_item_defectcode_id,notificationt_item_defectcode_name,notificationt_item_defectshtxt,notificationt_item_userstatus,notificationt_item_systemstatus,notificationt_item_smsttxt,notificationt_item_smastxt,notificationt_item_usr01,notificationt_item_usr02,notificationt_item_usr03,notificationt_item_usr04,notificationt_item_usr05,notificationt_planned_stime,notificationt_planned_ftime,notificationt_completion_date,notificationt_completion_time,notificationt_completed_by) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:2],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:3],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:4],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:5],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:6],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:7],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:8],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:9],[[[taskCodeDetails objectAtIndex:i] firstObject]objectAtIndex:10],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:11],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:12],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:13],[[[taskCodeDetails objectAtIndex:i] firstObject]objectAtIndex:14],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:15],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:16],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:17],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:18],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:19],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:20],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:21],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:22],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:23],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:24],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:25],[[[taskCodeDetails objectAtIndex:i] firstObject]objectAtIndex:26],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:27],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:28],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:29],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:30],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:31],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:32],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:33],[[[taskCodeDetails objectAtIndex:i] firstObject]objectAtIndex:34],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:35],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:36],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:37],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:38],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:39],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:39]];
        
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                
                //    //For Notification Tasks Custom Fields.
                [queryString setString:@""];
                [queryString appendFormat:@"delete from NOTFICATION_TASKS_CUSTOMFIELDS_COPY where notificationh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
                if ([self set_query:queryString]) {
                    [self run_Queries_NODATA];
                }
                
                id customFieldsTasks = [[taskCodeDetails objectAtIndex:i] lastObject];
                
                for (int x=0; x<[customFieldsTasks count]; x++) {
                    [queryString setString:@""];
                    
                    //    CREATE TABLE "NOTFICATION_TASKS_CUSTOMFIELDS" ("notificationt_id" VARCHAR, "notificationt_itemkey" VARCHAR, "notificationt_taskkey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR, "tabname" VARCHAR, "fieldname" VARCHAR, "value" VARCHAR, "label" VARCHAR, "datatype" VARCHAR, "sequence" VARCHAR, "length" VARCHAR)
                    
                    
                    [queryString appendFormat:@"insert into NOTFICATION_TASKS_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_taskkey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:16],[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:3]];
                    
                    if ([[customFieldsTasks objectAtIndex:0] isKindOfClass:[NSArray class]]) {
                        
                        for (int y=0; y<[[customFieldsTasks objectAtIndex:x] count]; y++) {
                            [queryString appendFormat:@",'%@'",[[customFieldsTasks objectAtIndex:x] objectAtIndex:y]];
                        }
                    }
                    else{
                        
                        for (int y=0; y<[customFieldsTasks  count]; y++) {
                            [queryString appendFormat:@",'%@'",[customFieldsTasks  objectAtIndex:y]];
                        }
                    }
                    
                    
                    
                    [queryString appendFormat:@")"];
                    if ([self set_query:queryString]) {
                        [self run_Queries_NODATA];
                    }
                    
                }
                
            }
        }
        
    }
    
    
    [queryString setString:@"delete from NOTIFICATION_INSPECTION"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    
    for (int i=0; i<[inspectionResultArray count]; i++) {
        
        [queryString setString:@""];
        
        //    CREATE TABLE "NOTIFICATION_INSPECTION" ("Qmnum" VARCHAR, "Aufnr" VARCHAR, "Vornr" VARCHAR, "Equnr" VARCHAR, "Mdocm" VARCHAR, "Point" VARCHAR, "Mpobj" VARCHAR, "Mpobt" VARCHAR, "Psort" VARCHAR, "Pttxt" VARCHAR, "Atinn" VARCHAR, "Idate" VARCHAR, "Itime" VARCHAR, "Mdtxt" VARCHAR, "Readr" VARCHAR, "Atbez" VARCHAR, "Msehi" VARCHAR, "Msehl" VARCHAR, "Readc" VARCHAR, "Desic" VARCHAR, "Prest" VARCHAR, "Docaf" VARCHAR, "Codct" VARCHAR, "Codgr" VARCHAR, "Vlcod" VARCHAR, "Action" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTIFICATION_INSPECTION  (Qmnum, Aufnr, Vornr, Equnr, Mdocm, Point, Mpobj, Mpobt, Psort, Pttxt, Atinn, Idate, Itime, Mdtxt, Readr, Atbez, Msehi,Msehl,Readc,Desic,Prest,Docaf,Codct,Codgr,Vlcod,Action) values("];
        
        for (int j=0; j<[[inspectionResultArray objectAtIndex:i] count]; j++) {
            
            [queryString appendFormat:@"'%@',",[[inspectionResultArray objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString setString:[queryString substringToIndex:[queryString length]-1]];
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    
    
    if ([headerDetails objectForKey:@"NOSYNCLOG"]) {
        return @"";
    }
    //For Sync Log
    [queryString setString:@""];
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    if (isNew) {
        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Create','%@','Complete','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
        }
        else
        {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
        }
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
        
        return @"";
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select ObjectID,ActivityType,Status from SyncLog where UUID = '%@' order by Date,Time",[headerDetails objectForKey:@"ID"]];
    NSMutableArray *objectIDs;
    if ([self set_query:queryString]) {
        objectIDs = [[self run_Queries_WITHDATA] lastObject];
        //[queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and Status = 'New'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"]];
    }
    
    [queryString setString:@""];
    
    if ([objectIDs count])
    {
        if ([[objectIDs lastObject] isEqualToString:@"New"]) {
            
            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"OSNO"]) {
                
                if ([[objectIDs objectAtIndex:1] isEqualToString:@"Change"] || [[objectIDs objectAtIndex:1] isEqualToString:@"Create"]) {
                    [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
                }
                else
                {
                    
                }
                
            }
            else if([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"NOCO"]) {
                
                if ([[objectIDs objectAtIndex:1] isEqualToString:@"Complete"]) {
                    [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
                }
                else
                {
                    [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Complete','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
                }
            }
        }
        else if([[objectIDs firstObject] length])
        {
            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"NOPR"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else if([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Assigned"] && ([[objectIDs objectAtIndex:1] isEqualToString:@"Create"])) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else
            {
                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
            }
        }
        else
        {
            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"New"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Change','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
            }
            else if([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Complete"] && ([[objectIDs objectAtIndex:1] isEqualToString:@"Change"] || [[objectIDs objectAtIndex:1] isEqualToString:@"Create"])) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Complete','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
            }
            else
            {
                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
            }
        }
    }
    else
    {
        //changed
        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Changed"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Notification','Complete','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
                
            }
            else {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Notification','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
        }
        else
        {
            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"New"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
            }
            else{
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Complete','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
            }
        }
    }
    
    if (queryString.length) {
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
    }
    
    return @"";
}




//- (NSString *)insertDataIntoNotificationHeader:(NSDictionary *)headerDetails withAttachments:(NSMutableArray *)attachments withTransaction:(NSMutableArray *)transactionDetails
//{
//    //For Notification Header
//    NSMutableString *queryString = [NSMutableString new];
//    BOOL isNew = YES;
//    if ([[headerDetails objectForKey:@"ID"] length]) {
//        isNew = false;
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id = '%@'",[headerDetails objectForKey:@"ID"]];
//        [self set_query:queryString];
//        if (![self run_Queries_NODATA]) {
//            return @"Cannot update the notification";
//        }
//    }
//    else
//    {
//        [headerDetails setValue:[self createUniqueIdfortable:@"NTH"] forKey:@"ID"];
//    }
//
//    NSString *objectIDStr = @"";
//    if ([headerDetails objectForKey:@"OBJECTID"]) {
//        objectIDStr = [headerDetails objectForKey:@"OBJECTID"];
//    }
//
//    [queryString setString:@""];
//    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
//    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//
//    [queryString appendFormat:@"insert into NOTIFICATION_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"NID"],[headerDetails objectForKey:@"NNAME"],[headerDetails objectForKey:@"SHORTTEXT"],[headerDetails objectForKey:@"LONGTEXT"],[headerDetails objectForKey:@"FID"],[headerDetails objectForKey:@"FNAME"],[headerDetails objectForKey:@"EQID"],[headerDetails objectForKey:@"EQNAME"],[headerDetails objectForKey:@"NPID"],[headerDetails objectForKey:@"NPNAME"],[headerDetails objectForKey:@"SDATE"],[headerDetails objectForKey:@"EDATE"],[headerDetails objectForKey:@"BREAKDOWN"],[headerDetails objectForKey:@"PLANTID"],[headerDetails objectForKey:@"PLANTNAME"],[headerDetails objectForKey:@"WORKCENTERID"],[headerDetails objectForKey:@"WORKCENTERNAME"],[headerDetails objectForKey:@"LATITUDE"],[headerDetails objectForKey:@"LONGITUDE"],[headerDetails objectForKey:@"ALTITUDE"],[headerDetails objectForKey:@"NSTATUS"],[headerDetails objectForKey:@"REPORTEDBY"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[headerDetails objectForKey:@"DOCS"],[headerDetails objectForKey:@"RSDATE"],[headerDetails objectForKey:@"REDATE"],[headerDetails objectForKey:@"SHIFT"],[headerDetails objectForKey:@"NOOFPERSON"],[headerDetails objectForKey:@"EFFECTID"],[headerDetails objectForKey:@"EFFECTNAME"],[headerDetails objectForKey:@"PARNRID"],[headerDetails objectForKey:@"PARNRTEXT"],[headerDetails objectForKey:@"TRANSMITTYPE"],[headerDetails objectForKey:@"AUFNR"]];
//
//    if ([self set_query:queryString]) {
//        if (![self run_Queries_NODATA]) {
//            return @"Cannot update the notification";
//        }
//    }
//    else
//    {
//        return @"Cannot update the notification";
//    }
//
//
//    //for measurementDocuments
//
////    for (int i=0; i<[measureMentDocs count]; i++)
////    {
////        [queryString setString:@""];
////
////        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_MEASUREMENT_DOCS values('%@','%@','%@','%@','%@','%@' )",[[measureMentDocs objectAtIndex:i] objectAtIndex:0],[[measureMentDocs objectAtIndex:i] objectAtIndex:1],[[measureMentDocs objectAtIndex:i] objectAtIndex:2],[[measureMentDocs objectAtIndex:i] objectAtIndex:3],[[measureMentDocs objectAtIndex:i] objectAtIndex:4],[[measureMentDocs objectAtIndex:i] objectAtIndex:5]];
////
////        if ([self set_query:queryString]) {
////            if (![self run_Queries_NODATA]) {
////                return @"Cannot update the measurementDocuments";
////            }
////        }
////
////    }
//
//
//    [queryString setString:@""];
//
//
//    id equipmentHistory;
//    if ([[headerDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
//        equipmentHistory = [headerDetails objectForKey:@"EQUIPMENTHISTORY"];
//    }
//
//    //For Notification Header Equipments Fields.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where notificationh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i =0; i<[equipmentHistory count]; i++) {
//
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "NOTIFICATION_HEADER_EQUIPMENTS_HISTORY" ("notificationh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_EQUIPMENTS_HISTORY(notificationh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
//
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    id customHeaderFields = [headerDetails objectForKey:@"CFH"];
//
//    //For Notification Header Custom Fields.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i=0; i<[customHeaderFields count]; i++) {
//        [queryString setString:@""];
//        //CREATE TABLE "NOTIFICATION_HEADER_CUSTOMFIELDS" ("notificationh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//        [queryString appendFormat:@"insert into NOTIFICATION_HEADER_CUSTOMFIELDS(notificationh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
//        }
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    //For Notification Header Attachments.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS where notificationa_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i =0; i<[attachments count]; i++) {
//
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "NOTIFICATION_ATTACHMENTS" ("notificationa_header_id" VARCHAR,"notificationa_doc_id" VARCHAR ,"notificationa_doc_type" VARCHAR, "notificationa_file_name" VARCHAR, "notificationa_file_type" VARCHAR, "notificationa_file_size" VARCHAR, "notificationa_obj_type" VARCHAR, "notificationa_file_content" VARCHAR, "notificationa_action" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into NOTIFICATION_ATTACHMENTS(notificationa_header_id, notificationa_doc_id, notificationa_doc_type, notificationa_file_name, notificationa_file_type, notificationa_file_size, notificationa_obj_type, notificationa_file_content, notificationa_action) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=1; j<[[attachments objectAtIndex:i] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[attachments objectAtIndex:i] objectAtIndex:j]];
//        }
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    //For Notification Transaction.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    //For Notification Transaction Custom Fields
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i=0; i<[transactionDetails count]; i++) {
//        [queryString setString:@""];
//        //CREATE TABLE "NOTIFICATION_TRANSACTION" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_component_id" VARCHAR,"notificationt_component_name" VARCHAR,"notificationt_problem_id" VARCHAR,"notificationt_problem_name" VARCHAR, "notificationt_causegroup_id" VARCHAR,"notificationt_causegroup_name" VARCHAR,"notificationt_causecode_id" VARCHAR,"notificationt_causecode_name" VARCHAR,"notificatont_description" VARCHAR,"notificatont_causecode_description" VARCHAR DEFAULT (null) ,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR,"notificationt_compstatus" VARCHAR, "notificationt_itemstatus" VARCHAR, "notificationt_objectpartgroup" VARCHAR, "notification_objectpart" VARCHAR)
//
//        [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION(notificationt_header_id, notificationt_component_id, notificationt_component_name, notificationt_problem_id, notificationt_problem_name, notificationt_causegroup_id, notificationt_causegroup_name, notificationt_causecode_id, notificationt_causecode_name,notificatont_description,notificatont_causecode_description,notificationt_itemkey,notificationt_causekey,notificationt_compstatus,notificationt_itemstatus,notificationt_objectpartgroup,notificationt_objectpart,notificationt_objectpartgroup_text,notificationt_objectpart_text) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=2; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:j]];
//        }
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//
//        id customDamageTransactionFields,customCauseTransactionFields;
//
//        if ([[transactionDetails objectAtIndex:i] count]>1) {
//            customDamageTransactionFields = [[transactionDetails objectAtIndex:i] objectAtIndex:1];
//            customCauseTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
//        }
//
//        for (int x=0; x<[customDamageTransactionFields count]; x++) {
//            [queryString setString:@""];
//            //CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//
//            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
//
//            for (int y=0; y<[[customDamageTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customDamageTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//
//        for (int x=0; x<[customCauseTransactionFields count]; x++) {
//            [queryString setString:@""];
//
//            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
//
//            for (int y=0; y<[[customCauseTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customCauseTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    if ([headerDetails objectForKey:@"NOSYNCLOG"]) {
//        return @"";
//    }
//    //For Sync Log
//    [queryString setString:@""];
//
//    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
//    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
//    if (isNew) {
//        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Create','%@','Complete','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//        }
//        else
//        {
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//        }
//        if([self set_query:queryString])
//        {
//            [self run_Queries_NODATA];
//        }
//
//        return @"";
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"select ObjectID,ActivityType,Status from SyncLog where UUID = '%@' order by Date,Time",[headerDetails objectForKey:@"ID"]];
//    NSMutableArray *objectIDs;
//    if ([self set_query:queryString]) {
//        objectIDs = [[self run_Queries_WITHDATA] lastObject];
//        //[queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and Status = 'New'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"]];
//    }
//
//    [queryString setString:@""];
//
//    if ([objectIDs count])
//    {
//        if ([[objectIDs lastObject] isEqualToString:@"New"]) {
//
//            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"New"]) {
//
//                if ([[objectIDs objectAtIndex:1] isEqualToString:@"Change"] || [[objectIDs objectAtIndex:1] isEqualToString:@"Create"]) {
//                    [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
//                }
//                else
//                {
//
//                }
//
//            }
//            else if([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Complete"]) {
//
//                if ([[objectIDs objectAtIndex:1] isEqualToString:@"Complete"]) {
//                    [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
//                }
//                else
//                {
//                    [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Complete','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//                }
//            }
//        }
//        else if([[objectIDs firstObject] length])
//        {
//            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Changed"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else if([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Assigned"] && ([[objectIDs objectAtIndex:1] isEqualToString:@"Create"])) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else
//            {
//                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
//            }
//        }
//        else
//        {
//            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"New"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Change','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//            }
//            else if([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Complete"] && ([[objectIDs objectAtIndex:1] isEqualToString:@"Change"] || [[objectIDs objectAtIndex:1] isEqualToString:@"Create"])) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Complete','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//            }
//            else
//            {
//                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
//            }
//        }
//    }
//    else
//    {
//        //changed
//        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
//            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"Changed"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Notification','Complete','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//
//            }
//            else {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Notification','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//        }
//        else
//        {
//            if ([[headerDetails objectForKey:@"NSTATUS"] isEqualToString:@"New"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//            }
//            else{
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Notification','Complete','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//            }
//        }
//    }
//
//    if (queryString.length) {
//        if([self set_query:queryString])
//        {
//            [self run_Queries_NODATA];
//        }
//    }
//
//    return @"";
//}

- (void)getinsertDetailNotificationwithOrderDetailstoDictionary:(NSMutableDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withTransaction:(NSMutableArray *)transactionDetails alongwithOrderAttachment:(NSMutableArray *)orderattachmentDetails withPermits:(NSMutableArray *)permitDetails withOrderTransaction:(NSMutableArray *)ordertransactionDetails forAction:(NSString *)activity ForUUID:(NSString *)uuid
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER where notificationh_id = '%@' order by notificationh_startdate",uuid];
    NSMutableArray *headerDetailsArray;
    if ([self set_query:queryString]) {
        headerDetailsArray = [self run_Queries_WITHDATA];
    }
    
    if ([headerDetailsArray count]) {
        NSArray *detailArray = [headerDetailsArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"NID"];
        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"NNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"SHORTTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"LONGTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"FID"];
        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"FNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"EQID"];
        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"EQNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"NPID"];
        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"NPNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"SDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"EDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"BREAKDOWN"];
        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"PLANTID"];
        [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"WORKCENTERID"];
        [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LATITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"LONGITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:20] forKey:@"ALTITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:21] forKey:@"NSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"REPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"OBJECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:25] forKey:@"DOCS"];
    }
    
    [queryString setString:@""];
    
    if (activity.length) {
        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = 'I' and Zdoctype = 'QW'"];
    }
    
    NSMutableArray *endPointArray;
    if ([self set_query:queryString]) {
        endPointArray = [self run_Queries_WITHDATA];
    }
    if ([endPointArray count]) {
        NSArray *detailArray = [endPointArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where notificationh_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"EQUIPMENTHISTORY"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from NOTIFICATION_ATTACHMENTS where notificationa_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [attachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype,  sequence, length from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"CFH"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",uuid];
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
        NSMutableArray *customDamageFields,*customCauseCodeFields;
        customDamageFields = [NSMutableArray new];
        customCauseCodeFields = [NSMutableArray new];
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
         */
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@' and notificationt_itemkey = '%@' and notificationt_causekey = '%@' and doctypeitem = 'QI'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:12],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:13]];
        if ([self set_query:queryString]) {
            [customDamageFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@' and notificationt_itemkey= '%@' and notificationt_causekey = '%@' and doctypeitem = 'QC'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:12],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:13]];
        if ([self set_query:queryString]) {
            [customCauseCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customDamageFields,customCauseCodeFields,nil]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from ORDER_HEADER where orderh_id = '%@' order by orderh_startdate",uuid];
    if ([self set_query:queryString]) {
        headerDetailsArray = [self run_Queries_WITHDATA];
    }
    
    if ([headerDetailsArray count]) {
        NSArray *detailArray = [headerDetailsArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"OID"];
        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"ONAME"];
        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"OSHORTTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"OLONGTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"OFID"];
        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"OFNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"OEQID"];
        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"OEQNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"ACCINCID"];
        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"ACCINCNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"OPID"];
        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"OPNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"OSDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"OEDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:15] forKey:@"OPLANTID"];
        [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"OWORKCENTERID"];
        [headerDetails setObject:[detailArray objectAtIndex:17] forKey:@"LATITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LONGITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"ALTITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"REPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"OSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:24] forKey:@"OBJECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:25] forKey:@"UPDDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:26] forKey:@"ODOCS"];
        [headerDetails setObject:[detailArray objectAtIndex:27] forKey:@"OSYNCSTATUS"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select * from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"OEQUIPMENTHISTORY"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"OCFH"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_ATTACHMENTS where ordera_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [orderattachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_HEADER_PERMIT where orderp_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [permitDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    NSMutableArray *tempOrderTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempOrderTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempOrderTransactionDetails count]; x ++) {
        NSMutableArray *customOperationFields,*customComponentCodeFields;
        customOperationFields = [NSMutableArray new];
        customComponentCodeFields = [NSMutableArray new];
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WO'",uuid,[[tempOrderTransactionDetails objectAtIndex:x] objectAtIndex:1],[[tempOrderTransactionDetails objectAtIndex:x] objectAtIndex:15]];
        if ([self set_query:queryString]) {
            [customOperationFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WC'",uuid,[[tempOrderTransactionDetails objectAtIndex:x] objectAtIndex:1],[[tempOrderTransactionDetails objectAtIndex:x] objectAtIndex:15]];
        if ([self set_query:queryString]) {
            [customComponentCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [ordertransactionDetails addObject:[NSArray arrayWithObjects:[tempOrderTransactionDetails objectAtIndex:x],customOperationFields,customComponentCodeFields,nil]];
    }
}

- (void)getinsertDetailNotificationDetailstoDictionary:(NSMutableDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withTransaction:(NSMutableArray *)transactionDetails withTasks:(NSMutableArray *)taskDetails withNotifStatus:(NSMutableArray *)notifStatus forAction:(NSString *)activity ForUUID:(NSString *)uuid
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER where notificationh_id = '%@' order by notificationh_startdate",uuid];
    NSMutableArray *headerDetailsArray;
    if ([self set_query:queryString]) {
        headerDetailsArray = [self run_Queries_WITHDATA];
    }
    if ([headerDetailsArray count]) {
        NSArray *detailArray = [headerDetailsArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"NID"];
        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"NNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"SHORTTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"LONGTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"FID"];
        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"FNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"EQID"];
        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"EQNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"NPID"];
        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"NPNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"SDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"EDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"BREAKDOWN"];
        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"PLANTID"];
        [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"WORKCENTERID"];
        [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LATITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"LONGITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:20] forKey:@"ALTITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:21] forKey:@"NSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"REPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"OBJECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:25] forKey:@"DOCS"];
        [headerDetails setObject:[detailArray objectAtIndex:26] forKey:@"RSDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:27] forKey:@"REDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:28] forKey:@"SHIFT"];
        [headerDetails setObject:[detailArray objectAtIndex:29] forKey:@"NOOFPERSON"];
        [headerDetails setObject:[detailArray objectAtIndex:30] forKey:@"EFFECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:31] forKey:@"EFFECTNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:32] forKey:@"PARNRID"];
        
        [headerDetails setObject:[detailArray objectAtIndex:33] forKey:@"PARNRTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:34] forKey:@"AUFNR"];
        
        [headerDetails setObject:[detailArray objectAtIndex:36] forKey:@"PLANNERGROUP"];
        [headerDetails setObject:[detailArray objectAtIndex:37] forKey:@"PLANNERGROUPNAME"];
    }
    
    NSString *activityType;
    if ([activity isEqualToString:@"Change"]) {
        activityType = @"U";
    }
    else if ([activity isEqualToString:@"Create"]) {
        activityType = @"I";
    }
    
    [queryString setString:@""];
    
    if (activity.length) {
        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = '%@' and Zdoctype = 'Q'",activityType];
    }
    
    NSMutableArray *endPointArray;
    if ([self set_query:queryString]) {
        endPointArray = [self run_Queries_WITHDATA];
    }
    if ([endPointArray count]) {
        NSArray *detailArray = [endPointArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where notificationh_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"EQUIPMENTHISTORY"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from NOTIFICATION_ATTACHMENTS where notificationa_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [attachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype,  sequence, length from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"CFH"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",uuid];
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
        NSMutableArray *customDamageFields,*customCauseCodeFields;
        customDamageFields = [NSMutableArray new];
        customCauseCodeFields = [NSMutableArray new];
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
         */
        
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@' and notificationt_itemkey = '%@' and notificationt_causekey = '%@' and doctypeitem = 'QI'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:12],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:13]];
        
        if ([self set_query:queryString]) {
            [customDamageFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@' and notificationt_itemkey= '%@' and notificationt_causekey = '%@' and doctypeitem = 'QC'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:12],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:13]];
        
        if ([self set_query:queryString]) {
            [customCauseCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customDamageFields,customCauseCodeFields,nil]];
    }
    
    
    [queryString setString:@""];
    NSMutableArray *tempTaskCodeDetails = [NSMutableArray new];
    
    [queryString appendFormat:@"SELECT * from NOTIFICATION_TASKS where notificationt_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [tempTaskCodeDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int y = 0; y <[tempTaskCodeDetails count]; y ++) {
        NSMutableArray *taskFields;
        taskFields = [NSMutableArray new];
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTFICATION_TASKS_CUSTOMFIELDS where notificationt_id = '%@' and notificationt_itemkey = '%@' and notificationt_taskkey = '%@' and doctypeitem = 'QT'",uuid,[[tempTaskCodeDetails objectAtIndex:y] objectAtIndex:16],[[tempTaskCodeDetails objectAtIndex:y] objectAtIndex:3]];
        
        if ([self set_query:queryString]) {
            [taskFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        
        [taskDetails addObject:[NSArray arrayWithObjects:[tempTaskCodeDetails objectAtIndex:y],[taskFields firstObject],nil]];
        
        //        if ([[taskFields firstObject] isKindOfClass:[NSArray class]]) {
        //
        //          [taskDetails addObject:[NSArray arrayWithObjects:[tempTaskCodeDetails objectAtIndex:y],taskFields,nil]];
        //        }
        //        else if ([[taskFields firstObject] isKindOfClass:[NSString class]]){
        //
        //           [taskDetails addObject:[NSArray arrayWithObjects:[tempTaskCodeDetails objectAtIndex:y],[taskFields firstObject],nil]];
        //        }
        
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from NOTIFICATION_STATUS where notifications_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [notifStatus addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
}

-(NSMutableArray *)fetchNotificationActivityItemKey:(NSString *)notifUdidString
{
    
    NSMutableArray *actvitiesArray = [NSMutableArray  new];

    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select * from NOTIFICATIONS_ACTIVITY where  notificationa_id = '%@'",notifUdidString];
    
    if ([self set_query:queryString]) {
        [actvitiesArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return actvitiesArray;
}


-(NSMutableArray *)fetchNotificationLocationName:(NSString *)funcLocationId
{

    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *predicate;
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *funclocRequest = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    
     NSEntityDescription *entity = [NSEntityDescription entityForName:@"FunctionalLocation" inManagedObjectContext:context];
    
     predicate = [NSPredicate predicateWithFormat:@"locationid like [c] %@",funcLocationId];
    
      funclocRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"locationName"], nil];

    if (predicate){
        
        [funclocRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    }
    
    funclocRequest.resultType = NSDictionaryResultType;
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:funclocRequest error:&error];
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

- (NSMutableArray *)getLocalNotificationForCondition:(NSMutableDictionary *)conditionDictionary
{
    NSArray *keyArray = [conditionDictionary allKeys];
    
    /*
     CREATE TABLE "NOTIFICATION_HEADER" ("notificationh_id" VARCHAR,"notificationh_type_id" VARCHAR,"notificationh_type_name" VARCHAR,"notificationh_shorttext" VARCHAR,"notificationh_longtext" VARCHAR,"notificationh_funcloc_id" VARCHAR,"notificationh_funcloc_name" VARCHAR,"notificationh_equip_id" VARCHAR,"notificationh_equip_name" VARCHAR,"notificationh_priorityid" VARCHAR,"notificationh_priority_name" VARCHAR,"notificationh_startdate" DATETIME,"notificationh_enddate" DATETIME,"notificationh_breakdown" VARCHAR,"notificationh_plantid" VARCHAR,"notificationh_plantname" VARCHAR,"notificationh_workcenterid" VARCHAR,"notificationh_workcentername" VARCHAR,"notificationh_latitudes" VARCHAR,"notificationh_longitudes" VARCHAR,"notificationh_altitudes" VARCHAR,"notificationh_status" VARCHAR,"notificationh_reported_by" VARCHAR,"nh_objectID" VARCHAR,"nh_upadated_Date" DATETIME,"nh_docs" VARCHAR,"notificationh_reqstartdate" DATETIME,"notificationh_reqenddate" DATETIME,"notificationh_shift" VARCHAR,"notificationh_noofperson" VARCHAR, "notificationh_effect_id" VARCHAR, "notificationh_effect_name" VARCHAR, "notificationh_personresponsible_id" VARCHAR, "notificationh_personresponsible_text" VARCHAR, "notificationh_order_no" VARCHAR, "notificationh_reported_by_Input" VARCHAR, "notificationh_ingrp" VARCHAR, "notificationh_ingrp_name" VARCHAR, "notificationh_usr01" VARCHAR, "notificationh_usr02" VARCHAR, "notificationh_qmdat" VARCHAR)
     */
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct notificationh_id, notificationh_type_id, notificationh_type_name, notificationh_shorttext, notificationh_longtext, notificationh_funcloc_id, notificationh_funcloc_name, notificationh_equip_id, notificationh_equip_name, notificationh_priorityid, notificationh_priority_name, notificationh_startdate, notificationh_enddate, notificationh_breakdown, notificationh_plantid, notificationh_plantname, notificationh_workcenterid, notificationh_workcentername, notificationh_latitudes, notificationh_longitudes, notificationh_altitudes, notificationh_status, notificationh_reported_by, nh_objectid, nh_docs, notificationh_reqstartdate, notificationh_reqenddate, notificationh_shift, notificationh_noofperson, notificationh_effect_id, notificationh_effect_name, notificationh_personresponsible_id, notificationh_personresponsible_text, notificationh_order_no, notificationh_reported_by_Input, notificationh_ingrp, notificationh_ingrp_name,notificationh_usr01,notificationh_usr02,notificationh_qmdat from NOTIFICATION_HEADER"];
    
    NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
    
      if ([conditionDictionary objectForKey:@"PERNR"]) {
        
         [conditionString appendFormat:@" where notificationh_personresponsible_id = %@",[conditionDictionary objectForKey:@"PERNR"]];
          
     }
    else{
        
        if ([keyArray containsObject:@"FILTER"]) {
            [conditionString appendFormat:@" where %@",[conditionDictionary objectForKey:@"FILTER"]];
        }
        
        else
            if ([keyArray containsObject:@"COLOUMN"]){
                [conditionString appendFormat:@" ORDER BY %@ %@",[conditionDictionary objectForKey:@"COLOUMN"],[conditionDictionary objectForKey:@"SORT"]];
            }
            else if ([keyArray containsObject:@"RECENT"]) {
                [conditionString appendFormat:@"%@",[conditionDictionary objectForKey:@"RECENT"]];
            }
            else{
                
                //            [conditionString appendFormat:@" ORDER BY nh_upadated_Date DESC"];
                [conditionString appendFormat:@" ORDER BY notificationh_startdate DESC"];
            }
      }
    
   
    [queryString appendFormat:@" %@",conditionString];
    
    if([self set_query:queryString])
    {
        return [self run_Queries_WITHDICTIONARY];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getrisksListNAll
{
    NSMutableArray *riskList = [[NSMutableArray alloc]init];
    NSMutableArray *tempriskList = [[NSMutableArray alloc]init];
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from WSMRISKMASTER ORDER BY sort ASC"];
    if ([self set_query:queryString]) {
        [tempriskList addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int i=0; i<[tempriskList count]; i++) {
        
        NSMutableArray *subriskList = [[NSMutableArray alloc]init];
        
        NSMutableArray *tempresponseList = [NSMutableArray new];
        [queryString setString:@""];
        [queryString appendFormat:@"select riskid, respid, respht, selectedobject from WSMRESPONSEMASTER where riskid = '%@'",[[tempriskList objectAtIndex:i] objectAtIndex:0]];
        if ([self set_query:queryString]) {
            [tempresponseList addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        for (int j = 0; j<[tempresponseList count]; j++) {
            
            NSMutableArray *objAvailList = [NSMutableArray new];
            NSMutableArray *tempObjAvailList = [NSMutableArray new];
            [queryString setString:@""];
            [queryString appendFormat:@"select objectid,selectedobject from WSMOBJAVAILMASTER where objectvalue = 'X'"];
            
            if ([self set_query:queryString]) {
                [tempObjAvailList addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            for (int k=0; k<[tempObjAvailList count]; k++) {
                
                NSMutableArray *tempLastLayerData = [NSMutableArray new];
                [queryString setString:@""];
                
                if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Document"]) {
                    [queryString appendFormat:@"select * from WSMDOCUMENTMASTER"];
                }
                else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Material"]){
                    [queryString appendFormat:@"select * from WSMMATERIALMASTER"];
                }
                else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Permit"]){
                    [queryString appendFormat:@"select * from WSMPERMITMASTER"];
                }
                else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Equipment"]){
                    [queryString appendFormat:@"select * from WSMEQUIPMASTER"];
                }
                else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Wcm Requirement"]){
                    [queryString appendFormat:@"select * from WSMWCMRMASTER"];
                }
                
                if ([self set_query:queryString]) {
                    [tempLastLayerData addObjectsFromArray:[self run_Queries_WITHDATA]];
                }
                
                [objAvailList addObject:[NSMutableArray arrayWithObjects:[tempObjAvailList objectAtIndex:k],tempLastLayerData, nil]];
            }
            
            [subriskList addObject:[NSMutableArray arrayWithObjects:[tempresponseList objectAtIndex:j],objAvailList, nil]];
        }
        
        [riskList addObject:[NSMutableArray arrayWithObjects:[tempriskList objectAtIndex:i],subriskList, nil]];
    }
    
    return riskList;
}

- (NSMutableArray *)getSafetyPlanNAll
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    NSMutableArray *tempObjAvailList = [NSMutableArray new];
    NSMutableArray *objectAvailList = [NSMutableArray new];
    
    [queryString appendFormat:@"select objectid,selectedobject from WSMOBJAVAILMASTER where objectvalue = 'X'"];
    
    if ([self set_query:queryString]) {
        
        [tempObjAvailList addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int k=0; k<[tempObjAvailList count]; k++) {
        
        NSMutableArray *tempLastLayerData = [NSMutableArray new];
        [queryString setString:@""];
        
        if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Document"]) {
            [queryString appendFormat:@"select * from WSMDOCUMENTMASTER"];
        }
        else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Material"]){
            [queryString appendFormat:@"select * from WSMMATERIALMASTER"];
        }
        else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Permit"]){
            [queryString appendFormat:@"select * from WSMPERMITMASTER"];
        }
        else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Equipment"]){
            [queryString appendFormat:@"select * from WSMEQUIPMASTER"];
        }
        else if ([[[tempObjAvailList objectAtIndex:k] objectAtIndex:0] isEqualToString:@"Wcm Requirement"]){
            [queryString appendFormat:@"select * from WSMWCMRMASTER"];
        }
        
        if ([self set_query:queryString]) {
            [tempLastLayerData addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
        }
        
        [objectAvailList addObject:[NSMutableArray arrayWithObjects:[tempObjAvailList objectAtIndex:k],tempLastLayerData, nil]];
    }
    
    return objectAvailList;
}

- (NSMutableArray *)getSelectedrisksListNAll:(NSString *)uuid
{
    NSMutableArray *riskList = [[NSMutableArray alloc]init];
    NSMutableArray *tempriskList = [[NSMutableArray alloc]init];
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"SELECT distinct orderwsm_risk_id, orderwsm_risk_id, orderwsm_risk_id, orderwsm_risk_id from ORDER_WSM where orderwsm_header_id = '%@' ORDER BY orderwsm_risk_id ASC",uuid];
    
    if ([self set_query:queryString]) {
        [tempriskList addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int i=0; i<[tempriskList count]; i++) {
        
        NSMutableArray *tempresponseList = [NSMutableArray new];
        [queryString setString:@""];
        [queryString appendFormat:@"select riskid, respid, respht, selectedobject from WSMRESPONSEMASTER where riskid = '%@'",[[tempriskList objectAtIndex:i] objectAtIndex:0]];
        if ([self set_query:queryString]) {
            [tempresponseList addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        NSMutableArray *objAvailList = [NSMutableArray new];
        NSMutableArray *tempObjAvailList = [NSMutableArray new];
        [queryString setString:@""];
        [queryString appendFormat:@"select objectid,selectedobject from WSMOBJAVAILMASTER where objectvalue = 'X'"];
        
        if ([self set_query:queryString]) {
            [tempObjAvailList addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        for (int j=0; j<[tempObjAvailList count]; j++) {
            
            NSMutableArray *tempLastLayerData = [NSMutableArray new];
            [queryString setString:@""];
            
            if ([[[tempObjAvailList objectAtIndex:j] objectAtIndex:0] isEqualToString:@"Document"]) {
                [queryString appendFormat:@"select * from WSMDOCUMENTMASTER"];
            }
            else if ([[[tempObjAvailList objectAtIndex:j] objectAtIndex:0] isEqualToString:@"Material"]){
                [queryString appendFormat:@"select * from WSMMATERIALMASTER"];
            }
            else if ([[[tempObjAvailList objectAtIndex:j] objectAtIndex:0] isEqualToString:@"Permit"]){
                [queryString appendFormat:@"select * from WSMPERMITMASTER"];
            }
            else if ([[[tempObjAvailList objectAtIndex:j] objectAtIndex:0] isEqualToString:@"Equipment"]){
                [queryString appendFormat:@"select * from WSMEQUIPMASTER"];
            }
            else if ([[[tempObjAvailList objectAtIndex:j] objectAtIndex:0] isEqualToString:@"Wcm Requirement"]){
                [queryString appendFormat:@"select * from WSMWCMRMASTER"];
            }
            
            if ([self set_query:queryString]) {
                [tempLastLayerData addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            [objAvailList addObject:[NSMutableArray arrayWithObjects:[tempObjAvailList objectAtIndex:j],tempLastLayerData, nil]];
        }
        
        [riskList addObject:[NSMutableArray arrayWithObjects:[tempriskList objectAtIndex:i],tempresponseList,objAvailList, nil]];
    }
    
    return riskList;
}

-(NSMutableArray *)getSafetyMeasures:(NSString *)tableCall{
    
    NSMutableArray *safetyMeasureArray = [NSMutableArray new];
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    [queryString appendFormat:@"select * from %@",tableCall];
    
    if ([self set_query:queryString]) {
        [safetyMeasureArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return safetyMeasureArray;
}

- (NSArray *)getPriorityList:(NSString *)getFilteredList
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"select distinct notificationh_id, notificationh_type_id, notificationh_type_name, notificationh_shorttext, notificationh_longtext, notificationh_funcloc_id, notificationh_funcloc_name, notificationh_equip_id, notificationh_equip_name, notificationh_priorityid, notificationh_priority_name, notificationh_startdate, notificationh_enddate, notificationh_breakdown, notificationh_plantid, notificationh_plantname, notificationh_workcenterid, notificationh_workcentername, notificationh_latitudes, notificationh_longitudes, notificationh_altitudes, notificationh_status, notificationh_reported_by, nh_objectid, nh_docs, notificationh_reqstartdate, notificationh_reqenddate, notificationh_shift, notificationh_noofperson, notificationh_effect_id, notificationh_effect_name, notificationh_personresponsible_id, notificationh_personresponsible_text, notificationh_order_no, notificationh_reported_by_Input,notificationh_ingrp,notificationh_ingrp_name from NOTIFICATION_HEADER"];
    
    if ([getFilteredList length]) {
        
        [queryString appendFormat:@" where %@",getFilteredList];
    }
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    return statusFilters;
}

- (NSArray *)getSortedList:(NSString *)getSortedList
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters;
    
    statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER"];
    
    if ([getSortedList length]) {
        
        [queryString appendFormat:@" ORDER BY %@",getSortedList];
    }
    
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    return statusFilters;
}

- (NSArray *)getAllNotifications
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *allNotificationsArray = [NSMutableArray new];
    
    [queryString appendFormat:@"select * from NOTIFICATION_HEADER where  ORDER BY notificationh_startdate DESC"];
    
    if ([self set_query:queryString]) {
        
        [allNotificationsArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    return allNotificationsArray;
}

- (void)getinsertDetailOrderDetailstoDictionary:(NSMutableDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withCustomHeaderFields:(NSMutableArray *)customHeaderDetails withTransaction:(NSMutableArray *)transactionDetails withCustomTransactionFields:(NSMutableArray *)customComponentDetails ForUUID:(NSString *)uuid
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from ORDER_HEADER where orderh_id = '%@' order by orderh_startdate",uuid];
    NSMutableArray *headerDetailsArray;
    if ([self set_query:queryString]) {
        headerDetailsArray = [self run_Queries_WITHDATA];
    }
    if ([headerDetailsArray count]) {
        NSArray *detailArray = [headerDetailsArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"OID"];
        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"ONAME"];
        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"SHORTTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"LONGTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"FID"];
        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"FNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"EQID"];
        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"EQNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"ACCINCID"];
        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"ACCINCNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"PID"];
        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"PNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"SDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"EDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:15] forKey:@"PLANTID"];
        [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"WORKCENTERID"];
        [headerDetails setObject:[detailArray objectAtIndex:17] forKey:@"LATITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LONGITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"ALTITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:20] forKey:@"REPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:21] forKey:@"OSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"OBJECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"UPDDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:24] forKey:@"SYNCSTATUS"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = 'I' and Zdoctype = 'Q'"];
    NSMutableArray *endPointArray;
    if ([self set_query:queryString]) {
        endPointArray = [self run_Queries_WITHDATA];
    }
    if ([endPointArray count]) {
        NSArray *detailArray = [endPointArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select * from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@'",uuid];
    
    NSMutableArray *equipmentHistoryArray;
    if ([self set_query:queryString]) {
        equipmentHistoryArray = [self run_Queries_WITHDATA];
    }
    if ([equipmentHistoryArray count]) {
        [headerDetails setObject:equipmentHistoryArray forKey:@"EQUIPMENTHISTORY"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_ATTACHMENTS where ordera_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [attachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, sequence from ORDER_HEADER_CUSTOMFIELDS where order_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [customHeaderDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [transactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, sequence from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [customComponentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
}


-(NSMutableArray *)insertNotificationActivities:(NSDictionary *)activityDetails{

     NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];

    // CREATE TABLE "NOTIFICATIONS_ACTIVITY_COPY" ( `notificationa_id` TEXT, `notificationa_header_id` TEXT, `notificationa_Actcodetext` TEXT, `notificationa_Actgrptext` TEXT, `notificationa_Action` TEXT, `notificationa_ActvCod` TEXT, `notificationa_ActvGrp` TEXT, `notificationa_ActvKey` TEXT, `notificationa_ActvShtxt` TEXT, `notificationa_CauseKey` TEXT, `notificationa_Defectcodetext` TEXT, `notificationa_Defectgrptext` TEXT, `notificationa_ItemKey` TEXT, `notificationa_ItemdefectCod` TEXT, `notificationa_ItemdefectGrp` TEXT, `notificationa_ItemdefectShtxt` TEXT, `notificationa_ItempartCod` TEXT, `notificationa_ItempartGrp` TEXT, `notificationa_Partcodetext` TEXT, `notificationa_Partgrptext` TEXT, `Qmnum` TEXT, `Usr01` TEXT, `Usr02` TEXT, `Usr03` TEXT, `Usr04` TEXT, `Usr05` TEXT )
    
    
    [queryString appendFormat:@"insert into NOTIFICATIONS_ACTIVITY_COPY (notificationa_id, notificationa_header_id, notificationa_Actcodetext, notificationa_Actgrptext, notificationa_Action, notificationa_ActvCod, notificationa_ActvGrp, notificationa_ActvKey, notificationa_ActvShtxt,notificationa_CauseKey,notificationa_Defectcodetext,notificationa_Defectgrptext,notificationa_ItemKey,notificationa_ItemdefectCod,notificationa_ItemdefectGrp,notificationa_ItemdefectShtxt,notificationa_ItempartCod,notificationa_ItempartGrp,notificationa_Partcodetext,notificationa_Partgrptext,Qmnum,Usr01,Usr02,Usr03,Usr04,Usr05) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",@"",[activityDetails objectForKey:@"ID"],[activityDetails objectForKey:@"ACTIVITYCODETEXT"],[activityDetails objectForKey:@"ACTIVITYGROUPTEXT"],@"I",[activityDetails objectForKey:@"ACTIVITYCODE"],[activityDetails objectForKey:@"ACTIVITYGROUP"],@"",[activityDetails objectForKey:@"ACTIVITYSHORTTEXT"],@"",@"",@"",[activityDetails objectForKey:@"ITEMKEY"],[activityDetails objectForKey:@"DAMAGE"],[activityDetails objectForKey:@"DAMAGECODE"],[activityDetails objectForKey:@"DAMAGEDESCRIPTION"],[activityDetails objectForKey:@"OBJECTPART"],[activityDetails objectForKey:@"OBJECTPARTCODE"],[activityDetails objectForKey:@"OBJECTPARTDESCRIPTION"],@"",@"",[activityDetails objectForKey:@"USR01"],[activityDetails objectForKey:@"USR02"],[activityDetails objectForKey:@"USR03"],[activityDetails objectForKey:@"USR04"],[activityDetails objectForKey:@"USR05"]];
    
      if ([self set_query:queryString])
      {
           [self run_Queries_NODATA];
      }
    
     return [NSMutableArray array];
 }

-(NSMutableArray *)insertNotificationTransactions:(NSDictionary *)transactionDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //CREATE TABLE "NOTIFICATION_TRANSACTION" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_component_id" VARCHAR,"notificationt_component_name" VARCHAR,"notificationt_problem_id" VARCHAR,"notificationt_problem_name" VARCHAR, "notificationt_causegroup_id" VARCHAR,"notificationt_causegroup_name" VARCHAR,"notificationt_causecode_id" VARCHAR,"notificationt_causecode_name" VARCHAR,"notificatont_description" VARCHAR,"notificatont_causecode_description" VARCHAR DEFAULT (null) ,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR,"notificationt_compstatus" VARCHAR, "notificationt_itemstatus" VARCHAR, "notificationt_objectpartgroup" VARCHAR, "notificationt_objectpart" VARCHAR)
    
    [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_COPY (notificationt_header_id, notificationt_component_id, notificationt_component_name, notificationt_problem_id, notificationt_problem_name, notificationt_causegroup_id, notificationt_causegroup_name, notificationt_causecode_id, notificationt_causecode_name,notificatont_description,notificatont_causecode_description,notificationt_itemkey,notificationt_causekey,notificationt_compstatus,notificationt_itemstatus,notificationt_objectpartgroup,notificationt_objectpart,notificationt_objectpartgroup_text,notificationt_objectpart_text) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"DAMAGEID"],[transactionDetails objectForKey:@"DAMAGETEXT"],[transactionDetails objectForKey:@"DAMAGECODEID"],[transactionDetails objectForKey:@"DAMAGECODETEXT"],[transactionDetails objectForKey:@"CAUSEID"],[transactionDetails objectForKey:@"CAUSETEXT"],[transactionDetails objectForKey:@"CAUSECODEID"],[transactionDetails objectForKey:@"CAUSECODETEXT"],[transactionDetails objectForKey:@"DAMAGEDESCRIPTION"],[transactionDetails objectForKey:@"CAUSEDESCRIPTION"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"],[transactionDetails objectForKey:@"CAUSESTATUS"],[transactionDetails objectForKey:@"ITEMSTATUS"],[transactionDetails objectForKey:@"OBJECTPARTGROUPID"],[transactionDetails objectForKey:@"OBJECTPARTID"],[transactionDetails objectForKey:@"OBJECTPARTGROUPTEXT"],[transactionDetails objectForKey:@"OBJECTPARTTEXT"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    id customDamageTransactionFields,customCauseTransactionFields;
    
    customDamageTransactionFields = [[transactionDetails objectForKey:@"CUSTOM"] firstObject];
    customCauseTransactionFields = [[transactionDetails objectForKey:@"CUSTOM"] lastObject];
    
    for (int x=0; x<[customDamageTransactionFields count]; x++) {
        [queryString setString:@""];
        //CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
        
        for (int y=0; y<[[customDamageTransactionFields objectAtIndex:x] count]; y++) {
            [queryString appendFormat:@",'%@'",[[customDamageTransactionFields objectAtIndex:x] objectAtIndex:y]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    for (int x=0; x<[customCauseTransactionFields count]; x++) {
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY(notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
        
        for (int y=0; y<[[customCauseTransactionFields objectAtIndex:x] count]; y++) {
            [queryString appendFormat:@",'%@'",[[customCauseTransactionFields objectAtIndex:x] objectAtIndex:y]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)insertNotificationTransactionsDetails :(NSString *)uuid withTransactionDetailsCopy:(NSArray *)transactionDetails withActivityDetailsArray:(NSArray *)activityDetails withTaskCodeDetailsCopy:(NSArray *)taskCodeDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //For Notification Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_COPY where notificationt_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //For Notification Transaction Custom Fields
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY where notificationt_id = '%@' ",uuid];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[transactionDetails count]; i++) {
        [queryString setString:@""];
        //CREATE TABLE "NOTIFICATION_TRANSACTION_COPY" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_component_id" VARCHAR,"notificationt_component_name" VARCHAR,"notificationt_problem_id" VARCHAR,"notificationt_problem_name" VARCHAR, "notificationt_causegroup_id" VARCHAR,"notificationt_causegroup_name" VARCHAR,"notificationt_causecode_id" VARCHAR,"notificationt_causecode_name" VARCHAR,"notificatont_description" VARCHAR,"notificatont_causecode_description" VARCHAR DEFAULT (null) ,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR,"notificationt_compstatus" VARCHAR, "notificationt_itemstatus" VARCHAR, "notificationt_objectpartgroup" VARCHAR, "notification_objectpart" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_COPY (notificationt_header_id, notificationt_component_id, notificationt_component_name, notificationt_problem_id, notificationt_problem_name, notificationt_causegroup_id, notificationt_causegroup_name, notificationt_causecode_id, notificationt_causecode_name,notificatont_description,notificatont_causecode_description,notificationt_itemkey,notificationt_causekey,notificationt_compstatus,notificationt_itemstatus,notificationt_objectpartgroup,notificationt_objectpart,notificationt_objectpartgroup_text,notificationt_objectpart_text) values('%@'",uuid];
        
        for (int j=2; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customDamageTransactionFields,customCauseTransactionFields;
        
        if ([[transactionDetails objectAtIndex:i] count]>1) {
            customDamageTransactionFields = [[transactionDetails objectAtIndex:i] objectAtIndex:1];
            customCauseTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customDamageTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY (notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",uuid,[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
            
            for (int y=0; y<[[customDamageTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customDamageTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
        
        for (int x=0; x<[customCauseTransactionFields count]; x++) {
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY (notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",uuid,[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:12],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:13]];
            
            for (int y=0; y<[[customCauseTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customCauseTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For Notification Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TASKS_COPY where notificationt_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[taskCodeDetails count]; i++) {
        [queryString setString:@""];
        
        id customTasksFields;
        
        //CREATE TABLE "NOTIFICATION_TASKS_COPY" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_taskkey" VARCHAR,"notificationt_tgroup_id" VARCHAR,"notificationt_tgroup_name" VARCHAR,"notificationt_tcode_id" VARCHAR,"notificationt_tcode_name" ,"notificationt_Description" VARCHAR NOT NULL ,"notificationt_tprocessor_id" VARCHAR NOT NULL ,"notificationt_tprocessor_name" VARCHAR NOT NULL ,"notificationt_response_name" VARCHAR,"notificationt_planned_startdate" VARCHAR,"notificatont_planned_finishdate" VARCHAR,"notificatont_release_status" VARCHAR,"notificatont_complete_status" VARCHAR,"notificatont_success_status" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_item_status" VARCHAR,"notificationt_item_partgrp_id" VARCHAR DEFAULT (null) ,"notificationt_item_partgrp_name" VARCHAR,"notificationt_item_partcode_id" VARCHAR,"notificationt_item_partcode_name" VARCHAR,"notificationt_item_defectgrp_id" VARCHAR DEFAULT (null) , "notificationt_item_defectgrp_name" VARCHAR, "notificationt_item_defectcode_id" VARCHAR, "notificationt_item_defectcode_name" VARCHAR, "notificationt_item_defectshtxt" VARCHAR, "notificationt_item_userstatus" VARCHAR, "notificationt_item_systemstatus" VARCHAR, "notificationt_item_smsttxt" VARCHAR, "notificationt_item_smastxt" VARCHAR, "notificationt_item_usr01" VARCHAR, "notificationt_item_usr02" VARCHAR, "notificationt_item_usr03" VARCHAR, "notificationt_item_usr04" VARCHAR, "notificationt_item_usr05" VARCHAR, "notificationt_planned_stime" VARCHAR, "notificationt_planned_ftime" VARCHAR, "notificationt_completion_date" VARCHAR, "notificationt_completion_time" VARCHAR, "notificationt_completed_by" VARCHAR)
        
        [queryString appendFormat:@"insert into NOTIFICATION_TASKS_COPY  (notificationt_header_id, notificationt_taskkey, notificationt_tgroup_id, notificationt_tgroup_name, notificationt_tcode_id, notificationt_tcode_name, notificationt_Description, notificationt_tprocessor_id, notificationt_tprocessor_name, notificationt_response_name, notificationt_planned_startdate, notificatont_planned_finishdate, notificatont_release_status, notificatont_complete_status, notificatont_success_status, notificationt_itemkey,notificationt_item_status,notificationt_item_partgrp_id,notificationt_item_partgrp_name,notificationt_item_partcode_id,notificationt_item_partcode_name,notificationt_item_defectgrp_id,notificationt_item_defectgrp_name,notificationt_item_defectcode_id,notificationt_item_defectcode_name,notificationt_item_defectshtxt,notificationt_item_userstatus,notificationt_item_systemstatus,notificationt_item_smsttxt,notificationt_item_smastxt,notificationt_item_usr01,notificationt_item_usr02,notificationt_item_usr03,notificationt_item_usr04,notificationt_item_usr05,notificationt_planned_stime,notificationt_planned_ftime,notificationt_completion_date,notificationt_completion_time,notificationt_completed_by) values('%@'",uuid];
        
        for (int j=2; j<[[[taskCodeDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[taskCodeDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        if ([[taskCodeDetails objectAtIndex:i] count]>1) {
            customTasksFields = [[taskCodeDetails objectAtIndex:i] lastObject];
        }
        
         [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTFICATION_TASKS_CUSTOMFIELDS_COPY (notificationt_id,  notificationt_itemkey, notificationt_taskkey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",uuid,[[[taskCodeDetails objectAtIndex:i] firstObject]objectAtIndex:16],[[[taskCodeDetails objectAtIndex:i] firstObject]objectAtIndex:3]];
        
        for (int y=0; y<[customTasksFields count]; y++) {
            [queryString appendFormat:@",'%@'",[customTasksFields  objectAtIndex:y]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
 
    
      for (int i=0; i<[activityDetails count]; i++) {
       
             [queryString setString:@""];
          
          // CREATE TABLE "NOTIFICATIONS_ACTIVITY_COPY" ( `notificationa_id` TEXT, `notificationa_header_id` TEXT, `notificationa_Actcodetext` TEXT, `notificationa_Actgrptext` TEXT, `notificationa_Action` TEXT, `notificationa_ActvCod` TEXT, `notificationa_ActvGrp` TEXT, `notificationa_ActvKey` TEXT, `notificationa_ActvShtxt` TEXT, `notificationa_CauseKey` TEXT, `notificationa_Defectcodetext` TEXT, `notificationa_Defectgrptext` TEXT, `notificationa_ItemKey` TEXT, `notificationa_ItemdefectCod` TEXT, `notificationa_ItemdefectGrp` TEXT, `notificationa_ItemdefectShtxt` TEXT, `notificationa_ItempartCod` TEXT, `notificationa_ItempartGrp` TEXT, `notificationa_Partcodetext` TEXT, `notificationa_Partgrptext` TEXT, `Qmnum` TEXT, `Usr01` TEXT, `Usr02` TEXT, `Usr03` TEXT, `Usr04` TEXT, `Usr05` TEXT )
          

        [queryString appendFormat:@"insert into NOTIFICATIONS_ACTIVITY_COPY (notificationa_id, notificationa_header_id, notificationa_Actcodetext, notificationa_Actgrptext, notificationa_Action, notificationa_ActvCod, notificationa_ActvGrp, notificationa_ActvKey, notificationa_ActvShtxt,notificationa_CauseKey,notificationa_Defectcodetext,notificationa_Defectgrptext,notificationa_ItemKey,notificationa_ItemdefectCod,notificationa_ItemdefectGrp,notificationa_ItemdefectShtxt,notificationa_ItempartCod,notificationa_ItempartGrp,notificationa_Partcodetext,notificationa_Partgrptext,Qmnum,Usr01,Usr02,Usr03,Usr04,Usr05) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",uuid,@"",[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Actcodetext"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Actgrptext"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Action"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ActvCod"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ActvGrp"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ActvKey"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ActvShtxt"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_CauseKey"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Defectcodetext"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Defectgrptext"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ItemKey"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ItemdefectCod"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ItemdefectGrp"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ItemdefectShtxt"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ItempartCod"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_ItempartGrp"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Partcodetext"],[[activityDetails objectAtIndex:i] objectForKey:@"notificationa_Partgrptext"],[[activityDetails objectAtIndex:i] objectForKey:@"Qmnum"],[[activityDetails objectAtIndex:i] objectForKey:@"Usr01"],[[activityDetails objectAtIndex:i] objectForKey:@"Usr02"],[[activityDetails objectAtIndex:i] objectForKey:@"Usr03"],[[activityDetails objectAtIndex:i] objectForKey:@"Usr04"],[[activityDetails objectAtIndex:i] objectForKey:@"Usr05"]];
          
          if ([self set_query:queryString]) {
              if ([self run_Queries_NODATA]) {
                  [ConsoleLogHandler showLog:[NSString stringWithFormat:@" activity copyinserted %i",i]];
              }
            }
          }
 
    return [NSMutableArray array];
}

-(NSMutableArray *)updateNotificationTransactions:(NSDictionary *)transactionDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    
    //CREATE TABLE "NOTIFICATION_TRANSACTION" ("notificationt_id" INTEGER PRIMARY KEY  NOT NULL ,"notificationt_header_id" VARCHAR,"notificationt_component_id" VARCHAR,"notificationt_component_name" VARCHAR,"notificationt_problem_id" VARCHAR,"notificationt_problem_name" VARCHAR, "notificationt_causegroup_id" VARCHAR,"notificationt_causegroup_name" VARCHAR,"notificationt_causecode_id" VARCHAR,"notificationt_causecode_name" VARCHAR,"notificatont_description" VARCHAR,"notificatont_causecode_description" VARCHAR DEFAULT (null) ,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR,"notificationt_compstatus" VARCHAR, "notificationt_itemstatus" VARCHAR, "notificationt_objectpartgroup" VARCHAR, "notificationt_objectpart" VARCHAR)
    
//    [queryString appendFormat:@"update NOTIFICATION_TRANSACTION_COPY set notificationt_component_id = '%@', notificationt_component_name = '%@',notificationt_problem_id = '%@', notificationt_problem_name = '%@', notificatont_description = '%@', notificationt_itemstatus = 'U' , notificationt_objectpartgroup = '%@', notificationt_objectpart = '%@' ,notificationt_objectpartgroup_text = '%@', notificationt_objectpart_text = '%@' where notificationt_header_id = '%@' and notificationt_itemkey = '%@'",[transactionDetails objectForKey:@"DAMAGEID"],[transactionDetails objectForKey:@"DAMAGETEXT"],[transactionDetails objectForKey:@"DAMAGECODEID"],[transactionDetails objectForKey:@"DAMAGECODETEXT"],[transactionDetails objectForKey:@"DAMAGEDESCRIPTION"],[transactionDetails objectForKey:@"OBJECTPARTGROUPID"],[transactionDetails objectForKey:@"OBJECTPARTID"],[transactionDetails objectForKey:@"OBJECTPARTGROUPTEXT"],[transactionDetails objectForKey:@"OBJECTPARTTEXT"],[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"]];
    
     [queryString appendFormat:@"update NOTIFICATION_TRANSACTION_COPY  set notificationt_header_id = '%@', notificationt_component_id = '%@', notificationt_component_name = '%@', notificationt_problem_id = '%@', notificationt_problem_name = '%@', notificationt_causegroup_id = '%@', notificationt_causegroup_name = '%@', notificationt_causecode_id = '%@', notificationt_causecode_name = '%@',notificatont_description = '%@',notificatont_causecode_description = '%@',notificationt_itemkey = '%@',notificationt_causekey = '%@',notificationt_compstatus = '%@',notificationt_itemstatus = '%@',notificationt_objectpartgroup = '%@',notificationt_objectpart = '%@',notificationt_objectpartgroup_text = '%@',notificationt_objectpart_text = '%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"DAMAGEID"],[transactionDetails objectForKey:@"DAMAGETEXT"],[transactionDetails objectForKey:@"DAMAGECODEID"],[transactionDetails objectForKey:@"DAMAGECODETEXT"],[transactionDetails objectForKey:@"CAUSEID"],[transactionDetails objectForKey:@"CAUSETEXT"],[transactionDetails objectForKey:@"CAUSECODEID"],[transactionDetails objectForKey:@"CAUSECODETEXT"],[transactionDetails objectForKey:@"DAMAGEDESCRIPTION"],[transactionDetails objectForKey:@"CAUSEDESCRIPTION"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"],[transactionDetails objectForKey:@"CAUSESTATUS"],[transactionDetails objectForKey:@"ITEMSTATUS"],[transactionDetails objectForKey:@"OBJECTPARTGROUPID"],[transactionDetails objectForKey:@"OBJECTPARTID"],[transactionDetails objectForKey:@"OBJECTPARTGROUPTEXT"],[transactionDetails objectForKey:@"OBJECTPARTTEXT"]];
    
    if([self set_query:queryString])
    {
        
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [queryString setString:@""];
                    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY where notificationt_id = '%@' and notificationt_itemkey = '%@' and notificationt_causekey = '%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
                    if ([self set_query:queryString]) {
                        if ([self run_Queries_NODATA]) {
                            
                            id customDamageTransactionFields,customCauseTransactionFields;
                            
                            customDamageTransactionFields = [[transactionDetails objectForKey:@"CUSTOM"] firstObject];
                            customCauseTransactionFields = [[transactionDetails objectForKey:@"CUSTOM"] lastObject];
                            
                            
                            for (int x=0; x<[customDamageTransactionFields count]; x++) {
                                [queryString setString:@""];
                                //CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
                                
                                [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY (notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
                                
                                for (int y=0; y<[[customDamageTransactionFields objectAtIndex:x] count]; y++) {
                                    [queryString appendFormat:@",'%@'",[[customDamageTransactionFields objectAtIndex:x] objectAtIndex:y]];
                                }
                                
                                [queryString appendFormat:@")"];
                                if ([self set_query:queryString]) {
                                    [self run_Queries_NODATA];
                                }
                            }
                            
                            for (int x=0; x<[customCauseTransactionFields count]; x++) {
                                [queryString setString:@""];
                                
                                [queryString appendFormat:@"insert into NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY (notificationt_id,  notificationt_itemkey, notificationt_causekey, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
                                
                                for (int y=0; y<[[customCauseTransactionFields objectAtIndex:x] count]; y++) {
                                    [queryString appendFormat:@",'%@'",[[customCauseTransactionFields objectAtIndex:x] objectAtIndex:y]];
                                }
                                
                                [queryString appendFormat:@")"];
                                if ([self set_query:queryString]) {
                                    [self run_Queries_NODATA];
                                }
                            }
                        }
                    }
                }
             }
    }
    
    return [NSMutableArray array];
}


-(NSMutableArray *)updateNotificationActivities:(NSDictionary *)activityDetails
{
 
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
//   [queryString appendFormat:@"update  NOTIFICATIONS_ACTIVITY_COPY (notificationa_id, notificationa_header_id, notificationa_Actcodetext, notificationa_Actgrptext, notificationa_Action, notificationa_ActvCod, notificationa_ActvGrp, notificationa_ActvKey, notificationa_ActvShtxt,notificationa_CauseKey,notificationa_Defectcodetext,notificationa_Defectgrptext,notificationa_ItemKey,notificationa_ItemdefectCod,notificationa_ItemdefectGrp,notificationa_ItemdefectShtxt,notificationa_ItempartCod,notificationa_ItempartGrp,notificationa_Partcodetext,notificationa_Partgrptext,Qmnum,Usr01,Usr02,Usr03,Usr04,Usr05) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",@"",[activityDetails objectForKey:@"ID"],[activityDetails objectForKey:@"ACTIVITYCODETEXT"],[activityDetails objectForKey:@"ACTIVITYGROUPTEXT"],@"I",[activityDetails objectForKey:@"ACTIVITYCODE"],[activityDetails objectForKey:@"ACTIVITYGROUP"],@"",[activityDetails objectForKey:@"ACTIVITYSHORTTEXT"],@"",@"",@"",[activityDetails objectForKey:@"ITEMKEY"],[activityDetails objectForKey:@"DAMAGE"],[activityDetails objectForKey:@"DAMAGECODE"],[activityDetails objectForKey:@"DAMAGEDESCRIPTION"],[activityDetails objectForKey:@"OBJECTPART"],[activityDetails objectForKey:@"OBJECTPARTCODE"],[activityDetails objectForKey:@"OBJECTPARTDESCRIPTION"],@"",@"",[activityDetails objectForKey:@"USR01"],[activityDetails objectForKey:@"USR02"],[activityDetails objectForKey:@"USR03"],[activityDetails objectForKey:@"USR04"],[activityDetails objectForKey:@"USR05"]];
    
    [queryString appendFormat:@"update NOTIFICATIONS_ACTIVITY_COPY  set notificationa_id = '%@', notificationa_header_id = '%@', notificationa_Actcodetext = '%@', notificationa_Actgrptext = '%@', notificationa_Action = '%@', notificationa_ActvCod = '%@', notificationa_ActvGrp = '%@', notificationa_ActvKey = '%@', notificationa_ActvShtxt = '%@',notificationa_CauseKey = '%@',notificationa_Defectcodetext = '%@',notificationa_Defectgrptext = '%@',notificationa_ItemKey = '%@',notificationa_ItemdefectCod = '%@',notificationa_ItemdefectGrp = '%@',notificationa_ItemdefectShtxt = '%@',notificationa_ItempartCod = '%@',notificationa_ItempartGrp = '%@',notificationa_Partcodetext = '%@',notificationa_Partgrptext = '%@',Qmnum = '%@',Usr01 = '%@',Usr02 = '%@',Usr03 = '%@',Usr04 = '%@',Usr05 = '%@'",@"",[activityDetails objectForKey:@"ID"],[activityDetails objectForKey:@"ACTIVITYCODETEXT"],[activityDetails objectForKey:@"ACTIVITYGROUPTEXT"],@"U",[activityDetails objectForKey:@"ACTIVITYCODE"],[activityDetails objectForKey:@"ACTIVITYGROUP"],[activityDetails objectForKey:@"ACTIVITYKEY"],[activityDetails objectForKey:@"ACTIVITYSHORTTEXT"],@"",@"",@"",[activityDetails objectForKey:@"ITEMKEY"],[activityDetails objectForKey:@"DAMAGE"],[activityDetails objectForKey:@"DAMAGECODE"],[activityDetails objectForKey:@"DAMAGEDESCRIPTION"],[activityDetails objectForKey:@"OBJECTPART"],[activityDetails objectForKey:@"OBJECTPARTCODE"],[activityDetails objectForKey:@"OBJECTPARTDESCRIPTION"],@"",@"",[activityDetails objectForKey:@"USR01"],[activityDetails objectForKey:@"USR02"],[activityDetails objectForKey:@"USR03"],[activityDetails objectForKey:@"USR04"],[activityDetails objectForKey:@"USR05"]];
    
    
    
    
    if([self set_query:queryString])
    {
        [self run_Queries_NODATA];
    }
    
    return [NSMutableArray array];
}



-(void)deleteNotificationTasks:(NSDictionary *)taskDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TASKS_COPY where notificationt_header_id = '%@' and notificationt_taskkey = '%@' ",[taskDetails objectForKey:@"ID"],[taskDetails objectForKey:@"TASKKEY"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
}


-(NSMutableArray *)fetchNotificationEquipmentHistoryForUUID:(NSString *)uuid{
    
    NSMutableArray *taskDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where Equnr = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [taskDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return taskDetails;
}
-(NSMutableArray *)fetchGeoTagHeader
{
    
    NSMutableArray *syncAllDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from GEOTAG_HEADER"];
    
    if ([self set_query:queryString]) {
        [syncAllDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return syncAllDetails;
}

-(NSMutableArray *)fetchNotificationTaskDetailsForUUID:(NSString *)uuid{
    
    NSMutableArray *taskDetails = [NSMutableArray new];
    
    NSMutableArray *tempTaskDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from NOTIFICATION_TASKS_COPY where notificationt_header_id = '%@' ORDER BY notificationt_itemkey ASC",uuid];
    
    if ([self set_query:queryString]) {
        [tempTaskDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    
    for (int x=0;x <[tempTaskDetails count]; x++) {
        
        NSMutableArray *tempCustomTasks = [NSMutableArray new];
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTFICATION_TASKS_CUSTOMFIELDS_COPY where notificationt_id = '%@' and notificationt_itemkey= '%@' and notificationt_taskkey = '%@' and doctypeitem = 'QT'",uuid,[[tempTaskDetails objectAtIndex:x] objectAtIndex:16],[[tempTaskDetails objectAtIndex:x] objectAtIndex:3]];
        
        if ([self set_query:queryString]) {
            [tempCustomTasks addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [taskDetails addObject:[NSArray arrayWithObjects:[tempTaskDetails objectAtIndex:x],tempCustomTasks,nil]];
    }
    
    
    return taskDetails;
}

-(NSMutableArray *)fetchNotificationActivitiesForUUID:(NSString *)uuid{
    
     NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from NOTIFICATIONS_ACTIVITY_COPY where notificationa_header_id = '%@' ORDER BY notificationa_ItemKey ASC",uuid];
 
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
 
    return tempTransactionDetails;
}




-(NSMutableArray *)fetchNotificationTransactionDetailsForUUID:(NSString *)uuid{
    
    NSMutableArray *transactionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from NOTIFICATION_TRANSACTION_COPY where notificationt_header_id = '%@' ORDER BY notificationt_itemkey, notificationt_causekey ASC",uuid];
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
        NSMutableArray *customDamageFields,*customCauseCodeFields;
        customDamageFields = [NSMutableArray new];
        customCauseCodeFields = [NSMutableArray new];
        
        [queryString setString:@""];
        /*
         CREATE TABLE "NOTIFICATION_TRANSACTION_CUSTOMFIELDS" ("notificationt_id" VARCHAR,"notificationt_itemkey" VARCHAR,"notificationt_causekey" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
         */
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY where notificationt_id = '%@' and notificationt_itemkey = '%@' and notificationt_causekey = '%@' and doctypeitem = 'QI'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:12],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:13]];
        if ([self set_query:queryString]) {
            [customDamageFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY where notificationt_id = '%@' and notificationt_itemkey= '%@' and notificationt_causekey = '%@' and doctypeitem = 'QC'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:12],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:13]];
        if ([self set_query:queryString]) {
            [customCauseCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customDamageFields,customCauseCodeFields,nil]];
    }
    
    return transactionDetails;
}



-(NSMutableArray *)fetchIsolationPermitDetails:(NSString *)uuid{
    
     NSMutableArray *issuePermits = [NSMutableArray new];
 
     NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    if ([uuid isEqualToString:@"X"]) {
        
        [queryString appendFormat:@"SELECT * from ORDER_WCM_ISSUEPERMITS where orderwcm_objart='WD'"];

    }
    else{
        
        [queryString appendFormat:@"SELECT * from ORDER_WCM_ISSUEPERMITS where orderwcm_objart='WA'"];
 
    }
    
    
    if ([self set_query:queryString]) {
        [issuePermits addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
     return issuePermits;
 }

-(NSMutableArray *)fetchNotificationLastCauseFromItemKey:(NSString *)itemKey{
    
    NSMutableArray *causeKey = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"SELECT notificationt_causekey from NOTIFICATION_TRANSACTION_COPY where notificationt_itemkey = '%@' ORDER BY notificationt_causekey DESC limit 1",itemKey];
    
    if ([self set_query:queryString]) {
        [causeKey addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return causeKey;
}

- (BOOL)updateDeletedNotificationTransactionsDetails:(NSDictionary *)notificationTransactionDetails
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_TRANSACTION_COPY set notificationt_compstatus = 'D' where notificationt_header_id = '%@' and notificationt_itemkey = '%@'",[notificationTransactionDetails objectForKey:@"ID"],[notificationTransactionDetails objectForKey:@"ITEMKEY"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    return YES;
}

- (BOOL)updateDeletedNotificationTasksDetails:(NSDictionary *)notificationTaskDetails
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_TASKS_COPY set notificationt_item_status = 'D' where notificationt_header_id = '%@' and notificationt_taskkey = '%@'",[notificationTaskDetails objectForKey:@"ID"],[notificationTaskDetails objectForKey:@"TASKKEY"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    return YES;
}

-(void)deleteNotificationHeader:(NSString *)notifUidiString
{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    
     [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id = '%@'",notifUidiString];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
        
    }
    
}


-(void)deleteNotificationTransactions:(NSDictionary *)transactionDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    //    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_COPY where notificationt_header_id = '%@' and notificationt_itemkey = '%@' and notificationt_causekey = '%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_COPY where notificationt_header_id = '%@' and notificationt_itemkey = '%@' ",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
        [queryString setString:@""];
        //        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY  where notificationt_id = '%@' and notificationt_itemkey = '%@' and notificationt_causekey = '%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"],[transactionDetails objectForKey:@"CAUSEKEY"]];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY  where notificationt_id = '%@' and notificationt_itemkey = '%@' ",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"ITEMKEY"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
}

-(void)deleteNotificationTransactions{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_COPY"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS_COPY"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
}

-(void)deleteNotificationTasks{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TASKS_COPY"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTFICATION_TASKS_CUSTOMFIELDS_COPY"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
}

-(void)deleteNotificationActivities{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATIONS_ACTIVITY_COPY"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
}

/////

-(NSMutableArray *)updateOrderTranscationDetails:(NSArray *)transactionArrayDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    for (int i =0; i<[transactionArrayDetails count]; i++) {
        [queryString setString:@""];
        
        [queryString appendFormat:@"UPDATE ORDER_TRANSACTION_COPY SET ordert_status = '%@', ordert_conftext = '%@', grund = '%@', leknw = '%@' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[[transactionArrayDetails objectAtIndex:i] objectAtIndex:10],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:11],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:23],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:25],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:0],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:1]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
            
            [queryString setString:@""];
            [queryString appendFormat:@"UPDATE ORDER_TRANSACTION SET ordert_status = '%@', ordert_conftext = '%@', grund = '%@', leknw = '%@' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[[transactionArrayDetails objectAtIndex:i] objectAtIndex:10],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:11],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:23],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:25],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:0],[[transactionArrayDetails objectAtIndex:i] objectAtIndex:1]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return [NSMutableArray array];
}


//WSM

-(NSMutableArray *)insertWorksafetyTransactions:(NSMutableDictionary *)transactionDetailsDictionary withSafetyMesures:(NSMutableArray *)safetyMeasures
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    NSMutableArray *transactionDetails=[NSMutableArray new];
    
    [transactionDetails addObjectsFromArray:[[transactionDetailsDictionary objectForKey:@"TRANSACTIONS"] copy]];
    
    //    CREATE TABLE "ORDER_WSM" ("orderwsm_header_id" VARCHAR, "orderwsm_vornr_operation" VARCHAR, "orderwsm_operation_name" VARCHAR, "orderwsm_risk_id" VARCHAR, "orderwsm_risk_name" VARCHAR, "orderwsm_response_id" VARCHAR, "orderwsm_response_name" VARCHAR, "orderwsm_objavail_id" VARCHAR, "orderwsm_objavail_name" VARCHAR, "orderwsm_safety_measurement_text" VARCHAR, "orderwsm_item_status" VARCHAR)
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"insert into ORDER_WSM_COPY (orderwsm_header_id, orderwsm_vornr_operation, orderwsm_operation_name, orderwsm_risk_id, orderwsm_risk_name, orderwsm_response_id, orderwsm_response_name, orderwsm_objavail_id, orderwsm_objavail_name,orderwsm_safety_measurement_text,orderwsm_item_status) values('%@','%@','','%@','%@','%@','%@','%@','','','%@')",[transactionDetailsDictionary objectForKey:@"ID"],[transactionDetails objectAtIndex:6] ,[transactionDetails objectAtIndex:0] ,[transactionDetails objectAtIndex:1] ,[transactionDetails objectAtIndex:3] ,[transactionDetails objectAtIndex:4],[transactionDetails objectAtIndex:7] ,[transactionDetailsDictionary objectForKey:@"ITEMSTATUS"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    
    //    CREATE TABLE "SAFETY_MEASUREMENTS" ("orderh_id" VARCHAR, "vornr" VARCHAR, "response_id" VARCHAR, "obj_avail" VARCHAR, "safety_measure_point" VARCHAR, "safety_measurement_text" VARCHAR, "owsm_item_status" VARCHAR)
    
    for (int i=0; i<[safetyMeasures count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into SAFETY_MEASUREMENTS_COPY (orderh_id, vornr, response_id, obj_avail, safety_measure_point, safety_measurement_text, owsm_item_status) values('%@','%@','%@','%@','%@','%@','%@')",[transactionDetailsDictionary objectForKey:@"ID"],[transactionDetails objectAtIndex:6],[transactionDetails objectAtIndex:3] ,[transactionDetails objectAtIndex:7],[[safetyMeasures objectAtIndex:i] objectAtIndex:0],[[safetyMeasures objectAtIndex:i] objectAtIndex:1],[transactionDetailsDictionary objectForKey:@"ITEMSTATUS"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
    }
    
    return [NSMutableArray array];
    
}


-(NSMutableArray *)fetchWSMTransactionDetails
{
    NSMutableArray *transactionDetailsArray=[NSMutableArray new];
    
    NSMutableArray *wsmtransactionDetailsArray = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct orderwsm_header_id, orderwsm_vornr_operation , orderwsm_operation_name , orderwsm_risk_id , orderwsm_risk_name , orderwsm_response_id , orderwsm_response_name , orderwsm_objavail_id , orderwsm_objavail_name , orderwsm_safety_measurement_text , orderwsm_item_status  from ORDER_WSM_COPY"];
    
    if ([self set_query:queryString]) {
        
        [wsmtransactionDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
        
        for (int i =0; i<[wsmtransactionDetailsArray count]; i++) {
            NSMutableArray *safetyMeasuresDetailsArray = [NSMutableArray new];
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"select distinct orderh_id,vornr,response_id,obj_avail,safety_measure_point,safety_measurement_text, owsm_item_status  from SAFETY_MEASUREMENTS_COPY where orderh_id = '%@' and vornr = '%@' and response_id = '%@'",[[wsmtransactionDetailsArray objectAtIndex:i] objectAtIndex:0],[[wsmtransactionDetailsArray objectAtIndex:i] objectAtIndex:1],[[wsmtransactionDetailsArray objectAtIndex:i] objectAtIndex:5]];
            
            if ([self set_query:queryString]) {
                
                [safetyMeasuresDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            [transactionDetailsArray addObject:[NSMutableArray arrayWithObjects:[wsmtransactionDetailsArray objectAtIndex:i],safetyMeasuresDetailsArray, nil]];
        }
    }
    
    return transactionDetailsArray;
}

-(NSMutableArray *)fetchWSMTransactionDetailsForUUID:(NSString *)uuid{
    
    
    NSMutableArray *transactionDetailsArray=[NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"select distinct orderwsm_header_id, orderwsm_vornr_operation , orderwsm_operation_name , orderwsm_risk_id , orderwsm_risk_name , orderwsm_response_id , orderwsm_response_name , orderwsm_objavail_id , orderwsm_objavail_name , orderwsm_safety_measurement_text , orderwsm_item_status  from ORDER_WSM where orderwsm_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [transactionDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]] ;
    }
    
    return transactionDetailsArray;
    
}


-(void)deleteWSMTransactionDEtailswithSafetyMeasures{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WSM_COPY"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from SAFETY_MEASUREMENTS_COPY"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
}


-(void)deleteWSMTransactions:(NSMutableArray *)transactionDetailsArray{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    
    //    CREATE TABLE "ORDER_WSM" ("orderwsm_header_id" VARCHAR, "orderwsm_vornr_operation" VARCHAR, "orderwsm_operation_name" VARCHAR, "orderwsm_risk_id" VARCHAR, "orderwsm_risk_name" VARCHAR, "orderwsm_response_id" VARCHAR, "orderwsm_response_name" VARCHAR, "orderwsm_objavail_id" VARCHAR, "orderwsm_objavail_name" VARCHAR, "orderwsm_safety_measurement_text" VARCHAR, "orderwsm_item_status" VARCHAR)
    
    [queryString appendFormat:@"delete from ORDER_WSM_COPY where orderwsm_header_id = '%@' and orderwsm_vornr_operation = '%@' and orderwsm_risk_id = '%@' and orderwsm_response_id = '%@' and orderwsm_objavail_id = '%@' ",[[transactionDetailsArray firstObject]  objectAtIndex:0],[[transactionDetailsArray firstObject] objectAtIndex:1],[[transactionDetailsArray firstObject]  objectAtIndex:3],[[transactionDetailsArray firstObject]  objectAtIndex:5],[[transactionDetailsArray firstObject]  objectAtIndex:7]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
        
        //CREATE TABLE "SAFETY_MEASUREMENTS_COPY" ("orderh_id" VARCHAR, "vornr" VARCHAR, "response_id" VARCHAR, "obj_avail" VARCHAR, "safety_measure_point" VARCHAR, "safety_measurement_text" VARCHAR, "owsm_item_status" VARCHAR)
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"delete from SAFETY_MEASUREMENTS_COPY where orderh_id = '%@' and vornr = '%@' and response_id = '%@' and obj_avail = '%@' ",[[transactionDetailsArray firstObject]  objectAtIndex:0],[[transactionDetailsArray firstObject] objectAtIndex:1],[[transactionDetailsArray firstObject]  objectAtIndex:5],[[transactionDetailsArray firstObject]  objectAtIndex:7]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
}







-(NSMutableArray *)insertOrderTranscationDetails:(NSDictionary *)transactionDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    // CREATE TABLE "ORDER_TRANSACTION_COPY" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR,"bemot" VARCHAR,"grund" VARCHAR,"learr" VARCHAR,"leknw" VARCHAR,"operation_plantid" VARCHAR,"operation_plantname" VARCHAR,"operation_workcenterid" VARCHAR,"operation_workcentertext" VARCHAR,"ordert_steustext" VARCHAR)
    
    [queryString appendFormat:@"insert into ORDER_TRANSACTION_COPY(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_operation_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"OPERATIONKEY"],[transactionDetails objectForKey:@"OPERATIONTEXT"],[transactionDetails objectForKey:@"DURATIONTEXTINPUT"],[transactionDetails objectForKey:@"DURATIONTEXT"],@"",@"",@"",@"",@"A",@"",@"",@"",@"",@"",@"",@"",@"",@"",@"",[transactionDetails objectForKey:@"OPERATIONLONGTEXT"],@"",@"",@"",@"",@"",[transactionDetails objectForKey:@"OPERATIONPLANTID"],[transactionDetails objectForKey:@"OPERATIONPLANTTEXT"],[transactionDetails objectForKey:@"OPERATIONWORKCENTERID"],[transactionDetails objectForKey:@"OPERATIONWORKCENTERTEXT"],[transactionDetails objectForKey:@"CONTROLKEYTEXT"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
        
        id customOperationTransactionFields;
        
        customOperationTransactionFields = [[transactionDetails objectForKey:@"CUSTOM"] lastObject];
        
        for (int x=0; x<[customOperationTransactionFields count]; x++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS_COPY(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@',''",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"OPERATIONKEY"]];
            
            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return [NSMutableArray array];
    
}

-(NSMutableArray *)insertOrderPartDetails:(NSDictionary *)partDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //CREATE TABLE "ORDER_PARTS_COPY" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR)
    
    
    //    CREATE TABLE "ORDER_PARTS_COPY" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR, "ordert_receipt" VARCHAR, "ordert_unload" VARCHAR)
    
    NSString *componentstring=[partDetails objectForKey:@"COMPONENTTEXT"];
    
    NSString *escapedString=[componentstring stringByReplacingOccurrencesOfString:@"'" withString:@""];
    
    [queryString appendFormat:@"insert into ORDER_PARTS_COPY(ordert_header_id, ordert_vornr_operation, ordert_quantity, ordert_lgort, ordert_lgorttext, ordert_matnr, ordert_matnrtext, ordert_meins, ordert_posnr, ordert_postp, ordert_postptext, ordert_rsnum, ordert_rspos, ordert_werks, ordert_werkstext,ordert_componentaction,ordert_receipt,ordert_unload) values('%@','%@','%@','%@','%@','%@','%@','','%@','','','','','%@','%@','%@','%@','%@')",[partDetails objectForKey:@"ID"],[partDetails objectForKey:@"OPERATIONKEY"],[partDetails objectForKey:@"QUANTITYTEXT"],[partDetails objectForKey:@"STORAGELOCATIONID"],[partDetails objectForKey:@"STORAGELOCATIONTEXT"],[partDetails objectForKey:@"COMPONENTID"],escapedString,[partDetails objectForKey:@"POSNR"],[partDetails objectForKey:@"PLANTCOMPONENTID"],[partDetails objectForKey:@"PLANTCOMPONENTTEXT"],[partDetails objectForKey:@"COMPONENTACTION"],[partDetails objectForKey:@"RECEIPT"],[partDetails objectForKey:@"UNLOADING"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
        
        id customCoomponentTransactionFields;
        
        customCoomponentTransactionFields = [[partDetails objectForKey:@"CUSTOM"] lastObject];
        
        for (int x=0; x<[customCoomponentTransactionFields count]; x++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS_COPY(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@',''",[partDetails objectForKey:@"ID"],[partDetails objectForKey:@"OPERATIONKEY"]];
            
            for (int y=0; y<[[customCoomponentTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customCoomponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return [NSMutableArray array];
    
}


-(NSMutableArray *)updateOrderPartDetails:(NSDictionary *)partDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //CREATE TABLE "ORDER_PARTS_COPY" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR)
    
    [queryString appendFormat:@"UPDATE ORDER_PARTS_COPY set ordert_quantity = '%@', ordert_lgort = '%@', ordert_lgorttext = '%@', ordert_matnr = '%@', ordert_matnrtext = '%@', ordert_posnr = '%@', ordert_werks = '%@', ordert_werkstext = '%@', ordert_componentaction = 'U' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[partDetails objectForKey:@"QUANTITYTEXT"],[partDetails objectForKey:@"STORAGELOCATIONID"],[partDetails objectForKey:@"STORAGELOCATIONTEXT"],[partDetails objectForKey:@"COMPONENTID"],[partDetails objectForKey:@"COMPONENTTEXT"],[partDetails objectForKey:@"POSNR"],[partDetails objectForKey:@"PLANTCOMPONENTID"],[partDetails objectForKey:@"PLANTCOMPONENTTEXT"],[partDetails objectForKey:@"ID"],[partDetails objectForKey:@"OPERATIONKEY"]];
    //[partDetails objectForKey:@"COMPONENTACTION"]
    
    //    [queryString appendFormat:@"insert into ORDER_PARTS_COPY(ordert_header_id, ordert_vornr_operation, ordert_quantity, ordert_lgort, ordert_lgorttext, ordert_matnr, ordert_matnrtext, ordert_meins, ordert_posnr, ordert_postp, ordert_postptext, ordert_rsnum, ordert_rspos, ordert_werks, ordert_werkstext,ordert_componentaction) values('%@','%@','%@','%@','%@','%@','%@','','%@','','','','','%@','%@','%@')",[partDetails objectForKey:@"ID"],[partDetails objectForKey:@"OPERATIONKEY"],[partDetails objectForKey:@"QUANTITYTEXT"],[partDetails objectForKey:@"STORAGELOCATIONID"],[partDetails objectForKey:@"STORAGELOCATIONTEXT"],[partDetails objectForKey:@"COMPONENTID"],[partDetails objectForKey:@"COMPONENTTEXT"],[partDetails objectForKey:@"POSNR"],[partDetails objectForKey:@"PLANTCOMPONENTID"],[partDetails objectForKey:@"PLANTCOMPONENTTEXT"],[partDetails objectForKey:@"COMPONENTACTION"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    return [NSMutableArray array];
    
}

//
//-(NSMutableArray *)insertOrderTranscationDetails:(NSMutableArray *)transactionDetails :(NSString *)uuid{
//
//    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
//
//    //For Order Transaction.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_TRANSACTION_COPY where ordert_header_id = '%@' ",uuid];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS_COPY where ordert_header_id = '%@' ",uuid];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i=0; i<[transactionDetails count]; i++) {
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_rsnum" VARCHAR,"ordert_rspos" VARCHAR,"ordert_component_id" VARCHAR,"ordert_component_name" VARCHAR,"ordert_werks" VARCHAR,"ordert_lgort" VARCHAR,"ordert_posnr" VARCHAR,"ordert_quantity_name" VARCHAR,"ordert_quantity_id" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_component_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_postp" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR DEFAULT (null) , "bemot" VARCHAR, "grund" VARCHAR, "learr" VARCHAR, "leknw" VARCHAR, "operation_plantid" VARCHAR, "operation_plantname" VARCHAR, "operation_workcenterid" VARCHAR, "operation_workcentertext" VARCHAR, "ordert_steustext" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into ORDER_TRANSACTION_COPY(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_rsnum, ordert_rspos, ordert_component_id, ordert_component_name, ordert_werks, ordert_lgort, ordert_posnr, ordert_quantity_name, ordert_quantity_id, ordert_operation_action, ordert_component_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_postp, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",uuid];
//
//        for (int j=1; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
//        }
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//
//        id customOperationTransactionFields,customComponentTransactionFields;
//
//        if ([[transactionDetails objectAtIndex:i] count]>1) {
//            customOperationTransactionFields = [[transactionDetails objectAtIndex:i] objectAtIndex:1];
//            customComponentTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
//        }
//
//        for (int x=0; x<[customOperationTransactionFields count]; x++) {
//            [queryString setString:@""];
//            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//
//            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS_COPY(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",uuid,[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:15]];
//
//            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//
//        for (int x=0; x<[customComponentTransactionFields count]; x++) {
//            [queryString setString:@""];
//
//            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS_COPY(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",uuid,[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:15]];
//
//            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//
//    return [NSMutableArray array];
//}

-(NSMutableArray *)insertOrderTranscationDetails:(NSMutableArray *)transactionDetails :(NSMutableArray *)partDetails :(NSString *)uuid{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //For Order Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_COPY where ordert_header_id = '%@' ",uuid];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS_COPY where ordert_header_id = '%@' ",uuid];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[transactionDetails count]; i++) {
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_rsnum" VARCHAR,"ordert_rspos" VARCHAR,"ordert_component_id" VARCHAR,"ordert_component_name" VARCHAR,"ordert_werks" VARCHAR,"ordert_lgort" VARCHAR,"ordert_posnr" VARCHAR,"ordert_quantity_name" VARCHAR,"ordert_quantity_id" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_component_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_postp" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR DEFAULT (null) , "bemot" VARCHAR, "grund" VARCHAR, "learr" VARCHAR, "leknw" VARCHAR, "operation_plantid" VARCHAR, "operation_plantname" VARCHAR, "operation_workcenterid" VARCHAR, "operation_workcentertext" VARCHAR, "ordert_steustext" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_TRANSACTION_COPY(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_operation_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",uuid];
        
        for (int j=1; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customOperationTransactionFields;
        
        if ([[transactionDetails objectAtIndex:i] count]>1) {
            customOperationTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customOperationTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS_COPY(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@',''",uuid,[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1]];
            
            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For Order Parts.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_PARTS_COPY where ordert_header_id = '%@' ",uuid];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[partDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_PARTS_COPY" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR, "ordert_receipt" VARCHAR, "ordert_unload" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_PARTS_COPY(ordert_header_id, ordert_vornr_operation, ordert_quantity, ordert_lgort, ordert_lgorttext, ordert_matnr, ordert_matnrtext, ordert_meins, ordert_posnr, ordert_postp, ordert_postptext, ordert_rsnum, ordert_rspos, ordert_werks, ordert_werkstext,ordert_componentaction,ordert_receipt,ordert_unload) values('%@'",uuid];
        
        for (int j=1; j<[[[partDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[partDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customComponentTransactionFields;
        
        if ([[partDetails objectAtIndex:i] count]>1) {
            customComponentTransactionFields = [[partDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customComponentTransactionFields count]; x++) {
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS_COPY(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",uuid,[[[partDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[partDetails objectAtIndex:i] firstObject]objectAtIndex:8]];
            
            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    return [NSMutableArray array];
}

-(BOOL)insertOrderCollectiveDetails:(NSMutableDictionary *) collectiveConfirmationDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //CREATE TABLE "ORDER_COLLECTIVECONFIRMATION" ("ordercc_id" VARCHAR, "ordercc_object_id" VARCHAR, "ordercc_reportedby" VARCHAR, "ordercc_confirmationtext" VARCHAR, "ordercc_learr" VARCHAR, "ordercc_bemot" VARCHAR, "ordercc_leknw" VARCHAR, "ordercc_grund" VARCHAR, "ordercc_aeuru" VARCHAR, "ordercc_rsnum" VARCHAR, "ordercc_sdate" VARCHAR, "ordercc_edate" VARCHAR, "ordercc_status" VARCHAR)
    
    //For Order Collective Confirmation.
    
    [queryString appendFormat:@"delete from ORDER_COLLECTIVECONFIRMATION where ordercc_id = '%@' ",[collectiveConfirmationDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"insert into ORDER_COLLECTIVECONFIRMATION values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[collectiveConfirmationDetails objectForKey:@"ID"],[collectiveConfirmationDetails objectForKey:@"OBJECTID"],[collectiveConfirmationDetails objectForKey:@"REPORTEDBY"],[collectiveConfirmationDetails objectForKey:@"CONFTEXT"],[collectiveConfirmationDetails objectForKey:@"ACTIVITYID"],[collectiveConfirmationDetails objectForKey:@"ACCINCID"],[collectiveConfirmationDetails objectForKey:@"CONFIRMREASON"],[collectiveConfirmationDetails objectForKey:@"REMAINWORK"],[collectiveConfirmationDetails objectForKey:@"AEURU"],[collectiveConfirmationDetails objectForKey:@"RSNUM"],[collectiveConfirmationDetails objectForKey:@"SDATE"],[collectiveConfirmationDetails objectForKey:@"EDATE"],[collectiveConfirmationDetails objectForKey:@"OSTATUS"]];
    
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
            [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
            NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
            
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Collective Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[collectiveConfirmationDetails objectForKey:@"REPORTEDBY"],[collectiveConfirmationDetails objectForKey:@"ID"],[collectiveConfirmationDetails objectForKey:@"OBJECTID"]];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    
    return YES;
}

-(NSMutableArray *)updateOrderTransactions:(NSDictionary *)transactionDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"update ORDER_TRANSACTION_COPY set ordert_operation_name = \"%@\", ordert_duration_name = \"%@\",ordert_duration_id = \"%@\", ordert_operationlongtext = \"%@\", operation_plantid = \"%@\", operation_plantname = \"%@\", operation_workcenterid = \"%@\", operation_workcentertext = \"%@\", ordert_operation_action = 'U' where ordert_header_id = \"%@\" and ordert_vornr_operation = \"%@\"",[transactionDetails objectForKey:@"OPERATIONTEXT"],[transactionDetails objectForKey:@"DURATIONTEXTINPUT"],[transactionDetails objectForKey:@"DURATIONTEXT"],[transactionDetails objectForKey:@"OPERATIONLONGTEXT"],[transactionDetails objectForKey:@"OPERATIONPLANTID"],[transactionDetails objectForKey:@"OPERATIONPLANTTEXT"],[transactionDetails objectForKey:@"OPERATIONWORKCENTERID"],[transactionDetails objectForKey:@"OPERATIONWORKCENTERTEXT"],[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"OPERATIONKEY"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)fetchOrderLastComponentFromOperationKey:(NSString *)operationKey{
    
    NSMutableArray *componentKey = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"SELECT ordert_posnr from ORDER_TRANSACTION_COPY where ordert_vornr_operation = '%@' ORDER BY ordert_posnr DESC limit 1",operationKey];
    
    if ([self set_query:queryString]) {
        [componentKey addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return componentKey;
}

-(NSMutableArray *)fetchOrderTransactionDetailsForUUID:(NSString *)uuid{
    
    NSMutableArray *transactionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION_COPY where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
        NSMutableArray *customOperationFields;
        customOperationFields = [NSMutableArray new];
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS_COPY where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and doctypeitem = 'WO'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1]];
        
        if ([self set_query:queryString]) {
            [customOperationFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customOperationFields,nil]];
    }
    
    return transactionDetails;
}

-(NSMutableArray *)fetchOrderPartDetailsForUUID:(NSString *)uuid{
    
    NSMutableArray *partDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from ORDER_PARTS_COPY where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    
    NSMutableArray *tempPartDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempPartDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempPartDetails count]; x ++) {
        NSMutableArray *customComponentFields = [NSMutableArray new];
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS_COPY where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WO'",uuid,[[tempPartDetails objectAtIndex:x] objectAtIndex:1],[[tempPartDetails objectAtIndex:x] objectAtIndex:8]];
        
        if ([self set_query:queryString]) {
            [customComponentFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [partDetails addObject:[NSArray arrayWithObjects:[tempPartDetails objectAtIndex:x],customComponentFields,nil]];
    }
    
    return partDetails;
}

-(NSMutableArray *)fetchOrderTransactionDetailsForUUIDCopy:(NSString *)uuid{
    
    NSMutableArray *transactionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
        NSMutableArray *customOperationFields,*customComponentCodeFields;
        customOperationFields = [NSMutableArray new];
        customComponentCodeFields = [NSMutableArray new];
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WO'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:15]];
        if ([self set_query:queryString]) {
            [customOperationFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WC'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:15]];
        if ([self set_query:queryString]) {
            [customComponentCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customOperationFields,customComponentCodeFields,nil]];
    }
    
    return transactionDetails;
}

- (BOOL)updateDeletedOrderTransactionsDetails:(NSDictionary *)orderTransactionDetails
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    //     [queryString appendFormat:@"update ORDER_TRANSACTION_COPY set ordert_operation_action = 'D' where ordert_header_id = '%@' and ordert_vornr_operation = '%@' and ordert_posnr = '%@'",[orderTransactionDetails objectForKey:@"ID"],[orderTransactionDetails objectForKey:@"OPERATIONKEY"],[orderTransactionDetails objectForKey:@"COMPONENTKEY"]];
    
    [queryString appendFormat:@"update ORDER_TRANSACTION_COPY set ordert_operation_action = 'D' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[orderTransactionDetails objectForKey:@"ID"],[orderTransactionDetails objectForKey:@"OPERATIONKEY"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    return YES;
}

-(void)deleteOrderTransactions{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_COPY"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS_COPY"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
            [queryString setString:@""];
            [queryString appendFormat:@"delete from ORDER_PARTS_COPY"];
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
                [queryString setString:@""];
                [queryString appendFormat:@"delete from ORDER_PARTS_CUSTOMFIELDS_COPY"];
                if ([self set_query:queryString]) {
                    [self run_Queries_NODATA];
                }
                
            }
        }
    }
}

-(void)deleteOrderTransactions:(NSDictionary *)transactionDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    //  CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR, "ordert_receipt" VARCHAR, "ordert_unload" VARCHAR)
    
    [queryString appendFormat:@"delete from ORDER_PARTS_COPY where ordert_header_id = '%@' and ordert_vornr_operation = '%@' ",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"OPERATIONKEY"]];
    
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS_COPY  where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[transactionDetails objectForKey:@"ID"],[transactionDetails objectForKey:@"OPERATIONKEY"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
}


- (BOOL)updateDeletedPartsTransactionsDetails:(NSDictionary *)orderPartsDetails
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    //     [queryString appendFormat:@"update ORDER_TRANSACTION_COPY set ordert_operation_action = 'D' where ordert_header_id = '%@' and ordert_vornr_operation = '%@' and ordert_posnr = '%@'",[orderTransactionDetails objectForKey:@"ID"],[orderTransactionDetails objectForKey:@"OPERATIONKEY"],[orderTransactionDetails objectForKey:@"COMPONENTKEY"]];
    
    [queryString appendFormat:@"update ORDER_PARTS_COPY set ordert_componentaction = 'D' where ordert_header_id = '%@' and ordert_vornr_operation = '%@' and  ordert_posnr = '%@'",[orderPartsDetails objectForKey:@"ID"],[orderPartsDetails objectForKey:@"OPERATIONKEY"],[orderPartsDetails objectForKey:@"COMPONENETKEY"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    return YES;
}

-(void)deletePartsTransactions:(NSDictionary *)partsDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    
    //    CREATE TABLE "ORDER_PARTS_COPY" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR, "ordert_receipt" VARCHAR, "ordert_unload" VARCHAR)
    
    [queryString appendFormat:@"delete from ORDER_PARTS_COPY where ordert_header_id = '%@' and ordert_posnr = '%@' ",[partsDetails objectForKey:@"ID"],[partsDetails objectForKey:@"COMPONENETKEY"]];
    
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS_COPY  where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[partsDetails objectForKey:@"ID"],[partsDetails objectForKey:@"OPERATIONKEY"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
}


//for measurement search
- (NSArray *)getSearchMeasureDoc:(NSString *)searchString
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *predicate;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *funclocRequest = [NSFetchRequest fetchRequestWithEntityName:@"EquipMptt"];
    
    if ([searchString isEqualToString:@"*"]) {
    }
    else{
        predicate = [NSPredicate predicateWithFormat:@" point beginswith[cd] %@ OR pttxt beginswith[cd]",searchString,searchString];
    }
    
    if (predicate){
        
        [funclocRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    }
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:funclocRequest error:&error];
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

-(void)deleteConfirmWorkOrderTimer:(NSString *)transactionId{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CONFIRMATION_TIMER where ordert_id = '%@' and ordert_action = 'New'",transactionId];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
}


-(void)deleteConfirmWorkOrderTimerForPCNF:(NSString *)transactionId{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CONFIRMATION_TIMER where ordert_id = '%@'",transactionId];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
}


-(NSMutableArray *)fetchLastRecordConfirmWorkOrderTimerSelected:(NSDictionary *)workOrderTimingDetails{
    
    NSMutableArray *transactionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT order_type FROM ORDER_TRANSACTION_CONFIRMATION_TIMER where ordert_id = '%@' and ordert_vornr = '%@' ORDER BY order_time DESC limit 1",[workOrderTimingDetails objectForKey:@"ID"],[workOrderTimingDetails objectForKey:@"OPERATIONKEY"]];
    
    if ([self set_query:queryString]) {
        [transactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return transactionDetails;
}

-(NSMutableArray *)fetchLastRecordConfirmWorkOrderTimer:(NSDictionary *)workOrderTimingDetails{
    
    NSMutableArray *transactionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    //and order_type != '%@' ,[workOrderTimingDetails objectForKey:@"TYPE"]
    //and ordert_pornr = '%@',,[workOrderTimingDetails objectForKey:@"COMPONENTKEY"]
    [queryString appendFormat:@"SELECT order_time FROM ORDER_TRANSACTION_CONFIRMATION_TIMER where ordert_id = '%@' and ordert_vornr = '%@' ORDER BY order_time DESC limit 1",[workOrderTimingDetails objectForKey:@"ID"],[workOrderTimingDetails objectForKey:@"OPERATIONKEY"]];
    
    if ([self set_query:queryString]) {
        [transactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return transactionDetails;
}



-(NSMutableArray *)fetchTotalDurationWorkOrderTimer:(NSDictionary *)workOrderDetails{
    
    NSMutableArray *transactionDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT order_duration FROM ORDER_TRANSACTION_CONFIRMATION_TIMER where ordert_id = '%@'",[workOrderDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [transactionDetails addObjectsFromArray: [self run_Queries_WITHDATA]];
    }
    
    return transactionDetails;
}


-(BOOL)deletePCNFTimerRecorded:(NSString *)Udid{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CONFIRMATION_TIMER where ordert_id ='%@'",Udid];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}



-(BOOL)insertWorkOrderTimerOperationStatus:(NSDictionary *)workOrderOperatusStatus{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"update ORDER_TRANSACTION_COPY set ordert_aueru = '%@' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[workOrderOperatusStatus objectForKey:@"TYPE"],[workOrderOperatusStatus objectForKey:@"ID"],[workOrderOperatusStatus objectForKey:@"OPERATIONKEY"]];
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"update ORDER_TRANSACTION set ordert_aueru = '%@' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[workOrderOperatusStatus objectForKey:@"TYPE"],[workOrderOperatusStatus objectForKey:@"ID"],[workOrderOperatusStatus objectForKey:@"OPERATIONKEY"]];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    
                }
            }
        }
    }
    
    return YES;
}

-(BOOL)insertConfirmOrderWorkTimer:(NSDictionary *)workOrderTimingDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    //CREATE TABLE "ORDER_TRANSACTION_CONFIRMATION_TIMER" ("ordert_id" VARCHAR,"ordert_vornr" VARCHAR,"ordert_pornr" VARCHAR,"order_time" VARCHAR,"order_type" VARCHAR DEFAULT (null) , "order_duration" VARCHAR, "ordert_action" VARCHAR)
    [queryString appendFormat:@"insert into ORDER_TRANSACTION_CONFIRMATION_TIMER values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[workOrderTimingDetails objectForKey:@"ID"],[workOrderTimingDetails objectForKey:@"OPERATIONKEY"],[workOrderTimingDetails objectForKey:@"COMPONENTKEY"],[workOrderTimingDetails objectForKey:@"TIME"],[workOrderTimingDetails objectForKey:@"TYPE"],[workOrderTimingDetails objectForKey:@"DURATION"],[workOrderTimingDetails objectForKey:@"ACTION"]];
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"update ORDER_TRANSACTION_COPY set ordert_aueru = '%@' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[workOrderTimingDetails objectForKey:@"TYPE"],[workOrderTimingDetails objectForKey:@"ID"],[workOrderTimingDetails objectForKey:@"OPERATIONKEY"]];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [queryString setString:@""];
                    [queryString appendFormat:@"update ORDER_TRANSACTION set ordert_aueru = '%@' where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[workOrderTimingDetails objectForKey:@"TYPE"],[workOrderTimingDetails objectForKey:@"ID"],[workOrderTimingDetails objectForKey:@"OPERATIONKEY"]];
                    
                    if ([self set_query:queryString]) {
                        
                        [self run_Queries_NODATA];
                    }
                }
            }
        }
        
        [ConsoleLogHandler showLog:@"Work Timings Inserted"];
    }
    
    return YES;
}

//For BOM
#pragma mark - BOM

-(NSMutableArray *)getBOMForSearchDescription:(NSDictionary *)descriptionDictionary{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    if ([descriptionDictionary objectForKey:@"BOMTransaction"]) {
        
        NSFetchRequest *equipmentBOMRequest = [[NSFetchRequest alloc] init];
        
        NSEntityDescription *entity = [NSEntityDescription entityForName:@"EquipmentBOMTransaction" inManagedObjectContext:context];
        
        equipmentBOMRequest = [NSFetchRequest fetchRequestWithEntityName:@"EquipmentBOMTransaction"];
        
        equipmentBOMRequest.resultType = NSDictionaryResultType;
        
        equipmentBOMRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"bomtransaction"],[[entity propertiesByName] objectForKey:@"bomcomponent"],[[entity propertiesByName] objectForKey:@"comptext"],[[entity propertiesByName] objectForKey:@"quantity"],[[entity propertiesByName] objectForKey:@"stlkz"],[[entity propertiesByName] objectForKey:@"unit"], nil];
        
        NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@"bomtransaction"
                                                                       ascending:YES];
        NSArray *sortDescriptors = [[NSArray alloc] initWithObjects:sortDescriptor, nil];
        [equipmentBOMRequest setSortDescriptors:sortDescriptors];
        
        NSPredicate *predicate = [NSPredicate predicateWithFormat:@"bomtransaction == %@",[descriptionDictionary objectForKey:@"BOM"]];
        
        [equipmentBOMRequest setPredicate:predicate];
        
        NSError *error;
        NSArray *tempArray = [context executeFetchRequest:equipmentBOMRequest error:&error];
        
        if (error) {
            [ConsoleLogHandler showLog:error.description];
        }
        
        [dataArray addObjectsFromArray:tempArray];
    }
    else{
        
        NSFetchRequest *equipmentBOMRequest = [[NSFetchRequest alloc] init];
        
        NSEntityDescription *entity = [NSEntityDescription entityForName:@"EquipmentBOMHeader" inManagedObjectContext:context];
        
        equipmentBOMRequest = [NSFetchRequest fetchRequestWithEntityName:@"EquipmentBOMHeader"];
        
        equipmentBOMRequest.resultType = NSDictionaryResultType;
        
        equipmentBOMRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"bomheader"],[[entity propertiesByName] objectForKey:@"bomdesc"],[[entity propertiesByName] objectForKey:@"plant"], nil];
        NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@"bomheader"
                                                                       ascending:YES];
        NSArray *sortDescriptors = [[NSArray alloc] initWithObjects:sortDescriptor, nil];
        [equipmentBOMRequest setSortDescriptors:sortDescriptors];
        
        NSError *error;
        NSArray *tempArray = [context executeFetchRequest:equipmentBOMRequest error:&error];
        
        if (error) {
            [ConsoleLogHandler showLog:error.description];
        }
        
        [dataArray addObjectsFromArray:tempArray];
    }
    
    return dataArray;
}

//- (NSMutableArray *)getBOMForSearchDescription:(NSDictionary *)descriptionDictionary
//{
//    NSArray *keyArray = [descriptionDictionary allKeys];
//
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//    [queryString appendString:@"select * from BOMLOOKUP_HEADER"];
//
//    NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
//
//    if ([keyArray containsObject:@"FILTER"]) {
//        [conditionString appendFormat:@" where %@",[descriptionDictionary objectForKey:@"FILTER"]];
//    }
//
//    if ([keyArray containsObject:@"COLOUMN"]){
//        [conditionString appendFormat:@" ORDER BY %@ %@",[descriptionDictionary objectForKey:@"COLOUMN"],[descriptionDictionary objectForKey:@"SORT"]];
//    }
//    else{
//        [conditionString appendFormat:@" ORDER BY Bom ASC"];
//    }
//
//    [queryString appendFormat:@" %@",conditionString];
//
//    if ([self set_query:queryString]) {
//        return [self run_Queries_WITHDICTIONARY];
//    }
//
//    return [NSMutableArray array];
//}


//For Bom Sorting
- (NSArray *)getBOMSortedList:(NSString *)getSortedList
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters;
    
    statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"select * from BOMLOOKUP_HEADER"];
    
    if ([getSortedList length]) {
        
        [queryString appendFormat:@" ORDER BY %@",getSortedList];
    }
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    
    return statusFilters;
}


- (NSArray *)getAllBOMComponents
{
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    NSMutableArray *allNotificationsArray = [NSMutableArray new];
    [queryString appendFormat:@"select * from BOMLOOKUP_HEADER"];
    
    if ([self set_query:queryString]) {
        
        [allNotificationsArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    return allNotificationsArray;
    
}


- (NSMutableArray *)getBomsSortedList:(NSArray *)localConditions
{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"EquipmentBOMHeader"];
    
    [materialsRequest setSortDescriptors:localConditions];
    
    [materialsRequest setResultType:NSDictionaryResultType];
    
    NSError *error = nil;
    NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
    if (error) {
        [NSException raise:@"no Building find" format:@"%@", [error localizedDescription]];
    }
    if (objs.count > 0) {
        // there is a Matnr with same id exsist. Use update method
        
        [dataArray addObjectsFromArray:objs];
        
    }else {
        
    }
    
    return dataArray;
}

- (NSMutableArray *)getStocksSortedList:(NSArray *)localConditions
{
 
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
 
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"StockOverView"];
    
    [materialsRequest setSortDescriptors:localConditions];
    
    [materialsRequest setResultType:NSDictionaryResultType];
    
    NSError *error = nil;
    NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
    if (error) {
        [NSException raise:@"no Building find" format:@"%@", [error localizedDescription]];
    }
    if (objs.count > 0) {
        // there is a Matnr with same id exsist. Use update method
        
        [dataArray addObjectsFromArray:objs];
        
    }else {
        
    }
    
    return dataArray;
}

//For Bom Sorting
- (NSArray *)getMaterialSortedList:(NSString *)getSortedList
{
//    AppDelegate   *appdelgate = (AppDelegate *)[[UIApplication
//                                                 sharedApplication]delegate];
//
//    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
//
//    NSMutableArray *dataArray = [NSMutableArray new];
//
//    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"Incidents"];
//
//    [materialsRequest setSortDescriptors:localConditions];
//
//    [materialsRequest setResultType:NSDictionaryResultType];
//
//    NSError *error = nil;
//    NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
//    if (error) {
//        [NSException raise:@"no Building find" format:@"%@", [error localizedDescription]];
//    }
//    if (objs.count > 0) {
//        // there is a Matnr with same id exsist. Use update method
//
//        [dataArray addObjectsFromArray:objs];
//
//    }else {
//
//    }
//
    return [NSMutableArray array];
}

- (NSArray *)getAllMaterials
{
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    NSMutableArray *allNotificationsArray = [NSMutableArray new];
    [queryString appendFormat:@"select * from STOCKOVERVIEWMASTER"];
    
    if ([self set_query:queryString]) {
        
        [allNotificationsArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    return allNotificationsArray;
    
}




//For StockOverview
#pragma mark - StockOverView

-(NSMutableArray *)getStockDataForSearchDescription:(NSDictionary *)plantDictionary{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    
    NSPredicate *predicate;
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *stockOverviewRequest = [[NSFetchRequest alloc] init];
    
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"StockOverView" inManagedObjectContext:context];
    
    stockOverviewRequest = [NSFetchRequest fetchRequestWithEntityName:@"StockOverView"];
    
    stockOverviewRequest.resultType = NSDictionaryResultType;
    
    stockOverviewRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"labst"],[[entity propertiesByName] objectForKey:@"lgort"],[[entity propertiesByName] objectForKey:@"lgpbe"],[[entity propertiesByName] objectForKey:@"maktx"],[[entity propertiesByName] objectForKey:@"matnr"],[[entity propertiesByName] objectForKey:@"speme"],[[entity propertiesByName] objectForKey:@"werks"],[[entity propertiesByName] objectForKey:@"bwtar"], nil];
    
    if ([plantDictionary objectForKey:@"PlantID"]) {
        
        predicate = [NSPredicate predicateWithFormat:@"lgort like[cd] %@",[plantDictionary objectForKey:@"PlantID"]];
        
         [stockOverviewRequest setPredicate:predicate];
 
    }
    
    
    NSSortDescriptor *sortDescriptor = [[NSSortDescriptor alloc] initWithKey:@"matnr"
                                                                   ascending:YES];
    NSArray *sortDescriptors = [[NSArray alloc] initWithObjects:sortDescriptor, nil];
    [stockOverviewRequest setSortDescriptors:sortDescriptors];
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:stockOverviewRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

//- (NSMutableArray *)getStockDataForSearchDescription:(NSDictionary *)plantDictionary
//{
//    NSArray *keyArray = [plantDictionary allKeys];
//
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//    [queryString appendString:@"select * from STOCKOVERVIEWMASTER "];
//
//    NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
//
//    if ([keyArray containsObject:@"FILTER"]) {
//        [conditionString appendFormat:@" where %@",[plantDictionary objectForKey:@"FILTER"]];
//    }
//
//    if ([keyArray containsObject:@"COLOUMN"]){
//        [conditionString appendFormat:@" ORDER BY %@ %@",[plantDictionary objectForKey:@"COLOUMN"],[plantDictionary objectForKey:@"SORT"]];
//    }
//    else{
//        [conditionString appendFormat:@" ORDER BY Labst DESC"];
//    }
//
//    [queryString appendFormat:@" %@",conditionString];
//
//    if ([self set_query:queryString]) {
//        return [self run_Queries_WITHDICTIONARY];
//    }
//
//    return [NSMutableArray array];
//}

- (BOOL)insertInspectionCheckListDetailwithTransactions:(NSMutableDictionary *)transactionsDictionary
{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    NSString *uuid= [self createUniqueIdfortable:@"INSPECTION"];
    
    NSMutableArray *transactions=[NSMutableArray new];
    
    transactions=[transactionsDictionary objectForKey:@"MDOCS"];
    
    for (int i=0; i<[transactions count]; i++) {
        
        [queryString appendFormat:@"insert into INSPECTION_CHECKLIST values('%@',\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",uuid,@"",[[transactions objectAtIndex:i] objectAtIndex:2],[[transactions objectAtIndex:i] objectAtIndex:3],[[transactions objectAtIndex:i] objectAtIndex:4],[[transactions objectAtIndex:i] objectAtIndex:5],[[transactions objectAtIndex:i] objectAtIndex:6],[[transactions objectAtIndex:i] objectAtIndex:7],[[transactions objectAtIndex:i] objectAtIndex:8],[[transactions objectAtIndex:i] objectAtIndex:9],[[transactions objectAtIndex:i] objectAtIndex:10]];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:@"Inspection Checklist Inserted"];
        }
        [queryString setString:@""];
        
    }
    
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    [queryString setString:@""];
    [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Inspection','Inspection','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[transactionsDictionary objectForKey:@"USERNAME"],uuid];
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    
    return YES;
}

- (BOOL)insertUtilityReserveDetail:(NSMutableDictionary *)headerDictionary withTransactions:(NSMutableArray *)transactions
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [headerDictionary setObject:[self createUniqueIdfortable:@"BOM"] forKey:@"ID"];
    
    [queryString appendFormat:@"insert into BOM_RESERVE_HEADER values('%@',\"%@\",\"%@\",\"%@\",\"%@\")",[headerDictionary objectForKey:@"ID"],[headerDictionary objectForKey:@"MOVEMENT"],[headerDictionary objectForKey:@"PLANT"],[headerDictionary objectForKey:@"CCENTER"],[headerDictionary objectForKey:@"ORDERNO"]];
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
        [ConsoleLogHandler showLog:@"Header Inserted"];
    }
    [queryString setString:@""];
    
    //    CREATE TABLE "BOM_RESERVE_TRANSACTION" ("bom_component" VARCHAR,"quantity" VARCHAR,"unit" VARCHAR,"reserH_ID" VARCHAR, "reserv_date" VARCHAR, "srorage_location" VARCHAR)
    
    for (int i=0; i<[transactions count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into BOM_RESERVE_TRANSACTION values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[transactions objectAtIndex:i] objectAtIndex:0],[[transactions objectAtIndex:i] objectAtIndex:1],[[transactions objectAtIndex:i] objectAtIndex:2],[headerDictionary objectForKey:@"ID"],[[transactions objectAtIndex:i] objectAtIndex:3],[[transactions objectAtIndex:i] lastObject]];
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    [queryString setString:@""];
    [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Reservation','Reserve','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDictionary objectForKey:@"REPORTEDBY"],[headerDictionary objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    return YES;
}

- (BOOL)insertStockOverviewData:(NSMutableArray *)stockData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    /*
     CREATE TABLE "STOCKOVERVIEWMASTER" ("Labst" VARCHAR, "Lgort" VARCHAR, "Lgpbe" VARCHAR, "Maktx" VARCHAR, "Matnr" VARCHAR, "Speme" VARCHAR, "Werks" VARCHAR)
     */
    
    for (int i=0; i<[stockData count]; i++) {
        
        if (queryString.length) {
            [queryString appendFormat:@"; "];
        }
        
        [queryString appendFormat:@"insert into STOCKOVERVIEWMASTER values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[stockData objectAtIndex:i] objectForKey:@"Labst"],[[stockData objectAtIndex:i] objectForKey:@"Lgort"],[[stockData objectAtIndex:i] objectForKey:@"Lgpbe"],[[[stockData objectAtIndex:i] objectForKey:@"Maktx"] stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding],[[stockData objectAtIndex:i] objectForKey:@"Matnr"],[[stockData objectAtIndex:i] objectForKey:@"Speme"],[[stockData objectAtIndex:i] objectForKey:@"Werks"]];
        
    }
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    return YES;
}

- (BOOL)insertCustomFields:(NSMutableArray *)customFieldsArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    /*
     CREATE TABLE "CUSTOMFIELDSMASTER" ("doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR,,"length" VARCHAR)
     */
    for (int i=0; i<[customFieldsArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into CUSTOMFIELDSMASTER values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[customFieldsArray objectAtIndex:i] objectAtIndex:0],[[customFieldsArray objectAtIndex:i] objectAtIndex:1],[[customFieldsArray objectAtIndex:i] objectAtIndex:2],[[customFieldsArray objectAtIndex:i] objectAtIndex:3],[[customFieldsArray objectAtIndex:i] objectAtIndex:4],[[customFieldsArray objectAtIndex:i] objectAtIndex:5],[[customFieldsArray objectAtIndex:i] objectAtIndex:6],[[customFieldsArray objectAtIndex:i] objectAtIndex:7],[[customFieldsArray objectAtIndex:i] objectAtIndex:8]];
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}
- (BOOL)insertGeoTagFields:(NSMutableArray *)geoTagFieldsArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    /*
     CREATE TABLE "CUSTOMFIELDSMASTER" ("doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR,,"length" VARCHAR)
     */
    for (int i=0; i<[geoTagFieldsArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into GEOTAG_HEADER values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[geoTagFieldsArray objectAtIndex:i] objectAtIndex:0],[[geoTagFieldsArray objectAtIndex:i] objectAtIndex:1],[[geoTagFieldsArray objectAtIndex:i] objectAtIndex:2],[[geoTagFieldsArray objectAtIndex:i] objectAtIndex:3],[[geoTagFieldsArray objectAtIndex:i] objectAtIndex:4]];
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}

- (BOOL)insertControlKeys:(NSMutableArray *)controlKeysArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from CONTROLKEYMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    /*
     CREATE TABLE "CONTROLKEYMASTER" ("doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
     */
    
    for (int i=0; i<[controlKeysArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into CONTROLKEYMASTER values(\"%@\",\"%@\")",[[controlKeysArray objectAtIndex:i] objectForKey:@"Steus"],[[controlKeysArray objectAtIndex:i] objectForKey:@"Txt"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

#pragma mark-
#pragma mark- WSM Risks

- (BOOL)insertWsmRisks:(NSMutableArray *)riskMasterArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMRISKMASTER" ("riskid" VARCHAR, "risksht" VARCHAR,"sort" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMRISKMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[riskMasterArray count]; i++) {
        
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMRISKMASTER values(\"%@\",\"%@\",\"%@\",\"\")",[[riskMasterArray objectAtIndex:i] objectForKey:@"Riskid"],[[riskMasterArray objectAtIndex:i] objectForKey:@"RiskSht"],[[riskMasterArray objectAtIndex:i] objectForKey:@"Sort"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmResponses:(NSMutableArray *)responseMasterArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMRESPONSEMASTER" ("riskid" VARCHAR, "respid" VARCHAR,"respht" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMRESPONSEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[responseMasterArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMRESPONSEMASTER values(\"%@\",\"%@\",\"%@\",\"\")",[[responseMasterArray objectAtIndex:i] objectForKey:@"Riskid"],[[responseMasterArray objectAtIndex:i] objectForKey:@"RespSht"],[[responseMasterArray objectAtIndex:i] objectForKey:@"Sort"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmObjAvail:(NSMutableArray *)objAvailArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMOBJAVAILMASTER" ("objectid" VARCHAR, "objectvalue" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMOBJAVAILMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[objAvailArray count]; i++) {
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into WSMOBJAVAILMASTER values(\"%@\",\"%@\",\"\")",[[objAvailArray objectAtIndex:i] objectAtIndex:0],[[objAvailArray objectAtIndex:i] objectAtIndex:1]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmMaterial:(NSMutableArray *)materialArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMMATERIALMASTER" ("matnr" VARCHAR, "maktx" VARCHAR,"safetychartxt" VARCHAR,"materialgroup" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMMATERIALMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[materialArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMMATERIALMASTER values(\"%@\",\"%@\",\"%@\",\"\")",[[materialArray objectAtIndex:i] objectForKey:@"Matnr"],[[materialArray objectAtIndex:i] objectForKey:@"Maktx"],[[materialArray objectAtIndex:i] objectForKey:@"SafetyCharTxt"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmDocument:(NSMutableArray *)documentArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMDOCUMENTMASTER" ("Doknr" VARCHAR, "Dokar" VARCHAR,"Dokvr" VARCHAR,"Text" VARCHAR,"SafetyChar" VARCHAR, "CharTxt" VARCHAR)
     NSString *CharTxt = [[arr_ResponseGetListOfWsmDocument objectAtIndex:i] objectForKey:@"CharTxt"];
     //        NSString *Dokar = [[arr_ResponseGetListOfWsmDocument objectAtIndex:i]  objectForKey:@"Dokar"];
     //        NSString *Doknr = [[arr_ResponseGetListOfWsmDocument objectAtIndex:i] objectForKey:@"Doknr"];
     //        NSString *Dokvr = [[arr_ResponseGetListOfWsmDocument objectAtIndex:i] objectForKey:@"Dokvr"];
     //        NSString *SafetyChar = [[arr_ResponseGetListOfWsmDocument objectAtIndex:i] objectForKey:@"SafetyChar"];
     //        NSString *Text = [[arr_ResponseGetListOfWsmDocument objectAtIndex:i] objectForKey:@"Text"];
     
     */
    
    [queryString setString:@"delete from WSMDOCUMENTMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[documentArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMDOCUMENTMASTER values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"\")",[[documentArray objectAtIndex:i] objectForKey:@"Doknr"],[[documentArray objectAtIndex:i] objectForKey:@"Dokar"],[[documentArray objectAtIndex:i] objectForKey:@"Dokvr"],[[documentArray objectAtIndex:i] objectForKey:@"Text"],[[documentArray objectAtIndex:i] objectForKey:@"SafetyChar"],[[documentArray objectAtIndex:i] objectForKey:@"CharTxt"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmEqui:(NSMutableArray *)equipArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMEQUIPMASTER" ("eamsequnr" VARCHAR, "descript" VARCHAR,"safetychartxt" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMEQUIPMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[equipArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMEQUIPMASTER values(\"%@\",\"%@\",\"%@\",\"\")",[[equipArray objectAtIndex:i] objectAtIndex:0],[[equipArray objectAtIndex:i] objectAtIndex:1],[[equipArray objectAtIndex:i] objectAtIndex:2]];
        
        if ([self set_query:queryString]) {
            
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmPermit:(NSMutableArray *)permitArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMPERMITMASTER" ("permitid" VARCHAR, "permittxt" VARCHAR,"safetychartxt" VARCHAR, "selectedobject" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMPERMITMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[permitArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMPERMITMASTER values(\"%@\",\"%@\",\"%@\",\"\")",[[permitArray objectAtIndex:i] objectAtIndex:0],[[permitArray objectAtIndex:i] objectAtIndex:1],[[permitArray objectAtIndex:i] objectAtIndex:2]];
        
        if ([self set_query:queryString]) {
            
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmWcmr:(NSMutableArray *)wcmrArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMWCMRMASTER" ("wcmid" VARCHAR, "wcmdescription" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMWCMRMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[wcmrArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMWCMRMASTER values(\"%@\",\"%@\",\"\",\"\")",[[wcmrArray objectAtIndex:i] objectAtIndex:0],[[wcmrArray objectAtIndex:i] objectAtIndex:1]];
        
        if ([self set_query:queryString]) {
            
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}

- (BOOL)insertWsmplants:(NSMutableArray *)plantsArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "WSMPLANTSMASTER" ("Werks" VARCHAR, "Asgmt" VARCHAR, "Asrsp" VARCHAR, "Slwid" VARCHAR, "selectedobject" VARCHAR)
     */
    
    [queryString setString:@"delete from WSMPLANTSMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[plantsArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into WSMPLANTSMASTER values(\"%@\",\"%@\",\"%@\",\"%@\",\"\")",[[plantsArray objectAtIndex:i] objectAtIndex:0],[[plantsArray objectAtIndex:i] objectAtIndex:1],[[plantsArray objectAtIndex:i] objectAtIndex:2],[[plantsArray objectAtIndex:i] objectAtIndex:3]];
        
        if ([self set_query:queryString]) {
            
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}



- (NSMutableDictionary *)getInspectionCheckListFor:(NSString *)inspectHID
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from INSPECTION_CHECKLIST where orderIC_id = \"%@\"",inspectHID];
    NSMutableDictionary *inspectionDetailDictionary = [NSMutableDictionary new];
    NSMutableArray *mdocsArray;
    
    if ([self set_query:queryString]) {
        mdocsArray = [self run_Queries_WITHDATA];
        if ([mdocsArray count]) {
            [inspectionDetailDictionary setObject:[mdocsArray copy] forKey:@"MDOCS"];
        }
        [queryString setString:@""];
        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = 'I' and Zdoctype = 'EI'"];
        NSMutableArray *endPointArray;
        if ([self set_query:queryString]) {
            endPointArray = [self run_Queries_WITHDATA];
        }
        if ([endPointArray count]) {
            NSArray *detailArray = [endPointArray lastObject];
            [inspectionDetailDictionary setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
        }
    }
    
    
    return inspectionDetailDictionary;
}

////////

- (NSMutableDictionary *)getReserveUtilityFor:(NSString *)reserveHID
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from BOM_RESERVE_HEADER where reserveH_ID = \"%@\"",reserveHID];
    NSMutableDictionary *headerDetailDictionary = [NSMutableDictionary new];
    NSMutableArray *headerArray;
    if ([self set_query:queryString]) {
        headerArray = [self run_Queries_WITHDATA];
    }
    if ([headerArray count]) {
        [headerDetailDictionary setObject:[[[headerArray objectAtIndex:0] objectAtIndex:0] copy] forKey:@"ID"];
        [headerDetailDictionary setObject:[[[headerArray objectAtIndex:0] objectAtIndex:1] copy] forKey:@"MOVEMENT"];
        [headerDetailDictionary setObject:[[[headerArray objectAtIndex:0] objectAtIndex:2] copy] forKey:@"PLANT"];
        [headerDetailDictionary setObject:[[[headerArray objectAtIndex:0] objectAtIndex:3] copy] forKey:@"CCENTER"];
        [headerDetailDictionary setObject:[[[headerArray objectAtIndex:0] objectAtIndex:4] copy] forKey:@"ORDERNO"];
        [queryString setString:@""];
        [queryString appendFormat:@"select bom_component,quantity,unit,reserv_date,srorage_location from BOM_RESERVE_TRANSACTION where reserH_ID = \"%@\"",reserveHID];
        [headerArray removeAllObjects];
        if ([self set_query:queryString]) {
            headerArray = [self run_Queries_WITHDATA];
            if ([headerArray count]) {
                [headerDetailDictionary setObject:[headerArray copy] forKey:@"ITEMS"];
            }
            [queryString setString:@""];
            [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = 'R' and Zdoctype = 'R'"];
            NSMutableArray *endPointArray;
            if ([self set_query:queryString]) {
                endPointArray = [self run_Queries_WITHDATA];
            }
            if ([endPointArray count]) {
                NSArray *detailArray = [endPointArray lastObject];
                [headerDetailDictionary setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
            }
        }
    }
    
    return headerDetailDictionary;
}

#pragma mark

- (NSString *)insertDataIntoOrderHeader:(NSDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermitWorkApprovalsDetails:(NSMutableArray *)permitWorkApprovalsDetails withOperation:(NSMutableArray *)transactionDetails withParts:(NSMutableArray *)partsDetails withWSM:(NSMutableArray *)wsmDetails withObjects:(NSMutableArray *)objectDetails withSystemStatus:(NSMutableArray *)systemStatus withPermitsWorkApplications:(NSMutableArray *)permitWorkApplicationDetails withIssuePermits:(NSMutableArray *)issuePermits withPermitsOperationWCD:(NSMutableArray *)operationWCDPermits withPermitsOperationWCDTagiingConditions:(NSMutableArray *)operationWCDTaggingConditionsPermits withPermitsStandardCheckPoints:(NSMutableArray *)permitsStandardCheckPoints withMeasurementDocs:(NSMutableArray *)measurementDocs
{
    //For Order Header
    NSMutableString *queryString = [NSMutableString new];
    BOOL isNew = YES;
    if ([[headerDetails objectForKey:@"ID"] length]) {
        isNew = false;
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",[headerDetails objectForKey:@"ID"]];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the Order";
        }
    }
    else
    {
        [headerDetails setValue:[self createUniqueIdfortable:@"OTH"] forKey:@"ID"];
    }
    
    NSString *objectIDStr = @"";
    if ([headerDetails objectForKey:@"OBJECTID"]) {
        objectIDStr = [headerDetails objectForKey:@"OBJECTID"];
    }
    
    [queryString setString:@""];
    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
 
//    CREATE TABLE "ORDER_HEADER" ( `orderh_id` VARCHAR, `orderh_type_id` VARCHAR, `orderh_type_name` VARCHAR, `orderh_shorttext` VARCHAR, `orderh_longtext` VARCHAR, `orderh_funcloc_id` VARCHAR, `orderh_funcloc_name` VARCHAR, `orderh_euipno_id` VARCHAR, `orderh_euipno_name` VARCHAR, `orderh_accindicator_id` VARCHAR, `orderh_accindicator_name` VARCHAR, `orderh_priority_id` VARCHAR, `orderh_priority_name` VARCHAR, `orderh_startdate` DATETIME, `orderh_enddate` DATETIME, `orderh_plant_id` VARCHAR, `orderh_plant_name` VARCHAR, `orderh_workcenter_id` VARCHAR, `orderh_workcenter_name` VARCHAR, `orderh_latitudes` VARCHAR, `orderh_longitudes` VARCHAR, `orderh_altitudes` VARCHAR, `orderh_reported_by` VARCHAR, `orderh_status` VARCHAR, `oh_objectID` VARCHAR, `oh_upadated_Date` DATETIME, `oh_docs` VARCHAR, `oh_sync_status` VARCHAR, `orderh_kokrs` VARCHAR, `orderh_kostl` VARCHAR, `orderh_qmnum` VARCHAR, `orderh_malf_sdate` VARCHAR, `orderh_malf_edate` VARCHAR, `orderh_effect_id` VARCHAR DEFAULT (null), `orderh_msaus` VARCHAR, `orderh_Nreported_by` VARCHAR, `orderh_effect_name` VARCHAR, `orderh_systemcondition_id` VARCHAR, `orderh_systemcondition_text` VARCHAR, `orderh_wsm` VARCHAR, `orderh_wcm` VARCHAR, `orderh_user01` VARCHAR, `orderh_user02` VARCHAR, `orderh_user03` VARCHAR, `orderh_user04` VARCHAR, `orderh_user05` VARCHAR, `orderh_personresponsible_id` VARCHAR, `orderh_personresponsible_text` VARCHAR, `orderh_ingrp` VARCHAR, `orderh_ingrp_name` VARCHAR, `orderh_posid` TEXT, `orderh_revnr` TEXT )
//
 
    [queryString appendFormat:@"insert into ORDER_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OID"],[headerDetails objectForKey:@"ONAME"],[headerDetails objectForKey:@"SHORTTEXT"],[headerDetails objectForKey:@"LONGTEXT"],[headerDetails objectForKey:@"FID"],[headerDetails objectForKey:@"FNAME"],[headerDetails objectForKey:@"EQID"],[headerDetails objectForKey:@"EQNAME"],[headerDetails objectForKey:@"ACCINCID"],[headerDetails objectForKey:@"ACCINCNAME"],[headerDetails objectForKey:@"OPID"],[headerDetails objectForKey:@"OPNAME"],[headerDetails objectForKey:@"SDATE"],[headerDetails objectForKey:@"EDATE"],[headerDetails objectForKey:@"PLANTID"],[headerDetails objectForKey:@"PLANTNAME"],[headerDetails objectForKey:@"WORKCENTERID"],[headerDetails objectForKey:@"WORKCENTERNAME"],[headerDetails objectForKey:@"LATITUDE"],[headerDetails objectForKey:@"LONGITUDE"],[headerDetails objectForKey:@"ALTITUDE"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"OSTATUS"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[headerDetails objectForKey:@"DOCS"],[headerDetails objectForKey:@"OSYNCSTATUS"],[headerDetails objectForKey:@"workarea"],[headerDetails objectForKey:@"costcenter"],[headerDetails objectForKey:@"QMNUM"],[headerDetails objectForKey:@"MALFUNCTIONSTARTDATE"],[headerDetails objectForKey:@"MALFUNCTIONENDDATE"],[headerDetails objectForKey:@"EFFECTID"],[headerDetails objectForKey:@"BREAKDOWN"],[headerDetails objectForKey:@"NREPORTEDBY"],[headerDetails objectForKey:@"EFFECTNAME"],[headerDetails objectForKey:@"SYSTEMCONDITIONID"],[headerDetails objectForKey:@"SYSTEMCONDITIONTEXT"],[headerDetails objectForKey:@"WSM"],[headerDetails objectForKey:@"WCM"],[headerDetails objectForKey:@"usr01"],[headerDetails objectForKey:@"usr02"],[headerDetails objectForKey:@"usr03"],[headerDetails objectForKey:@"usr04"],[headerDetails objectForKey:@"usr05"],[headerDetails objectForKey:@"PARNRID"],[headerDetails objectForKey:@"NAMEVW"],[headerDetails objectForKey:@"PLANNERGROUP"],[headerDetails objectForKey:@"PLANNERGROUPNAME"],[headerDetails objectForKey:@"POSID"],[headerDetails objectForKey:@"REVNR"]];
    
 
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the Order";
        }
    }
    else
    {
        return @"Cannot update the Order";
    }
    
    id equipmentHistory;
    if ([[headerDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
        //For Order Attachments.
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        equipmentHistory = [headerDetails objectForKey:@"EQUIPMENTHISTORY"];
    }
    
    for (int i =0; i<[equipmentHistory count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_HEADER_EQUIPMENTS_HISTORY" ("orderh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_HEADER_EQUIPMENTS_HISTORY(orderh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    id customHeaderFields = [headerDetails objectForKey:@"CFH"];
    
    if ([customHeaderFields count]) {
        //For Order Header Custom Fields.
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        //For Order Header Custom Fields
        for (int i=0; i<[customHeaderFields count]; i++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_HEADER_CUSTOMFIELDS" ("orderh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            [queryString appendFormat:@"insert into ORDER_HEADER_CUSTOMFIELDS(orderh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[headerDetails objectForKey:@"ID"]];
            
            for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
                [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
            }
            
            [queryString appendFormat:@")"];
            
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For Order Attachments.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[attachmentDetails count]; i++) {
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_ATTACHMENTS" ("ordera_header_id" VARCHAR,"ordera_doc_id" VARCHAR ,"ordera_doc_type" VARCHAR, "ordera_file_name" VARCHAR, "ordera_file_type" VARCHAR, "ordera_file_size" VARCHAR, "ordera_obj_type" VARCHAR, "ordera_file_content" VARCHAR, "ordera_action" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_ATTACHMENTS(ordera_header_id, ordera_doc_id, ordera_doc_type, ordera_file_name, ordera_file_type, ordera_file_size, ordera_obj_type, ordera_file_content, ordera_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[attachmentDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[attachmentDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    ////////////////////
    
    //For Order Permits Work Approvals.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WCM_WORKAPPROVALS where orderwcm_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[permitWorkApprovalsDetails count]; i++) {
        
        [queryString setString:@""];
        
        //        CREATE TABLE "ORDER_WCM_WORKAPPROVALS" ("orderwcm_header_id" VARCHAR,"orderwcm_objart" VARCHAR,"orderwcm_wapnr" VARCHAR,"orderwcm_iwerk" VARCHAR,"orderwcm_usage" VARCHAR,"orderwcm_usagex" VARCHAR,"orderwcm_train" VARCHAR,"orderwcm_trainx" VARCHAR,"orderwcm_anlzu" VARCHAR,"orderwcm_anlzux" VARCHAR,"orderwcm_etape" VARCHAR,"orderwcm_etapex" VARCHAR,"orderwcm_stxt" VARCHAR,"orderwcm_datefr" VARCHAR,"orderwcm_timefr" VARCHAR,"orderwcm_dateto" VARCHAR,"orderwcm_timeto" VARCHAR,"orderwcm_priok" VARCHAR,"orderwcm_priokx" VARCHAR,"orderwcm_rctime" VARCHAR,"orderwcm_rcunit" VARCHAR,"orderwcm_objnr" VARCHAR,"orderwcm_refobj" VARCHAR,"orderwcm_crea" VARCHAR,"orderwcm_prep" VARCHAR,"orderwcm_comp" VARCHAR,"orderwcm_appr" VARCHAR,"orderwcm_pappr" VARCHAR,"orderwcm_action" VARCHAR, "orderwcm_Begru" VARCHAR, "orderwcm_Begtx" VARCHAR)
        
        [queryString appendFormat:@"insert into ORDER_WCM_WORKAPPROVALS(orderwcm_header_id, orderwcm_objart, orderwcm_wapnr, orderwcm_iwerk, orderwcm_usage, orderwcm_usagex, orderwcm_train, orderwcm_trainx,orderwcm_anlzu, orderwcm_anlzux, orderwcm_etape, orderwcm_etapex, orderwcm_stxt, orderwcm_datefr, orderwcm_timefr, orderwcm_dateto, orderwcm_timeto, orderwcm_priok, orderwcm_priokx, orderwcm_rctime, orderwcm_rcunit, orderwcm_objnr, orderwcm_refobj, orderwcm_crea, orderwcm_prep, orderwcm_comp, orderwcm_appr, orderwcm_pappr, orderwcm_action,orderwcm_Begru,orderwcm_Begtx) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[permitWorkApprovalsDetails objectAtIndex:i] count]; j++) {
            
            [queryString appendFormat:@",'%@'",[[permitWorkApprovalsDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order Permits Work Applications.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WCM_WORKAPPLICATIONS where orderwcm_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[permitWorkApplicationDetails count]; i++) {
        
        [queryString setString:@""];
        
        //       CREATE TABLE "ORDER_WCM_WORKAPPLICATIONS" ("orderwcm_header_id" VARCHAR,"orderwcm_objart" VARCHAR,"orderwcm_wapinr" VARCHAR DEFAULT (null) ,"orderwcm_iwerk" VARCHAR,"orderwcm_objtyp" VARCHAR,"orderwcm_usage" VARCHAR,"orderwcm_usagex" VARCHAR,"orderwcm_train" VARCHAR,"orderwcm_trainx" VARCHAR,"orderwcm_anlzu" VARCHAR,"orderwcm_anlzux" VARCHAR,"orderwcm_etape" VARCHAR,"orderwcm_etapex" VARCHAR,"orderwcm_stxt" VARCHAR,"orderwcm_datefr" VARCHAR,"orderwcm_timefr" VARCHAR,"orderwcm_dateto" VARCHAR,"orderwcm_timeto" VARCHAR,"orderwcm_priok" VARCHAR,"orderwcm_priokx" VARCHAR,"orderwcm_rctime" VARCHAR,"orderwcm_rcunit" VARCHAR,"orderwcm_objnr" VARCHAR,"orderwcm_refobj" VARCHAR,"orderwcm_crea" VARCHAR,"orderwcm_prep" VARCHAR,"orderwcm_comp" VARCHAR,"orderwcm_appr" VARCHAR,"orderwcm_action" VARCHAR, "orderwcm_Begru" VARCHAR, "orderwcm_Begtx" VARCHAR)
        
        [queryString appendFormat:@"insert into ORDER_WCM_WORKAPPLICATIONS(orderwcm_header_id, orderwcm_objart, orderwcm_wapinr, orderwcm_iwerk, orderwcm_objtyp, orderwcm_usage, orderwcm_usagex, orderwcm_train, orderwcm_trainx,orderwcm_anlzu, orderwcm_anlzux, orderwcm_etape, orderwcm_etapex, orderwcm_stxt, orderwcm_datefr, orderwcm_timefr, orderwcm_dateto, orderwcm_timeto, orderwcm_priok, orderwcm_priokx, orderwcm_rctime, orderwcm_rcunit, orderwcm_objnr, orderwcm_refobj, orderwcm_crea, orderwcm_prep, orderwcm_comp, orderwcm_appr, orderwcm_action,orderwcm_Begru,orderwcm_Begtx) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[permitWorkApplicationDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[permitWorkApplicationDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order Permits Operation WCD.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WCM_OPERATIONWCD where orderwcm_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[operationWCDPermits count]; i++) {
        
        [queryString setString:@""];
        
        
        
        //   CREATE TABLE "ORDER_WCM_OPERATIONWCD" ("orderwcm_header_id" VARCHAR,"orderwcm_objart" VARCHAR,"orderwcm_wcnr" VARCHAR,"orderwcm_iwerk" VARCHAR,"orderwcm_objtyp" VARCHAR,"orderwcm_usage" VARCHAR,"orderwcm_usagex" VARCHAR,"orderwcm_train" VARCHAR,"orderwcm_trainx" VARCHAR,"orderwcm_anlzu" VARCHAR,"orderwcm_anlzux" VARCHAR,"orderwcm_etape" VARCHAR,"orderwcm_etapex" VARCHAR,"orderwcm_stxt" VARCHAR,"orderwcm_datefr" VARCHAR,"orderwcm_timefr" VARCHAR,"orderwcm_dateto" VARCHAR,"orderwcm_timeto" VARCHAR,"orderwcm_priok" VARCHAR,"orderwcm_priokx" VARCHAR,"orderwcm_rctime" VARCHAR,"orderwcm_rcunit" VARCHAR,"orderwcm_objnr" VARCHAR,"orderwcm_refobj" VARCHAR,"orderwcm_crea" VARCHAR,"orderwcm_prep" VARCHAR,"orderwcm_comp" VARCHAR,"orderwcm_appr" VARCHAR,"orderwcm_action" VARCHAR, "orderwcm_Begru" VARCHAR, "orderwcm_Begtx" VARCHAR, "orderwcm_tagging_text" VARCHAR, "orderwcm_untagging_text" VARCHAR)
        
        [queryString appendFormat:@"insert into ORDER_WCM_OPERATIONWCD(orderwcm_header_id, orderwcm_objart, orderwcm_wcnr, orderwcm_iwerk, orderwcm_objtyp, orderwcm_usage, orderwcm_usagex, orderwcm_train, orderwcm_trainx,orderwcm_anlzu, orderwcm_anlzux, orderwcm_etape, orderwcm_etapex, orderwcm_stxt, orderwcm_datefr, orderwcm_timefr, orderwcm_dateto, orderwcm_timeto, orderwcm_priok, orderwcm_priokx, orderwcm_rctime, orderwcm_rcunit, orderwcm_objnr, orderwcm_refobj, orderwcm_crea, orderwcm_prep, orderwcm_comp, orderwcm_appr, orderwcm_action,orderwcm_Begru,orderwcm_Begtx,orderwcm_tagging_text,orderwcm_untagging_text) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[operationWCDPermits objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[operationWCDPermits objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    // measurementDocsArray
    
    for (int i=0; i<[measurementDocs count]; i++) {
        
        [queryString setString:@""];
        
        //        CREATE TABLE "ORDER_MEASUREMENT_DOCUMENTS" ("orderm_header_id" VARCHAR, "orderm_qmnum" VARCHAR, "orderm_aufnr" VARCHAR, "orderm_vornr" VARCHAR, "orderm_mdoc" VARCHAR, "orderm_point" VARCHAR, "orderm_mpobj" VARCHAR,"orderm_mpobt" VARCHAR, "orderm_psort" VARCHAR, "orderm_pttxt" VARCHAR, "orderm_atinn" VARCHAR, "orderm_idate" VARCHAR, "orderm_itime" VARCHAR, "orderm_mdtxt" VARCHAR, "orderm_readr" VARCHAR, "orderm_atbez" VARCHAR, "orderm_msehi" VARCHAR, "orderm_msehl" VARCHAR, "orderm_readc" VARCHAR, "orderm_desic" VARCHAR, "orderm_prest" VARCHAR, "orderm_docaf" VARCHAR, "orderm_action" VARCHAR)
        
        [queryString appendFormat:@"insert into ORDER_MEASUREMENT_DOCUMENTS(orderm_header_id, orderm_qmnum, orderm_aufnr, orderm_vornr, orderm_mdoc, orderm_point, orderm_mpobj, orderm_mpobt, orderm_psort, orderm_pttxt, orderm_atinn, orderm_idate,orderm_itime, orderm_mdtxt, orderm_readr, orderm_atbez,  orderm_msehi, orderm_msehl, orderm_readc, orderm_desic, orderm_prest, orderm_docaf, orderm_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[measurementDocs objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[measurementDocs objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order Permits Operation WCD Tagging Conditions.
    
    if ([operationWCDTaggingConditionsPermits count]) {
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_WCM_OPERATIONWCD_TAGGINGCONDITIONS"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    for (int i =0; i<[operationWCDTaggingConditionsPermits count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_WCM_OPERATIONWCD_TAGGINGCONDITIONS" ("orderwcm_wcnr" VARCHAR,"orderwcm_wcitm" VARCHAR,"orderwcm_objnr" VARCHAR,"orderwcm_itmtyp" VARCHAR,"orderwcm_seq" VARCHAR,"orderwcm_pred" VARCHAR,"orderwcm_succ" VARCHAR,"orderwcm_ccobj" VARCHAR,"orderwcm_cctyp" VARCHAR,"orderwcm_stxt" VARCHAR,"orderwcm_tggrp" VARCHAR,"orderwcm_tgstep" VARCHAR,"orderwcm_tgproc" VARCHAR,"orderwcm_tgtyp" VARCHAR,"orderwcm_tgseq" VARCHAR,"orderwcm_tgtxt" VARCHAR,"orderwcm_unstep" VARCHAR,"orderwcm_unproc" VARCHAR,"orderwcm_untyp" VARCHAR,"orderwcm_unseq" VARCHAR,"orderwcm_untxt" VARCHAR,"orderwcm_phblflg" VARCHAR,"orderwcm_phbltyp" VARCHAR,"orderwcm_phblnr" VARCHAR,"orderwcm_tgflg" VARCHAR,"orderwcm_tgform" VARCHAR,"orderwcm_tgnr" VARCHAR,"orderwcm_unform" VARCHAR, "orderwcm_unnr" VARCHAR, "orderwcm_control" VARCHAR, "orderwcm_location" VARCHAR,"orderwcm_btg" VARCHAR, "orderwcm_etg" VARCHAR, "orderwcm_bug" VARCHAR, "orderwcm_eug" VARCHAR, "orderwcm_refobj" VARCHAR, "orderwcm_action" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_WCM_OPERATIONWCD_TAGGINGCONDITIONS (orderwcm_wcnr,orderwcm_wcitm,orderwcm_objnr,orderwcm_itmtyp,orderwcm_seq,orderwcm_pred,orderwcm_succ,orderwcm_ccobj,orderwcm_cctyp,orderwcm_stxt,orderwcm_tggrp,orderwcm_tgstep,orderwcm_tgproc,orderwcm_tgtyp,orderwcm_tgseq,orderwcm_tgtxt,orderwcm_unstep,orderwcm_unproc,orderwcm_untyp,orderwcm_unseq,orderwcm_untxt,orderwcm_phblflg,orderwcm_phbltyp,orderwcm_phblnr,orderwcm_tgflg,orderwcm_tgform,orderwcm_tgnr,orderwcm_unform,orderwcm_unnr, orderwcm_control, orderwcm_location,orderwcm_btg, orderwcm_etg, orderwcm_bug,orderwcm_eug, orderwcm_refobj, orderwcm_action) values("];
        
        for (int j=0; j<[[operationWCDTaggingConditionsPermits objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@"'%@',",[[operationWCDTaggingConditionsPermits objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString setString:[queryString substringToIndex:[queryString length]-1]];
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    
    //For Order Issue Permits.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WCM_ISSUEPERMITS where orderwcm_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[issuePermits count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_WCM_ISSUEPERMITS" ("orderwcm_header_id" VARCHAR,"orderwcm_objnr" VARCHAR,"orderwcm_counter" VARCHAR,"orderwcm_werks" VARCHAR,"orderwcm_crname" VARCHAR,"orderwcm_objart" VARCHAR,"orderwcm_objtyp" VARCHAR,"orderwcm_pmsog" VARCHAR,"orderwcm_gntxt" VARCHAR,"orderwcm_geniakt" VARCHAR,"orderwcm_genvname" VARCHAR,"orderwcm_hilvl" VARCHAR,"orderwcm_procflg" VARCHAR,"orderwcm_direction" VARCHAR,"orderwcm_copyflg" VARCHAR,"orderwcm_mandflg" VARCHAR,"orderwcm_deacflg" VARCHAR,"orderwcm_status" VARCHAR,"orderwcm_asgnflg" VARCHAR,"orderwcm_autoflg" VARCHAR,"orderwcm_agent" VARCHAR,"orderwcm_valflg" VARCHAR,"orderwcm_wcmuse" VARCHAR,"orderwcm_action" VARCHAR,order_wcm_aufnr TEXT)
         */
        
        [queryString appendFormat:@"insert into ORDER_WCM_ISSUEPERMITS(orderwcm_header_id, orderwcm_objnr, orderwcm_counter, orderwcm_werks, orderwcm_crname, orderwcm_objart, orderwcm_objtyp, orderwcm_pmsog, orderwcm_gntxt,orderwcm_geniakt, orderwcm_genvname, orderwcm_hilvl, orderwcm_procflg, orderwcm_direction, orderwcm_copyflg, orderwcm_mandflg, orderwcm_deacflg, orderwcm_status, orderwcm_asgnflg, orderwcm_autoflg, orderwcm_agent, orderwcm_valflg, orderwcm_wcmuse, orderwcm_action,order_wcm_aufnr) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[issuePermits objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[issuePermits objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    
    
    //For Order Pemirts Work Requirements.
    
    if ([permitsStandardCheckPoints count]) {
        
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_WCM_WORK_REQUIREMENTS"];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    
    for (int i =0; i<[permitsStandardCheckPoints count]; i++) {
        
        [queryString setString:@""];
        
        //        CREATE TABLE "ORDER_WCM_WORK_REQUIREMENTS" ("Wapinr" VARCHAR, "Wapityp" VARCHAR, "ChkPointType" VARCHAR, "Wkid" VARCHAR, "Needid" VARCHAR, "Value" VARCHAR, "Desctext" VARCHAR, "Wkgrp" VARCHAR, "Needgrp" VARCHAR, "Tplnr" VARCHAR, "Equnr" VARCHAR, "Aprv4unmarked" VARCHAR, "Aprv4marked" VARCHAR)
        
        [queryString appendFormat:@"insert into ORDER_WCM_WORK_REQUIREMENTS(Wapinr, Wapityp, ChkPointType, Wkid, Needid, Value, Desctext, Wkgrp, Needgrp, Tplnr, Equnr, Aprv4unmarked, Aprv4marked) values("];
        
        for (int j=0; j<[[permitsStandardCheckPoints objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@"'%@',",[[permitsStandardCheckPoints objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString setString:[queryString substringToIndex:[queryString length]-1]];
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    ////////////////////
    
    //For Order Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //For Order Transaction Custom Fileds.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[transactionDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR,"bemot" VARCHAR,"grund" VARCHAR,"learr" VARCHAR,"leknw" VARCHAR,"operation_plantid" VARCHAR,"operation_plantname" VARCHAR,"operation_workcenterid" VARCHAR,"operation_workcentertext" VARCHAR,"ordert_steustext" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_TRANSACTION(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_operation_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customOperationTransactionFields;
        
        if ([[transactionDetails objectAtIndex:i] count]>1) {
            customOperationTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customOperationTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@',''",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1]];
            
            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    /////Parts
    
    //For Order Parts.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_PARTS where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[partsDetails count]; i++) {
        
        [queryString setString:@""];
 
        //        CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR, "ordert_receipt" VARCHAR, "ordert_unload" VARCHAR)
        
        /*
         CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_PARTS(ordert_header_id, ordert_vornr_operation, ordert_quantity, ordert_lgort, ordert_lgorttext, ordert_matnr, ordert_matnrtext, ordert_meins, ordert_posnr, ordert_postp, ordert_postptext, ordert_rsnum, ordert_rspos, ordert_werks, ordert_werkstext,ordert_componentaction,ordert_receipt,ordert_unload) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[[partsDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[partsDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customComponentTransactionFields;
        
        if ([[partsDetails objectAtIndex:i] count]>1) {
            customComponentTransactionFields = [[partsDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customComponentTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[partsDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[partsDetails objectAtIndex:i] firstObject]objectAtIndex:8]];
            
            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For WSMSafetyMeasures
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WSM_SAFETYMEASURES where orderwsm_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[wsmDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_WSM_SAFETYMEASURES" ("orderwsm_header_id" VARCHAR, "orderwsm_aufnr" VARCHAR, "orderwsm_vornr_operation" VARCHAR,"orderwsm_description" VARCHAR, "orderwsm_safety_text_no" VARCHAR, "orderwsm_objid" VARCHAR, "orderwsm_objtype" VARCHAR, "orderwsm_safetychar" VARCHAR, "orderwsm_safetychar_text" VARCHAR, "orderwsm_action" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_WSM_SAFETYMEASURES(orderwsm_header_id, orderwsm_aufnr, orderwsm_vornr_operation, orderwsm_description, orderwsm_safety_text_no, orderwsm_objid, orderwsm_objtype, orderwsm_safetychar, orderwsm_safetychar_text,orderwsm_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[wsmDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[wsmDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order Objects.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_OBJECTS where orderobject_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[objectDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_OBJECTS" ("orderobject_header_id" VARCHAR, "orderobject_aufnr" VARCHAR, "orderobject_obknr" VARCHAR, "orderobject_obzae" VARCHAR, "orderobject_qmnum" VARCHAR, "orderobject_equnr" VARCHAR, "orderobject_strno" VARCHAR, "orderobject_tplnr" VARCHAR, "orderobject_bautl" VARCHAR, "orderobject_qmtxt" VARCHAR, "orderobject_pltxt" VARCHAR, "orderobject_eqktx" VARCHAR, "orderobject_maktx" VARCHAR, "orderobject_action" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_OBJECTS(orderobject_header_id, orderobject_aufnr, orderobject_obknr, orderobject_obzae, orderobject_qmnum, orderobject_equnr, orderobject_strno, orderobject_tplnr, orderobject_bautl,orderobject_qmtxt, orderobject_pltxt, orderobject_eqktx, orderobject_maktx,  orderobject_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[objectDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[objectDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order System Status.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_SYSTEM_STATUS where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[systemStatus count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_SYSTEM_STATUS" ("orders_header_id" VARCHAR, "orders_aufnr" VARCHAR, "orders_vornr_operation" VARCHAR,"orders_objnr" VARCHAR, "orders_stsma" VARCHAR, "orders_inist" VARCHAR, "orders_stonr" VARCHAR, "orders_hsonr" VARCHAR, "orders_nsonr" VARCHAR, "orders_stat" VARCHAR, "orders_act" VARCHAR, "orders_txt04" VARCHAR, "orders_txt30" VARCHAR, "orders_selected" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_SYSTEM_STATUS(orders_header_id, orders_aufnr, orders_vornr_operation, orders_objnr, orders_stsma, orders_inist, orders_stonr, orders_hsonr, orders_nsonr,orders_stat, orders_act, orders_txt04, orders_txt30,  orders_selected) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[systemStatus objectAtIndex:i]         objectForKey:@"orders_aufnr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_vornr_operation"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_objnr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_stsma"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_inist"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_stonr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_hsonr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_nsonr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_stat"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_act"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_txt04"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_txt30"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_selected"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    if ([headerDetails objectForKey:@"NOSYNCLOG"]) {
        return @"";
    }
    
    //For Sync Log
    [queryString setString:@""];
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    
    if (isNew) {
        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Create','%@','Complete','%@','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
        }
        else
        {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
        }
        
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
        
        return @"";
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select ObjectID,ActivityType,Status from SyncLog where UUID = '%@' order by Date,Time",[headerDetails objectForKey:@"ID"]];
    NSMutableArray *objectIDs;
    if ([self set_query:queryString]) {
        objectIDs = [[self run_Queries_WITHDATA] lastObject];
        //[queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and Status = 'New'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"]];
    }
    
    [queryString setString:@""];
    
    if ([objectIDs count])
    {
        if ([[objectIDs lastObject] isEqualToString:@"New"]) {
            
            [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OSYNCSTATUS"]];
        }
        else if([[objectIDs firstObject] length])
        {//[self.orderHeaderDetails setObject:@"Confirm" forKey:@"OSYNCSTATUS"];
            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else
            {
                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
            }
        }
    }
    else{
        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
        }
        else{
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
        }
    }
    
    if (queryString.length) {
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
    }
    return @"";
}


- (NSString *)insertDataIntoOrderHeader:(NSDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermits:(NSMutableArray *)permitDetails withOperation:(NSMutableArray *)transactionDetails withParts:(NSMutableArray *)partsDetails withWSM:(NSMutableArray *)wsmDetails withObjects:(NSMutableArray *)objectDetails withSystemStatus:(NSMutableArray *)systemStatus withwcmDetails:(NSMutableDictionary *)wcmDetails{
    
    
    //For Order Header
    NSMutableString *queryString = [NSMutableString new];
    BOOL isNew = YES;
    if ([[headerDetails objectForKey:@"ID"] length]) {
        isNew = false;
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",[headerDetails objectForKey:@"ID"]];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the Order";
        }
    }
    else
    {
        [headerDetails setValue:[self createUniqueIdfortable:@"OTH"] forKey:@"ID"];
    }
    
    NSString *objectIDStr = @"";
    if ([headerDetails objectForKey:@"OBJECTID"]) {
        objectIDStr = [headerDetails objectForKey:@"OBJECTID"];
    }
    
    [queryString setString:@""];
    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    //    CREATE TABLE "ORDER_HEADER" ("orderh_id" VARCHAR,"orderh_type_id" VARCHAR,"orderh_type_name" VARCHAR,"orderh_shorttext" VARCHAR,"orderh_longtext" VARCHAR,"orderh_funcloc_id" VARCHAR,"orderh_funcloc_name" VARCHAR,"orderh_euipno_id" VARCHAR,"orderh_euipno_name" VARCHAR,"orderh_accindicator_id" VARCHAR,"orderh_accindicator_name" VARCHAR,"orderh_priority_id" VARCHAR,"orderh_priority_name" VARCHAR,"orderh_startdate" DATETIME,"orderh_enddate" DATETIME,"orderh_plant_id" VARCHAR,"orderh_plant_name" VARCHAR,"orderh_workcenter_id" VARCHAR,"orderh_workcenter_name" VARCHAR,"orderh_latitudes" VARCHAR,"orderh_longitudes" VARCHAR,"orderh_altitudes" VARCHAR,"orderh_reported_by" VARCHAR,"orderh_status" VARCHAR,"oh_objectID" VARCHAR,"oh_upadated_Date" DATETIME,"oh_docs" VARCHAR,"oh_sync_status" VARCHAR,"orderh_kokrs" VARCHAR,"orderh_kostl" VARCHAR,"orderh_qmnum" VARCHAR,"orderh_malf_sdate" VARCHAR,"orderh_malf_edate" VARCHAR,"orderh_effect_id" VARCHAR DEFAULT (null) ,"orderh_msaus" VARCHAR,"orderh_Nreported_by" VARCHAR,"orderh_effect_name" VARCHAR,"orderh_systemcondition_id" VARCHAR,"orderh_systemcondition_text" VARCHAR, "orderh_wsm" VARCHAR, "orderh_wcm" VARCHAR, "orderh_user01" VARCHAR, "orderh_user02" VARCHAR, "orderh_user03" VARCHAR, "orderh_user04" VARCHAR, "orderh_user05" VARCHAR)
    
    [queryString appendFormat:@"insert into ORDER_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OID"],[headerDetails objectForKey:@"ONAME"],[headerDetails objectForKey:@"SHORTTEXT"],[headerDetails objectForKey:@"LONGTEXT"],[headerDetails objectForKey:@"FID"],[headerDetails objectForKey:@"FNAME"],[headerDetails objectForKey:@"EQID"],[headerDetails objectForKey:@"EQNAME"],[headerDetails objectForKey:@"ACCINCID"],[headerDetails objectForKey:@"ACCINCNAME"],[headerDetails objectForKey:@"OPID"],[headerDetails objectForKey:@"OPNAME"],[headerDetails objectForKey:@"SDATE"],[headerDetails objectForKey:@"EDATE"],[headerDetails objectForKey:@"PLANTID"],[headerDetails objectForKey:@"PLANTNAME"],[headerDetails objectForKey:@"WORKCENTERID"],[headerDetails objectForKey:@"WORKCENTERNAME"],[headerDetails objectForKey:@"LATITUDE"],[headerDetails objectForKey:@"LONGITUDE"],[headerDetails objectForKey:@"ALTITUDE"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"OSTATUS"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[headerDetails objectForKey:@"DOCS"],[headerDetails objectForKey:@"OSYNCSTATUS"],[headerDetails objectForKey:@"workarea"],[headerDetails objectForKey:@"costcenter"],[headerDetails objectForKey:@"QMNUM"],[headerDetails objectForKey:@"MALFUNCTIONSTARTDATE"],[headerDetails objectForKey:@"MALFUNCTIONENDDATE"],[headerDetails objectForKey:@"EFFECTID"],[headerDetails objectForKey:@"BREAKDOWN"],[headerDetails objectForKey:@"NREPORTEDBY"],[headerDetails objectForKey:@"EFFECTNAME"],[headerDetails objectForKey:@"SYSTEMCONDITIONID"],[headerDetails objectForKey:@"SYSTEMCONDITIONTEXT"],[headerDetails objectForKey:@"WSM"],[headerDetails objectForKey:@"WCM"],[headerDetails objectForKey:@"usr01"],[headerDetails objectForKey:@"usr02"],[headerDetails objectForKey:@"usr03"],[headerDetails objectForKey:@"usr04"],[headerDetails objectForKey:@"usr05"]];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return @"Cannot update the Order";
        }
    }
    else
    {
        return @"Cannot update the Order";
    }
    
    id equipmentHistory;
    if ([[headerDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
        //For Order Attachments.
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        equipmentHistory = [headerDetails objectForKey:@"EQUIPMENTHISTORY"];
    }
    
    for (int i =0; i<[equipmentHistory count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_HEADER_EQUIPMENTS_HISTORY" ("orderh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_HEADER_EQUIPMENTS_HISTORY(orderh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    id customHeaderFields = [headerDetails objectForKey:@"CFH"];
    
    if ([customHeaderFields count]) {
        //For Order Header Custom Fields.
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        //For Order Header Custom Fields
        for (int i=0; i<[customHeaderFields count]; i++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_HEADER_CUSTOMFIELDS" ("orderh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            [queryString appendFormat:@"insert into ORDER_HEADER_CUSTOMFIELDS(orderh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[headerDetails objectForKey:@"ID"]];
            
            for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
                [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
            }
            
            [queryString appendFormat:@")"];
            
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For Order Attachments.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[attachmentDetails count]; i++) {
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_ATTACHMENTS" ("ordera_header_id" VARCHAR,"ordera_doc_id" VARCHAR ,"ordera_doc_type" VARCHAR, "ordera_file_name" VARCHAR, "ordera_file_type" VARCHAR, "ordera_file_size" VARCHAR, "ordera_obj_type" VARCHAR, "ordera_file_content" VARCHAR, "ordera_action" VARCHAR)
         */
        [queryString appendFormat:@"insert into ORDER_ATTACHMENTS(ordera_header_id, ordera_doc_id, ordera_doc_type, ordera_file_name, ordera_file_type, ordera_file_size, ordera_obj_type, ordera_file_content, ordera_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[attachmentDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[attachmentDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    ////////////////////
    
    //For Order Permits.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT where orderp_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    if ([permitDetails count]) {
        
        for (int i =0; i<[permitDetails count]; i++) {
            [queryString setString:@""];
            /*
             CREATE TABLE "ORDER_HEADER_PERMIT" ("orderp_header_id" VARCHAR, "orderp_permit_id" VARCHAR, "orderp_permit_name" VARCHAR, "orderp_relase_id" VARCHAR, "orderp_complete_id" VARCHAR, "orderp_notrelavent_id" VARCHAR, "orderp_issuedby_id" VARCHAR, "orderp_issuedby_name" VARCHAR, "orderp_action" VARCHAR)
             */
            [queryString appendFormat:@"insert into ORDER_HEADER_PERMIT(orderp_header_id, orderp_permit_id, orderp_permit_name, orderp_relase_id, orderp_complete_id, orderp_notrelavent_id, orderp_issuedby_id, orderp_issuedby_name, orderp_action) values('%@'",[headerDetails objectForKey:@"ID"]];
            
            for (int j=1; j<[[permitDetails objectAtIndex:i] count]; j++) {
                [queryString appendFormat:@",'%@'",[[permitDetails objectAtIndex:i] objectAtIndex:j]];
            }
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    ////////////////////
    
    //For Order Transaction.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //For Order Transaction Custom Fileds.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[transactionDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR,"bemot" VARCHAR,"grund" VARCHAR,"learr" VARCHAR,"leknw" VARCHAR,"operation_plantid" VARCHAR,"operation_plantname" VARCHAR,"operation_workcenterid" VARCHAR,"operation_workcentertext" VARCHAR,"ordert_steustext" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_TRANSACTION(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_operation_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        [queryString appendFormat:@")"];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customOperationTransactionFields;
        
        if ([[transactionDetails objectAtIndex:i] count]>1) {
            customOperationTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customOperationTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@',''",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1]];
            
            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    /////Parts
    
    //For Order Parts.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_PARTS where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[partsDetails count]; i++) {
        
        [queryString setString:@""];
        /*
         CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_PARTS(ordert_header_id, ordert_vornr_operation, ordert_quantity, ordert_lgort, ordert_lgorttext, ordert_matnr, ordert_matnrtext, ordert_meins, ordert_posnr, ordert_postp, ordert_postptext, ordert_rsnum, ordert_rspos, ordert_werks, ordert_werkstext,ordert_componentaction) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=1; j<[[[partsDetails objectAtIndex:i] firstObject] count]; j++) {
            [queryString appendFormat:@",'%@'",[[[partsDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
        
        id customComponentTransactionFields;
        
        if ([[partsDetails objectAtIndex:i] count]>1) {
            customComponentTransactionFields = [[partsDetails objectAtIndex:i] lastObject];
        }
        
        for (int x=0; x<[customComponentTransactionFields count]; x++) {
            [queryString setString:@""];
            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
            
            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[partsDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[partsDetails objectAtIndex:i] firstObject]objectAtIndex:8]];
            
            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
            }
            
            [queryString appendFormat:@")"];
            
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                }
            }
        }
    }
    
    //For WSMSafetyMeasures
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_WSM_SAFETYMEASURES where orderwsm_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[wsmDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_WSM_SAFETYMEASURES" ("orderwsm_header_id" VARCHAR, "orderwsm_aufnr" VARCHAR, "orderwsm_vornr_operation" VARCHAR,"orderwsm_description" VARCHAR, "orderwsm_safety_text_no" VARCHAR, "orderwsm_objid" VARCHAR, "orderwsm_objtype" VARCHAR, "orderwsm_safetychar" VARCHAR, "orderwsm_safetychar_text" VARCHAR, "orderwsm_action" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_WSM_SAFETYMEASURES(orderwsm_header_id, orderwsm_aufnr, orderwsm_vornr_operation, orderwsm_description, orderwsm_safety_text_no, orderwsm_objid, orderwsm_objtype, orderwsm_safetychar, orderwsm_safetychar_text,orderwsm_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[wsmDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[wsmDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order Objects.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_OBJECTS where orderobject_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[objectDetails count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_OBJECTS" ("orderobject_header_id" VARCHAR, "orderobject_aufnr" VARCHAR, "orderobject_obknr" VARCHAR, "orderobject_obzae" VARCHAR, "orderobject_qmnum" VARCHAR, "orderobject_equnr" VARCHAR, "orderobject_strno" VARCHAR, "orderobject_tplnr" VARCHAR, "orderobject_bautl" VARCHAR, "orderobject_qmtxt" VARCHAR, "orderobject_pltxt" VARCHAR, "orderobject_eqktx" VARCHAR, "orderobject_maktx" VARCHAR, "orderobject_action" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_OBJECTS(orderobject_header_id, orderobject_aufnr, orderobject_obknr, orderobject_obzae, orderobject_qmnum, orderobject_equnr, orderobject_strno, orderobject_tplnr, orderobject_bautl,orderobject_qmtxt, orderobject_pltxt, orderobject_eqktx, orderobject_maktx,  orderobject_action) values('%@'",[headerDetails objectForKey:@"ID"]];
        
        for (int j=0; j<[[objectDetails objectAtIndex:i] count]; j++) {
            [queryString appendFormat:@",'%@'",[[objectDetails objectAtIndex:i] objectAtIndex:j]];
        }
        
        [queryString appendFormat:@")"];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For Order System Status.
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_SYSTEM_STATUS where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i=0; i<[systemStatus count]; i++) {
        
        [queryString setString:@""];
        
        /*
         CREATE TABLE "ORDER_SYSTEM_STATUS" ("orders_header_id" VARCHAR, "orders_aufnr" VARCHAR, "orders_vornr_operation" VARCHAR,"orders_objnr" VARCHAR, "orders_stsma" VARCHAR, "orders_inist" VARCHAR, "orders_stonr" VARCHAR, "orders_hsonr" VARCHAR, "orders_nsonr" VARCHAR, "orders_stat" VARCHAR, "orders_act" VARCHAR, "orders_txt04" VARCHAR, "orders_txt30" VARCHAR, "orders_selected" VARCHAR)
         */
        
        [queryString appendFormat:@"insert into ORDER_SYSTEM_STATUS(orders_header_id, orders_aufnr, orders_vornr_operation, orders_objnr, orders_stsma, orders_inist, orders_stonr, orders_hsonr, orders_nsonr,orders_stat, orders_act, orders_txt04, orders_txt30,  orders_selected) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[systemStatus objectAtIndex:i]         objectForKey:@"orders_aufnr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_vornr_operation"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_objnr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_stsma"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_inist"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_stonr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_hsonr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_nsonr"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_stat"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_act"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_txt04"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_txt30"],[[systemStatus objectAtIndex:i] objectForKey:@"orders_selected"]];
        
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
            }
        }
    }
    
    //For WCMDetails
    
    if ([wcmDetails count]) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"delete from WCM_WWDATA_HEADER where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        if ([[wcmDetails objectForKey:@"WORKAPPROVALDATA"] count]) {
            
            [queryString setString:@""];
            
            NSArray *workApprovalDetails=[wcmDetails objectForKey:@"WORKAPPROVALDATA"];
            
            /*  CREATE TABLE "WCM_WWDATA_HEADER" ("owcmww_header_id" VARCHAR, "owcmww_aufnr" VARCHAR, "owcmww_stext" VARCHAR, "owcmww_funclocation_id" VARCHAR, "owcmww_funclocation_name" VARCHAR, "owmwwww_from_date" VARCHAR, "owcmww_from_time" VARCHAR, "owcmww_to_date" VARCHAR, "owcmww_to_time" VARCHAR, "owcmww_vornr" VARCHAR, "owcmww_set_prepared" VARCHAR, "owcmww_completed" VARCHAR, "owcmww_iweks" VARCHAR, "owcmww_priority_id" VARCHAR, "owcmww_priority_text" VARCHAR) */
            
            for (int i=0; i<[workApprovalDetails count]; i++) {
                
                [queryString appendFormat:@"insert into WCM_WWDATA_HEADER(owcmww_header_id, owcmww_aufnr, owcmww_stext, owcmww_funclocation_id, owcmww_funclocation_name, owmwwww_from_date, owcmww_from_time, owcmww_to_date, owcmww_to_time,owcmww_vornr, owcmww_set_prepared, owcmww_completed, owcmww_iweks,  owcmww_priority_id, owcmww_priority_text ) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@', '%@')",[headerDetails objectForKey:@"ID"],@"",[[workApprovalDetails objectAtIndex:0] objectAtIndex:2],@"",@"",[[workApprovalDetails objectAtIndex:i] objectAtIndex:5],[[workApprovalDetails objectAtIndex:i] objectAtIndex:6],[[workApprovalDetails objectAtIndex:i] objectAtIndex:7],[[workApprovalDetails objectAtIndex:i] objectAtIndex:8],[[workApprovalDetails objectAtIndex:0] objectAtIndex:1],[[workApprovalDetails objectAtIndex:i] objectAtIndex:11],[[workApprovalDetails objectAtIndex:i] objectAtIndex:12],[[workApprovalDetails objectAtIndex:i] objectAtIndex:13],[[workApprovalDetails objectAtIndex:0] objectAtIndex:9],[[workApprovalDetails objectAtIndex:0] objectAtIndex:10]];
                
                if ([self set_query:queryString]) {
                    if ([self run_Queries_NODATA]) {
                        [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                    }
                }
            }
        }
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"delete from WCM_CHECKPOINTS where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        if ([[wcmDetails objectForKey:@"CHECKPOINTS"] count]) {
            
            NSArray *checkPointDetailsArray=[wcmDetails objectForKey:@"CHECKPOINTS"];
            
            [queryString setString:@""];
            
            
            for (int i=0; i<[checkPointDetailsArray  count]; i++) {
                
                for (int j=0; j<[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:0] count]; j++) {
                    
                    [queryString appendFormat:@"insert into WCM_CHECKPOINTS(owcm_header_id, owcm_ww_vornr, owcm_wa_vornr, owcm_aufnr, owcm_check_point_type, owcm_check_point_name, owcm_need_id, owcm_wap_type, owcm_item_status) values('%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],@"",@"",@"",[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:0] objectAtIndex:j] objectAtIndex:2],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:0] objectAtIndex:j] objectAtIndex:3],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:0] objectAtIndex:j] objectAtIndex:4],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:0] objectAtIndex:j] objectAtIndex:1],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:0] objectAtIndex:j] objectAtIndex:0]];
                    
                    if ([self set_query:queryString]) {
                        if ([self run_Queries_NODATA]) {
                            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                        }
                    }
                    
                }
                
                [queryString setString:@""];
                
                
                for (int k=0; k<[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:1] count]; k++) {
                    
                    [queryString appendFormat:@"insert into WCM_CHECKPOINTS(owcm_header_id, owcm_ww_vornr, owcm_wa_vornr, owcm_aufnr, owcm_check_point_type, owcm_check_point_name, owcm_need_id, owcm_wap_type, owcm_item_status) values('%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],@"",@"",@"",[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:1] objectAtIndex:k] objectAtIndex:2],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:1] objectAtIndex:k] objectAtIndex:3],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:1] objectAtIndex:k] objectAtIndex:4],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:1] objectAtIndex:k] objectAtIndex:1],[[[[checkPointDetailsArray objectAtIndex:i] objectAtIndex:1] objectAtIndex:k] objectAtIndex:0]];
                    
                    
                    if ([self set_query:queryString]) {
                        if ([self run_Queries_NODATA]) {
                            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                        }
                    }
                    
                }
                
            }
            
            [queryString setString:@""];
            
        }
        
        [queryString appendFormat:@"delete from WCM_ISOLATION_HEADER where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        if ([wcmDetails objectForKey:@"WORKAPPLICATIONDATA"]&&[wcmDetails objectForKey:@"APPLICATIONHEADERDETAILS"]) {
            
            
            [queryString setString:@""];
            
            NSArray *applicationDetailsArray=[wcmDetails objectForKey:@"WORKAPPLICATIONDATA"];
            NSArray *applicationHeaderDetailsArray = [wcmDetails objectForKey:@"APPLICATIONHEADERDETAILS"];
            
            //        CREATE TABLE "WCM_ISOLATION_HEADER" ("owcm_header_id" VARCHAR, "owcm_ww_vornr" VARCHAR, "owcm_wa_vornr" VARCHAR, "owcm_wd_vornr" VARCHAR, "owcm_aufnr" VARCHAR, "owcm_wd_from_date" VARCHAR, "owcm_wd_from_time" VARCHAR, "owcm_wd_to_date" VARCHAR, "owcm_wd_to_time" VARCHAR, "owcm_wd_item-status" VARCHAR, "owcm_iwerks" VARCHAR, "owcm_priority_id" VARCHAR, "owcm_priority_text" VARCHAR)
            
            
            for (int i=0; i<[applicationDetailsArray count]; i++) {
                
                [queryString appendFormat:@"insert into WCM_ISOLATION_HEADER(owcm_header_id, owcm_ww_vornr, owcm_wa_vornr, owcm_aufnr, owcm_wa_from_date, owcm_wa_from_time, owcm_wa_to_date, owcm_wa_to_time, owcm_wa_set_prepared,owcm_wa_compl, owcm_wa_iwerks,  owcm_wa_priority_id, owcm_wa_priority_text ) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],@"",[[applicationDetailsArray objectAtIndex:i] objectAtIndex:1],@"",[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:5],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:6],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:7],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:8],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:11],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:12],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:13],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:9],[[applicationHeaderDetailsArray objectAtIndex:i] objectAtIndex:10]];
                
                if ([self set_query:queryString]) {
                    if ([self run_Queries_NODATA]) {
                        [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                    }
                }
                
            }
            
            [queryString setString:@""];
            
        }
        
        
        
        [queryString appendFormat:@"delete from WCM_WWDATA_HEADER where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        //        CREATE TABLE "WCM_ISOLATION_HEADER" ("owcm_header_id" VARCHAR, "owcm_ww_vornr" VARCHAR, "owcm_wa_vornr" VARCHAR, "owcm_aufnr" VARCHAR, "owcm_wa_from_date" VARCHAR, "owcm_wa_from_time" VARCHAR, "owcm_wa_to_date" VARCHAR, "owcm_wa_to_time" VARCHAR, "owcm_wa_set_prepared" VARCHAR, "owcm_wa_compl" VARCHAR, "owcm_wa_iwerks" VARCHAR, "owcm_wa_priority_id" VARCHAR, "owcm_wa_priority_text" VARCHAR)
        
        
        if ([[wcmDetails objectForKey:@"OPWCD"] count]) {
            
            [queryString setString:@""];
            
            NSArray *operationWCDDetailsArray = [wcmDetails objectForKey:@"OPWCD"];
            
            for (int i=0; i<[operationWCDDetailsArray count]; i++) {
                
                [queryString appendFormat:@"insert into WCM_OPWCD_HEADER(owcm_header_id, owcm_ww_vornr, owcm_wa_vornr, owcm_aufnr, owcm_wd_from_date, owcm_wd_from_time, owcm_wd_to_date, owcm_wd_to_time, owcm_wd_set_prepared,owcm_wd_compl, owcm_wd_iwerks,  owcm_wd_priority_id, owcm_wd_priority_text ) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],@"",[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:1],@"",[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:5],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:6],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:7],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:8],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:11],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:12],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:13],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:9],[[operationWCDDetailsArray objectAtIndex:i] objectAtIndex:10]];
                
                if ([self set_query:queryString]) {
                    if ([self run_Queries_NODATA]) {
                        [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                    }
                }
                
            }
            
            [queryString setString:@""];
            
        }
        
        
        
        [queryString appendFormat:@"delete from WCM_OPWCD_TAGGING_ITEMS where orders_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        
        if ([[wcmDetails objectForKey:@"OPWCDITEMDATA"] count]) {
            
            [queryString setString:@""];
            
            
            NSArray *operationWCDItemDetailsArray = [wcmDetails objectForKey:@"OPWCDITEMDATA"];
            
            
            for (int i=0; i<[operationWCDItemDetailsArray count]; i++) {
                
                [queryString appendFormat:@"insert into WCM_OPWCD_TAGGING_ITEMS(owcm_header_id, owcm_ww_vornr, owcm_wd_vornr, owcm_aufnr, owcm_type, owcm_object, owcm_tag, owcm_untag, owcm_lock,owcm_btg, owcm_etg,  owcm_bug, owcm_eug, owcm_item_status, owcm_tgTyp, owcm_unTyp, owcm_phblghb, owcm_shorttext) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@', '%@','%@', '%@', '%@', '%@')",[headerDetails objectForKey:@"ID"],@"",[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:11],@"",[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:1],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:3],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:4],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:5],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:6],@"",@"",@"",@"",@"",[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:8],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:9],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:10],[[operationWCDItemDetailsArray objectAtIndex:i] objectAtIndex:12]];
                
                if ([self set_query:queryString]) {
                    if ([self run_Queries_NODATA]) {
                        [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
                    }
                }
            }
        }
    }
    
    
    if ([headerDetails objectForKey:@"NOSYNCLOG"]) {
        return @"";
    }
    
    //For Sync Log
    [queryString setString:@""];
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    
    if (isNew) {
        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Create','%@','Complete','%@','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
        }
        else
        {
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
        }
        
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
        
        return @"";
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select ObjectID,ActivityType,Status from SyncLog where UUID = '%@' order by Date,Time",[headerDetails objectForKey:@"ID"]];
    NSMutableArray *objectIDs;
    if ([self set_query:queryString]) {
        objectIDs = [[self run_Queries_WITHDATA] lastObject];
        //[queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and Status = 'New'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"]];
    }
    
    [queryString setString:@""];
    
    if ([objectIDs count])
    {
        if ([[objectIDs lastObject] isEqualToString:@"New"]) {
            
            [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OSYNCSTATUS"]];
        }
        else if([[objectIDs firstObject] length])
        {//[self.orderHeaderDetails setObject:@"Confirm" forKey:@"OSYNCSTATUS"];
            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
            }
            else
            {
                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
            }
        }
    }
    else{
        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
            }
        }
        else{
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
        }
    }
    
    if (queryString.length) {
        if([self set_query:queryString])
        {
            [self run_Queries_NODATA];
        }
    }
    
    return @"";
    
}












//
//- (NSString *)insertDataIntoOrderHeader:(NSDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermits:(NSMutableArray *)permitDetails withOperation:(NSMutableArray *)transactionDetails withParts:(NSMutableArray *)partsDetails
//{
//    //For Order Header
//    NSMutableString *queryString = [NSMutableString new];
//    BOOL isNew = YES;
//    if ([[headerDetails objectForKey:@"ID"] length]) {
//        isNew = false;
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",[headerDetails objectForKey:@"ID"]];
//        [self set_query:queryString];
//        if (![self run_Queries_NODATA]) {
//            return @"Cannot update the Order";
//        }
//    }
//    else
//    {
//        [headerDetails setValue:[self createUniqueIdfortable:@"OTH"] forKey:@"ID"];
//    }
//
//    NSString *objectIDStr = @"";
//    if ([headerDetails objectForKey:@"OBJECTID"]) {
//        objectIDStr = [headerDetails objectForKey:@"OBJECTID"];
//    }
//
//    [queryString setString:@""];
//    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
//    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//
//    [queryString appendFormat:@"insert into ORDER_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OID"],[headerDetails objectForKey:@"ONAME"],[headerDetails objectForKey:@"SHORTTEXT"],[headerDetails objectForKey:@"LONGTEXT"],[headerDetails objectForKey:@"FID"],[headerDetails objectForKey:@"FNAME"],[headerDetails objectForKey:@"EQID"],[headerDetails objectForKey:@"EQNAME"],[headerDetails objectForKey:@"ACCINCID"],[headerDetails objectForKey:@"ACCINCNAME"],[headerDetails objectForKey:@"OPID"],[headerDetails objectForKey:@"OPNAME"],[headerDetails objectForKey:@"SDATE"],[headerDetails objectForKey:@"EDATE"],[headerDetails objectForKey:@"PLANTID"],[headerDetails objectForKey:@"PLANTNAME"],[headerDetails objectForKey:@"WORKCENTERID"],[headerDetails objectForKey:@"WORKCENTERNAME"],[headerDetails objectForKey:@"LATITUDE"],[headerDetails objectForKey:@"LONGITUDE"],[headerDetails objectForKey:@"ALTITUDE"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"OSTATUS"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[headerDetails objectForKey:@"DOCS"],[headerDetails objectForKey:@"OSYNCSTATUS"],[headerDetails objectForKey:@"workarea"],[headerDetails objectForKey:@"costcenter"]];
//
//    if ([self set_query:queryString]) {
//        if (![self run_Queries_NODATA]) {
//            return @"Cannot update the Order";
//        }
//    }
//    else
//    {
//        return @"Cannot update the Order";
//    }
//
//    id equipmentHistory;
//    if ([[headerDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
//        //For Order Attachments.
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//        if ([self set_query:queryString]) {
//            [self run_Queries_NODATA];
//        }
//
//        equipmentHistory = [headerDetails objectForKey:@"EQUIPMENTHISTORY"];
//    }
//
//    for (int i =0; i<[equipmentHistory count]; i++) {
//
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_HEADER_EQUIPMENTS_HISTORY" ("orderh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into ORDER_HEADER_EQUIPMENTS_HISTORY(orderh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
//
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    id customHeaderFields = [headerDetails objectForKey:@"CFH"];
//    if ([customHeaderFields count]) {
//        //For Order Header Custom Fields.
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//        if ([self set_query:queryString]) {
//            [self run_Queries_NODATA];
//        }
//
//        //For Order Header Custom Fields
//        for (int i=0; i<[customHeaderFields count]; i++) {
//            [queryString setString:@""];
//            //CREATE TABLE "ORDER_HEADER_CUSTOMFIELDS" ("orderh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//            [queryString appendFormat:@"insert into ORDER_HEADER_CUSTOMFIELDS(orderh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//            for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
//                [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    //For Order Attachments.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i =0; i<[attachmentDetails count]; i++) {
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_ATTACHMENTS" ("ordera_header_id" VARCHAR,"ordera_doc_id" VARCHAR ,"ordera_doc_type" VARCHAR, "ordera_file_name" VARCHAR, "ordera_file_type" VARCHAR, "ordera_file_size" VARCHAR, "ordera_obj_type" VARCHAR, "ordera_file_content" VARCHAR, "ordera_action" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into ORDER_ATTACHMENTS(ordera_header_id, ordera_doc_id, ordera_doc_type, ordera_file_name, ordera_file_type, ordera_file_size, ordera_obj_type, ordera_file_content, ordera_action) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=1; j<[[attachmentDetails objectAtIndex:i] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[attachmentDetails objectAtIndex:i] objectAtIndex:j]];
//        }
//
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    ////////////////////
//
//    //For Order Permits.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT where orderp_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    if ([permitDetails count]) {
//
//        for (int i =0; i<[permitDetails count]; i++) {
//            [queryString setString:@""];
//            /*
//             CREATE TABLE "ORDER_HEADER_PERMIT" ("orderp_header_id" VARCHAR, "orderp_permit_id" VARCHAR, "orderp_permit_name" VARCHAR, "orderp_relase_id" VARCHAR, "orderp_complete_id" VARCHAR, "orderp_notrelavent_id" VARCHAR, "orderp_issuedby_id" VARCHAR, "orderp_issuedby_name" VARCHAR, "orderp_action" VARCHAR)
//             */
//            [queryString appendFormat:@"insert into ORDER_HEADER_PERMIT(orderp_header_id, orderp_permit_id, orderp_permit_name, orderp_relase_id, orderp_complete_id, orderp_notrelavent_id, orderp_issuedby_id, orderp_issuedby_name, orderp_action) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//            for (int j=1; j<[[permitDetails objectAtIndex:i] count]; j++) {
//                [queryString appendFormat:@",'%@'",[[permitDetails objectAtIndex:i] objectAtIndex:j]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    ////////////////////
//
//    //For Order Transaction.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    //For Order Transaction Custom Fileds.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i=0; i<[transactionDetails count]; i++) {
//
//        [queryString setString:@""];
//
//        /*
//         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR,"bemot" VARCHAR,"grund" VARCHAR,"learr" VARCHAR,"leknw" VARCHAR,"operation_plantid" VARCHAR,"operation_plantname" VARCHAR,"operation_workcenterid" VARCHAR,"operation_workcentertext" VARCHAR,"ordert_steustext" VARCHAR)
//         */
//
//        [queryString appendFormat:@"insert into ORDER_TRANSACTION(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_operation_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=1; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
//        }
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//
//        id customOperationTransactionFields;
//
//        if ([[transactionDetails objectAtIndex:i] count]>1) {
//            customOperationTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
//        }
//
//        for (int x=0; x<[customOperationTransactionFields count]; x++) {
//            [queryString setString:@""];
//            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//
//            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@',''",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1]];
//
//            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    /////Parts
//
//    //For Order Parts.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_PARTS where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i=0; i<[partsDetails count]; i++) {
//
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR)
//         */
//
//        [queryString appendFormat:@"insert into ORDER_PARTS(ordert_header_id, ordert_vornr_operation, ordert_quantity, ordert_lgort, ordert_lgorttext, ordert_matnr, ordert_matnrtext, ordert_meins, ordert_posnr, ordert_postp, ordert_postptext, ordert_rsnum, ordert_rspos, ordert_werks, ordert_werkstext,ordert_componentaction) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=1; j<[[[partsDetails objectAtIndex:i] firstObject] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[[partsDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
//        }
//
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//
//        id customComponentTransactionFields;
//
//        if ([[partsDetails objectAtIndex:i] count]>1) {
//            customComponentTransactionFields = [[partsDetails objectAtIndex:i] lastObject];
//        }
//
//        for (int x=0; x<[customComponentTransactionFields count]; x++) {
//            [queryString setString:@""];
//            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//
//            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[partsDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[partsDetails objectAtIndex:i] firstObject]objectAtIndex:8]];
//
//            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//
//    }
//
//    if ([headerDetails objectForKey:@"NOSYNCLOG"]) {
//        return @"";
//    }
//    //For Sync Log
//    [queryString setString:@""];
//
//    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
//    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
//
//
//    if (isNew) {
//        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Create','%@','Complete','%@','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//        }
//        else
//        {
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//        }
//        if([self set_query:queryString])
//        {
//            [self run_Queries_NODATA];
//        }
//
//        return @"";
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"select ObjectID,ActivityType,Status from SyncLog where UUID = '%@' order by Date,Time",[headerDetails objectForKey:@"ID"]];
//    NSMutableArray *objectIDs;
//    if ([self set_query:queryString]) {
//        objectIDs = [[self run_Queries_WITHDATA] lastObject];
//        //[queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and Status = 'New'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"]];
//    }
//    [queryString setString:@""];
//    if ([objectIDs count])
//    {
//        if ([[objectIDs lastObject] isEqualToString:@"New"]) {
//
//            [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OSYNCSTATUS"]];
//        }
//        else if([[objectIDs firstObject] length])
//        {//[self.orderHeaderDetails setObject:@"Confirm" forKey:@"OSYNCSTATUS"];
//            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else
//            {
//                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
//            }
//        }
//    }
//    else{
//        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
//            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//        }
//        else{
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//        }
//    }
//
//    if (queryString.length) {
//        if([self set_query:queryString])
//        {
//            [self run_Queries_NODATA];
//        }
//    }
//    return @"";
//}

//- (NSString *)insertDataIntoOrderHeader:(NSDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermits:(NSMutableArray *)permitDetails withTransaction:(NSMutableArray *)transactionDetails
//{
//    //For Order Header
//    NSMutableString *queryString = [NSMutableString new];
//    BOOL isNew = YES;
//    if ([[headerDetails objectForKey:@"ID"] length]) {
//        isNew = false;
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",[headerDetails objectForKey:@"ID"]];
//        [self set_query:queryString];
//        if (![self run_Queries_NODATA]) {
//            return @"Cannot update the Order";
//        }
//    }
//    else
//    {
//        [headerDetails setValue:[self createUniqueIdfortable:@"OTH"] forKey:@"ID"];
//    }
//
//    NSString *objectIDStr = @"";
//    if ([headerDetails objectForKey:@"OBJECTID"]) {
//        objectIDStr = [headerDetails objectForKey:@"OBJECTID"];
//    }
//
//    [queryString setString:@""];
//    NSDateFormatter *nowDate = [[NSDateFormatter alloc] init];
//    [nowDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//
//    [queryString appendFormat:@"insert into ORDER_HEADER values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OID"],[headerDetails objectForKey:@"ONAME"],[headerDetails objectForKey:@"SHORTTEXT"],[headerDetails objectForKey:@"LONGTEXT"],[headerDetails objectForKey:@"FID"],[headerDetails objectForKey:@"FNAME"],[headerDetails objectForKey:@"EQID"],[headerDetails objectForKey:@"EQNAME"],[headerDetails objectForKey:@"ACCINCID"],[headerDetails objectForKey:@"ACCINCNAME"],[headerDetails objectForKey:@"OPID"],[headerDetails objectForKey:@"OPNAME"],[headerDetails objectForKey:@"SDATE"],[headerDetails objectForKey:@"EDATE"],[headerDetails objectForKey:@"PLANTID"],[headerDetails objectForKey:@"PLANTNAME"],[headerDetails objectForKey:@"WORKCENTERID"],[headerDetails objectForKey:@"WORKCENTERNAME"],[headerDetails objectForKey:@"LATITUDE"],[headerDetails objectForKey:@"LONGITUDE"],[headerDetails objectForKey:@"ALTITUDE"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"OSTATUS"],objectIDStr,[nowDate stringFromDate:[NSDate date]],[headerDetails objectForKey:@"DOCS"],[headerDetails objectForKey:@"OSYNCSTATUS"],[headerDetails objectForKey:@"workarea"],[headerDetails objectForKey:@"costcenter"]];
//
//    if ([self set_query:queryString]) {
//        if (![self run_Queries_NODATA]) {
//            return @"Cannot update the Order";
//        }
//    }
//    else
//    {
//        return @"Cannot update the Order";
//    }
//
//    id equipmentHistory;
//    if ([[headerDetails objectForKey:@"EQUIPMENTHISTORY"] count]) {
//        //For Order Attachments.
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//        if ([self set_query:queryString]) {
//            [self run_Queries_NODATA];
//        }
//
//        equipmentHistory = [headerDetails objectForKey:@"EQUIPMENTHISTORY"];
//    }
//
//    for (int i =0; i<[equipmentHistory count]; i++) {
//
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_HEADER_EQUIPMENTS_HISTORY" ("orderh_id" VARCHAR,"Arbpl" VARCHAR, "Arbplwerk" VARCHAR, "Ausbs" VARCHAR, "Ausvn" VARCHAR, "Equnr" VARCHAR, "Ingrp" VARCHAR, "Iwerk" VARCHAR, "Msaus" VARCHAR, "Priok" VARCHAR,"Qmart" VARCHAR, "Qmdab" VARCHAR, "Qmnam" VARCHAR, "Qmnum" VARCHAR, "Qmtxt" VARCHAR, "Tplnr" VARCHAR, "Aufnr" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into ORDER_HEADER_EQUIPMENTS_HISTORY(orderh_id, Arbpl, Arbplwerk, Ausbs, Ausvn, Equnr, Ingrp, Iwerk, Msaus, Priok, Qmart, Qmdab, Qmnam, Qmnum, Qmtxt, Tplnr, Aufnr) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[headerDetails objectForKey:@"ID"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbpl"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Arbplwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausbs"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ausvn"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Equnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Ingrp"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Iwerk"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Msaus"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Priok"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmart"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmdab"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnam"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmnum"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Qmtxt"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Tplnr"],[[equipmentHistory objectAtIndex:i] objectForKey:@"Aufnr"]];
//
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    id customHeaderFields = [headerDetails objectForKey:@"CFH"];
//    if ([customHeaderFields count]) {
//        //For Order Header Custom Fields.
//        [queryString setString:@""];
//        [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//        if ([self set_query:queryString]) {
//            [self run_Queries_NODATA];
//        }
//
//        //For Order Header Custom Fields
//        for (int i=0; i<[customHeaderFields count]; i++) {
//            [queryString setString:@""];
//            //CREATE TABLE "ORDER_HEADER_CUSTOMFIELDS" ("orderh_id" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//            [queryString appendFormat:@"insert into ORDER_HEADER_CUSTOMFIELDS(orderh_id, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//            for (int j=0; j<[[customHeaderFields objectAtIndex:i] count]; j++) {
//                [queryString appendFormat:@",'%@'",[[customHeaderFields objectAtIndex:i] objectAtIndex:j]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    //For Order Attachments.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i =0; i<[attachmentDetails count]; i++) {
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_ATTACHMENTS" ("ordera_header_id" VARCHAR,"ordera_doc_id" VARCHAR ,"ordera_doc_type" VARCHAR, "ordera_file_name" VARCHAR, "ordera_file_type" VARCHAR, "ordera_file_size" VARCHAR, "ordera_obj_type" VARCHAR, "ordera_file_content" VARCHAR, "ordera_action" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into ORDER_ATTACHMENTS(ordera_header_id, ordera_doc_id, ordera_doc_type, ordera_file_name, ordera_file_type, ordera_file_size, ordera_obj_type, ordera_file_content, ordera_action) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=1; j<[[attachmentDetails objectAtIndex:i] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[attachmentDetails objectAtIndex:i] objectAtIndex:j]];
//        }
//
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//    }
//
//    ////////////////////
//
//    //For Order Permits.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT where orderp_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    if ([permitDetails count]) {
//
//        for (int i =0; i<[permitDetails count]; i++) {
//            [queryString setString:@""];
//            /*
//             CREATE TABLE "ORDER_HEADER_PERMIT" ("orderp_header_id" VARCHAR, "orderp_permit_id" VARCHAR, "orderp_permit_name" VARCHAR, "orderp_relase_id" VARCHAR, "orderp_complete_id" VARCHAR, "orderp_notrelavent_id" VARCHAR, "orderp_issuedby_id" VARCHAR, "orderp_issuedby_name" VARCHAR, "orderp_action" VARCHAR)
//             */
//            [queryString appendFormat:@"insert into ORDER_HEADER_PERMIT(orderp_header_id, orderp_permit_id, orderp_permit_name, orderp_relase_id, orderp_complete_id, orderp_notrelavent_id, orderp_issuedby_id, orderp_issuedby_name, orderp_action) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//            for (int j=1; j<[[permitDetails objectAtIndex:i] count]; j++) {
//                [queryString appendFormat:@",'%@'",[[permitDetails objectAtIndex:i] objectAtIndex:j]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    ////////////////////
//
//    //For Order Transaction.
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@'",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' ",[headerDetails objectForKey:@"ID"]];
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i=0; i<[transactionDetails count]; i++) {
//        [queryString setString:@""];
//        /*
//         CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_rsnum" VARCHAR,"ordert_rspos" VARCHAR,"ordert_component_id" VARCHAR,"ordert_component_name" VARCHAR,"ordert_werks" VARCHAR,"ordert_lgort" VARCHAR,"ordert_posnr" VARCHAR,"ordert_quantity_name" VARCHAR,"ordert_quantity_id" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_component_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_postp" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR DEFAULT (null) , "bemot" VARCHAR, "grund" VARCHAR, "learr" VARCHAR, "leknw" VARCHAR, "operation_plantid" VARCHAR, "operation_plantname" VARCHAR, "operation_workcenterid" VARCHAR, "operation_workcentertext" VARCHAR, "ordert_steustext" VARCHAR)
//         */
//        [queryString appendFormat:@"insert into ORDER_TRANSACTION(ordert_header_id, ordert_vornr_operation, ordert_operation_name, ordert_duration_name, ordert_duration_id, ordert_fsavd, ordert_ssedd, ordert_rueck, ordert_aueru, ordert_rsnum, ordert_rspos, ordert_component_id, ordert_component_name, ordert_werks, ordert_lgort, ordert_posnr, ordert_quantity_name, ordert_quantity_id, ordert_operation_action, ordert_component_action, ordert_status, ordert_conftext, ordert_actwork, ordert_unwork, ordert_postp, ordert_larnt, ordert_pernr, ordert_plnal, ordert_plnnr, ordert_plnty, ordert_steus, ordert_operationlongtext, usr01, bemot, grund, learr, leknw, operation_plantid, operation_plantname, operation_workcenterid, operation_workcentertext, ordert_steustext) values('%@'",[headerDetails objectForKey:@"ID"]];
//
//        for (int j=1; j<[[[transactionDetails objectAtIndex:i] firstObject] count]; j++) {
//            [queryString appendFormat:@",'%@'",[[[transactionDetails objectAtIndex:i] firstObject] objectAtIndex:j]];
//        }
//        [queryString appendFormat:@")"];
//        if ([self set_query:queryString]) {
//            if ([self run_Queries_NODATA]) {
//                [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//            }
//        }
//
//        id customOperationTransactionFields,customComponentTransactionFields;
//
//        if ([[transactionDetails objectAtIndex:i] count]>1) {
//            customOperationTransactionFields = [[transactionDetails objectAtIndex:i] objectAtIndex:1];
//            customComponentTransactionFields = [[transactionDetails objectAtIndex:i] lastObject];
//        }
//
//        for (int x=0; x<[customOperationTransactionFields count]; x++) {
//            [queryString setString:@""];
//            //CREATE TABLE "ORDER_TRANSACTION_CUSTOMFIELDS" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_posnr" VARCHAR, "doctype" VARCHAR, "doctypeitem" VARCHAR,"tabname" VARCHAR,"fieldname" VARCHAR,"value" VARCHAR,"label" VARCHAR,"datatype" VARCHAR,"sequence" VARCHAR)
//
//            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:15]];
//
//            for (int y=0; y<[[customOperationTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customOperationTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//
//        for (int x=0; x<[customComponentTransactionFields count]; x++) {
//            [queryString setString:@""];
//
//            [queryString appendFormat:@"insert into ORDER_TRANSACTION_CUSTOMFIELDS(ordert_header_id,  ordert_vornr_operation, ordert_posnr, doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length) values('%@','%@','%@'",[headerDetails objectForKey:@"ID"],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:1],[[[transactionDetails objectAtIndex:i] firstObject]objectAtIndex:15]];
//
//            for (int y=0; y<[[customComponentTransactionFields objectAtIndex:x] count]; y++) {
//                [queryString appendFormat:@",'%@'",[[customComponentTransactionFields objectAtIndex:x] objectAtIndex:y]];
//            }
//            [queryString appendFormat:@")"];
//            if ([self set_query:queryString]) {
//                if ([self run_Queries_NODATA]) {
//                    [ConsoleLogHandler showLog:[NSString stringWithFormat:@"inserted %i",i]];
//                }
//            }
//        }
//    }
//
//    if ([headerDetails objectForKey:@"NOSYNCLOG"]) {
//        return @"";
//    }
//    //For Sync Log
//    [queryString setString:@""];
//
//    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
//    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
//
//
//    if (isNew) {
//        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Create','%@','Complete','%@','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//        }
//        else
//        {
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[headerDetails objectForKey:@"DATE"],[headerDetails objectForKey:@"TIME"],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//        }
//        if([self set_query:queryString])
//        {
//            [self run_Queries_NODATA];
//        }
//
//        return @"";
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"select ObjectID,ActivityType,Status from SyncLog where UUID = '%@' order by Date,Time",[headerDetails objectForKey:@"ID"]];
//    NSMutableArray *objectIDs;
//    if ([self set_query:queryString]) {
//        objectIDs = [[self run_Queries_WITHDATA] lastObject];
//        //[queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and Status = 'New'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"]];
//    }
//    [queryString setString:@""];
//    if ([objectIDs count])
//    {
//        if ([[objectIDs lastObject] isEqualToString:@"New"]) {
//
//            [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OSYNCSTATUS"]];
//        }
//        else if([[objectIDs firstObject] length])
//        {//[self.orderHeaderDetails setObject:@"Confirm" forKey:@"OSYNCSTATUS"];
//            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else if([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[objectIDs firstObject]];
//            }
//            else
//            {
//                [queryString appendFormat:@"update SyncLog set Date = '%@',Time = '%@' where UUID = '%@' and ActivityType = '%@'",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"ID"],[objectIDs objectAtIndex:1]];
//            }
//        }
//    }
//    else{
//        if ([[headerDetails objectForKey:@"OBJECTID"] length]) {
//            if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Change"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Change','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Cancel"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//            else if ([[headerDetails objectForKey:@"OSYNCSTATUS"] isEqualToString:@"Confirm"]) {
//                [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,objectID) values('%@','%@','Order','Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"],[headerDetails objectForKey:@"OBJECTID"]];
//            }
//        }
//        else{
//            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID) values('%@','%@','Order','Create','%@','New','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[headerDetails objectForKey:@"REPORTEDBY"],[headerDetails objectForKey:@"ID"]];
//        }
//    }
//
//    if (queryString.length) {
//        if([self set_query:queryString])
//        {
//            [self run_Queries_NODATA];
//        }
//    }
//    return @"";
//}

- (NSMutableArray *)getLocalOrderForCondition:(NSMutableDictionary *)conditionDictionary
{
    NSArray *keyArray = [conditionDictionary allKeys];
    
    //    CREATE TABLE "ORDER_HEADER" ("orderh_id" VARCHAR,"orderh_type_id" VARCHAR,"orderh_type_name" VARCHAR,"orderh_shorttext" VARCHAR,"orderh_longtext" VARCHAR,"orderh_funcloc_id" VARCHAR,"orderh_funcloc_name" VARCHAR,"orderh_euipno_id" VARCHAR,"orderh_euipno_name" VARCHAR,"orderh_accindicator_id" VARCHAR,"orderh_accindicator_name" VARCHAR,"orderh_priority_id" VARCHAR,"orderh_priority_name" VARCHAR,"orderh_startdate" DATETIME,"orderh_enddate" DATETIME,"orderh_plant_id" VARCHAR,"orderh_plant_name" VARCHAR,"orderh_workcenter_id" VARCHAR,"orderh_workcenter_name" VARCHAR,"orderh_latitudes" VARCHAR,"orderh_longitudes" VARCHAR,"orderh_altitudes" VARCHAR,"orderh_reported_by" VARCHAR,"orderh_status" VARCHAR,"oh_objectID" VARCHAR,"oh_upadated_Date" DATETIME,"oh_docs" VARCHAR,"oh_sync_status" VARCHAR,"orderh_kokrs" VARCHAR,"orderh_kostl" VARCHAR,"orderh_qmnum" VARCHAR,"orderh_malf_sdate" VARCHAR,"orderh_malf_edate" VARCHAR,"orderh_effect_id" VARCHAR DEFAULT (null) ,"orderh_msaus" VARCHAR,"orderh_Nreported_by" VARCHAR,"orderh_effect_name" VARCHAR,"orderh_systemcondition_id" VARCHAR,"orderh_systemcondition_text" VARCHAR, "orderh_wsm" VARCHAR, "orderh_wcm" VARCHAR, "orderh_user01" VARCHAR, "orderh_user02" VARCHAR, "orderh_user03" VARCHAR, "orderh_user04" VARCHAR, "orderh_user05" VARCHAR, "orderh_personresponsible_id" VARCHAR, "orderh_personresponsible_text" VARCHAR, "orderh_ingrp" VARCHAR, "orderh_ingrp_name" VARCHAR)
    
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct orderh_id, orderh_type_id , orderh_type_name , orderh_shorttext , orderh_longtext , orderh_funcloc_id , orderh_funcloc_name , orderh_euipno_id , orderh_euipno_name , orderh_accindicator_id , orderh_accindicator_name , orderh_priority_id, orderh_priority_name, orderh_startdate , orderh_enddate , orderh_plant_id, orderh_plant_name, orderh_workcenter_id, orderh_workcenter_name, orderh_latitudes, orderh_longitudes, orderh_altitudes, orderh_reported_by, orderh_status, oh_objectID, oh_docs, orderh_kokrs, orderh_kostl, orderh_qmnum, orderh_malf_sdate, orderh_malf_edate, orderh_effect_id, orderh_msaus, orderh_Nreported_by, orderh_effect_name, orderh_systemcondition_id, orderh_systemcondition_text, orderh_user02,orderh_personresponsible_id,orderh_personresponsible_text,orderh_ingrp,orderh_ingrp_name from ORDER_HEADER"];
    
    NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
    
 
    if ([conditionDictionary objectForKey:@"PERNR"]) {
        
        [conditionString appendFormat:@" where orderh_personresponsible_id = %@ and ORDER BY orderh_startdate   DESC",[conditionDictionary objectForKey:@"PERNR"]];
        
    }
    
    if ([keyArray containsObject:@"FILTER"]) {
        [conditionString appendFormat:@" where %@",[conditionDictionary objectForKey:@"FILTER"]];
    }
    else if ([keyArray containsObject:@"COLOUMN"]){
        [conditionString appendFormat:@" ORDER BY %@ %@",[conditionDictionary objectForKey:@"COLOUMN"],[conditionDictionary objectForKey:@"SORT"]];
    }
    else if ([keyArray containsObject:@"RECENT"]) {
        [conditionString appendFormat:@"%@",[conditionDictionary objectForKey:@"RECENT"]];
    }
    else{
        
        //[conditionString appendFormat:@" ORDER BY oh_upadated_Date DESC"];
        [conditionString appendFormat:@" ORDER BY orderh_startdate   DESC"];
    }
    
    [queryString appendFormat:@" %@",conditionString];
    
    if([self set_query:queryString])
    {
        return [self run_Queries_WITHDICTIONARY];
    }
    
    return [NSMutableArray array];
}

- (NSMutableArray *)getPlantWorkForOrders:(NSMutableDictionary *)orderDictionary
{
    NSArray *keyArray = [orderDictionary allKeys];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct plant_id, plant_text, workcenter_id , workcenter_text from WORKCENTERMASTER"];
    
    
    NSMutableString *conditionString = [[NSMutableString alloc] initWithString:@" "];
    
    if ([keyArray containsObject:@"FILTER"]) {
        
        [conditionString appendFormat:@" where %@",[orderDictionary objectForKey:@"FILTER"]];
    }
    
    if ([keyArray containsObject:@"COLOUMN"]){
        [conditionString appendFormat:@" ORDER BY %@ %@",[orderDictionary objectForKey:@"COLOUMN"],[orderDictionary objectForKey:@"SORT"]];
    }
    else{
        [conditionString appendFormat:@" ORDER BY plant_id DESC"];
    }
    
    [queryString appendFormat:@" %@",conditionString];
    
    if([self set_query:queryString])
    {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

/*
 - (void)getinsertDetailOrderDetailstoDictionary:(NSMutableDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermits:(NSMutableArray *)permitDetails withTransaction:(NSMutableArray *)transactionDetails withActivity:(NSString *)activityType ForUUID:(NSString *)uuid
 {
 NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
 [queryString appendFormat:@"select * from ORDER_HEADER where orderh_id = '%@' order by orderh_startdate",uuid];
 NSMutableArray *headerDetailsArray;
 if ([self set_query:queryString]) {
 headerDetailsArray = [self run_Queries_WITHDATA];
 }
 
 if ([headerDetailsArray count]) {
 NSArray *detailArray = [headerDetailsArray lastObject];
 [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
 [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"OID"];
 [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"ONAME"];
 [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"OSHORTTEXT"];
 [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"OLONGTEXT"];
 [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"FID"];
 [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"FNAME"];
 [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"EQID"];
 [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"EQNAME"];
 [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"ACCINCID"];
 [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"ACCINCNAME"];
 [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"OPID"];
 [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"OPNAME"];
 [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"SDATE"];
 [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"EDATE"];
 [headerDetails setObject:[detailArray objectAtIndex:15] forKey:@"PLANTID"];
 [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"WORKCENTERID"];
 [headerDetails setObject:[detailArray objectAtIndex:17] forKey:@"LATITUDE"];
 [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LONGITUDE"];
 [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"ALTITUDE"];
 [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"REPORTEDBY"];
 [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"OSTATUS"];
 [headerDetails setObject:[detailArray objectAtIndex:24] forKey:@"OBJECTID"];
 [headerDetails setObject:[detailArray objectAtIndex:25] forKey:@"UPDDATE"];
 [headerDetails setObject:[detailArray objectAtIndex:26] forKey:@"DOCS"];
 [headerDetails setObject:[detailArray objectAtIndex:27] forKey:@"OSYNCSTATUS"];
 [headerDetails setObject:[detailArray objectAtIndex:28] forKey:@"workarea"];
 [headerDetails setObject:[detailArray objectAtIndex:29] forKey:@"costcenter"];
 }
 
 [queryString setString:@""];
 [queryString appendFormat:@"select * from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@'",uuid];
 
 if ([self set_query:queryString]) {
 [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"EQUIPMENTHISTORY"];
 }
 
 [queryString setString:@""];
 [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@'",uuid];
 if ([self set_query:queryString]) {
 [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"CFH"];
 }
 
 [queryString setString:@""];
 if ([activityType isEqualToString:@"Create"]) {
 activityType = @"I";
 }
 else if ([activityType isEqualToString:@"Change"]) {
 activityType = @"U";
 }
 else if ([activityType isEqualToString:@"Confirm"]){
 activityType = @"Z";
 }
 if (activityType.length) {
 
 [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = '%@' and Zdoctype = 'W'",activityType];
 
 NSMutableArray *endPointArray;
 if ([self set_query:queryString]) {
 endPointArray = [self run_Queries_WITHDATA];
 }
 if ([endPointArray count]) {
 NSArray *detailArray = [endPointArray lastObject];
 [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
 }
 }
 
 [queryString setString:@""];
 [queryString appendFormat:@"SELECT * from ORDER_ATTACHMENTS where ordera_header_id = '%@'",uuid];
 if ([self set_query:queryString]) {
 [attachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
 }
 
 [queryString setString:@""];
 [queryString appendFormat:@"SELECT * from ORDER_HEADER_PERMIT where orderp_header_id = '%@'",uuid];
 if ([self set_query:queryString]) {
 [permitDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
 }
 
 [queryString setString:@""];
 [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
 NSMutableArray *tempTransactionDetails = [NSMutableArray new];
 if ([self set_query:queryString]) {
 [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
 }
 
 for (int x = 0; x <[tempTransactionDetails count]; x ++) {
 NSMutableArray *customOperationFields,*customComponentCodeFields;
 customOperationFields = [NSMutableArray new];
 customComponentCodeFields = [NSMutableArray new];
 
 [queryString setString:@""];
 [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WO'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:15]];
 if ([self set_query:queryString]) {
 [customOperationFields addObjectsFromArray:[self run_Queries_WITHDATA]];
 }
 
 [queryString setString:@""];
 [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WC'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1],[[tempTransactionDetails objectAtIndex:x] objectAtIndex:15]];
 if ([self set_query:queryString]) {
 [customComponentCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
 }
 
 [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customOperationFields,customComponentCodeFields,nil]];
 }
 }*/

//- (void)getinsertDetailOrderDetailstoDictionary:(NSMutableDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermits:(NSMutableArray *)permitDetails withTransaction:(NSMutableArray *)transactionDetails withParts:(NSMutableArray *)partDetails withActivity:(NSString *)activityType ForUUID:(NSString *)uuid
//{
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//    [queryString appendFormat:@"select * from ORDER_HEADER where orderh_id = '%@' order by orderh_startdate",uuid];
//    NSMutableArray *headerDetailsArray;
//    if ([self set_query:queryString]) {
//        headerDetailsArray = [self run_Queries_WITHDATA];
//    }
//
//    if ([headerDetailsArray count]) {
//        NSArray *detailArray = [headerDetailsArray lastObject];
//        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
//        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"OID"];
//        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"ONAME"];
//        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"OSHORTTEXT"];
//        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"OLONGTEXT"];
//        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"FID"];
//        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"FNAME"];
//        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"EQID"];
//        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"EQNAME"];
//        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"ACCINCID"];
//        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"ACCINCNAME"];
//        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"OPID"];
//        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"OPNAME"];
//        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"SDATE"];
//        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"EDATE"];
//        [headerDetails setObject:[detailArray objectAtIndex:15] forKey:@"PLANTID"];
//        [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"WORKCENTERID"];
//        [headerDetails setObject:[detailArray objectAtIndex:17] forKey:@"LATITUDE"];
//        [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LONGITUDE"];
//        [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"ALTITUDE"];
//        [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"REPORTEDBY"];
//        [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"OSTATUS"];
//        [headerDetails setObject:[detailArray objectAtIndex:24] forKey:@"OBJECTID"];
//        [headerDetails setObject:[detailArray objectAtIndex:25] forKey:@"UPDDATE"];
//        [headerDetails setObject:[detailArray objectAtIndex:26] forKey:@"DOCS"];
//        [headerDetails setObject:[detailArray objectAtIndex:27] forKey:@"OSYNCSTATUS"];
//        [headerDetails setObject:[detailArray objectAtIndex:28] forKey:@"workarea"];
//        [headerDetails setObject:[detailArray objectAtIndex:29] forKey:@"costcenter"];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"select * from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@'",uuid];
//
//    if ([self set_query:queryString]) {
//        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"EQUIPMENTHISTORY"];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@'",uuid];
//    if ([self set_query:queryString]) {
//        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"CFH"];
//    }
//
//    [queryString setString:@""];
//    if ([activityType isEqualToString:@"Create"]) {
//        activityType = @"I";
//    }
//    else if ([activityType isEqualToString:@"Change"]) {
//        activityType = @"U";
//    }
//    else if ([activityType isEqualToString:@"Confirm"]){
//        activityType = @"Z";
//    }
//    if (activityType.length) {
//
//        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = '%@' and Zdoctype = 'W'",activityType];
//
//        NSMutableArray *endPointArray;
//        if ([self set_query:queryString]) {
//            endPointArray = [self run_Queries_WITHDATA];
//        }
//        if ([endPointArray count]) {
//            NSArray *detailArray = [endPointArray lastObject];
//            [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
//        }
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"SELECT * from ORDER_ATTACHMENTS where ordera_header_id = '%@'",uuid];
//    if ([self set_query:queryString]) {
//        [attachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"SELECT * from ORDER_HEADER_PERMIT where orderp_header_id = '%@'",uuid];
//    if ([self set_query:queryString]) {
//        [permitDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
//    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
//    if ([self set_query:queryString]) {
//        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
//    }
//
//    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
//        NSMutableArray *customOperationFields;
//        customOperationFields = [NSMutableArray new];
//
//        [queryString setString:@""];
//        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and doctypeitem = 'WO'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1]];
//        if ([self set_query:queryString]) {
//            [customOperationFields addObjectsFromArray:[self run_Queries_WITHDATA]];
//        }
//
//        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customOperationFields,nil]];
//    }
//
//    [queryString setString:@""];
//    [queryString appendFormat:@"SELECT * from ORDER_PARTS where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
//    NSMutableArray *tempPartDetails = [NSMutableArray new];
//    if ([self set_query:queryString]) {
//        [tempPartDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
//    }
//
//    for (int x = 0; x <[tempPartDetails count]; x ++) {
//
//        NSMutableArray *customComponentCodeFields;
//
//        customComponentCodeFields = [NSMutableArray new];
//
//        [queryString setString:@""];
//        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WC'",uuid,[[tempPartDetails objectAtIndex:x] objectAtIndex:1],[[tempPartDetails objectAtIndex:x] objectAtIndex:8]];
//
//        if ([self set_query:queryString]) {
//            [customComponentCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
//        }
//
//        [partDetails addObject:[NSArray arrayWithObjects:[tempPartDetails objectAtIndex:x],customComponentCodeFields,nil]];
//    }
//}

- (void)getinsertDetailOrderDetailstoDictionary:(NSMutableDictionary *)headerDetails withAttachments:(NSMutableArray *)attachmentDetails withPermitWorkApprovals:(NSMutableArray *)PermitWorkApprovals withPermitWorkApplications:(NSMutableArray *)PermitWorkApplications withIssuePermits:(NSMutableArray *)issuePermits withPermitsOperationWCD:(NSMutableArray *)permitsOperationWCD withTransaction:(NSMutableArray *)transactionDetails withParts:(NSMutableArray *)partDetails withActivity:(NSString *)activityType withWsmDetails:(NSMutableArray *)wsmDetails withObjectDetails:(NSMutableArray *)objectDetails ForUUID:(NSString *)uuid
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from ORDER_HEADER where orderh_id = '%@' order by orderh_startdate",uuid];
    NSMutableArray *headerDetailsArray;
    if ([self set_query:queryString]) {
        headerDetailsArray = [self run_Queries_WITHDATA];
    }
    
    if ([headerDetailsArray count]) {
        NSArray *detailArray = [headerDetailsArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"OID"];
        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"ONAME"];
        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"OSHORTTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"LONGTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"FID"];
        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"FNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"EQID"];
        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"EQNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"ACCINCID"];
        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"ACCINCNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"OPID"];
        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"OPNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"SDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"EDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:15] forKey:@"PLANTID"];
        [headerDetails setObject:[detailArray objectAtIndex:16] forKey:@"WORKCENTERID"];
        [headerDetails setObject:[detailArray objectAtIndex:17] forKey:@"LATITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:18] forKey:@"LONGITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:19] forKey:@"ALTITUDE"];
        [headerDetails setObject:[detailArray objectAtIndex:22] forKey:@"REPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:23] forKey:@"OSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:24] forKey:@"OBJECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:25] forKey:@"UPDDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:26] forKey:@"DOCS"];
        [headerDetails setObject:[detailArray objectAtIndex:27] forKey:@"OSYNCSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:28] forKey:@"workarea"];
        [headerDetails setObject:[detailArray objectAtIndex:29] forKey:@"costcenter"];
        [headerDetails setObject:[detailArray objectAtIndex:30] forKey:@"QMNUM"];
        [headerDetails setObject:[detailArray objectAtIndex:31] forKey:@"MALFUNCTIONSTARTDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:32] forKey:@"MALFUNCTIONENDDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:33] forKey:@"EFFECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:34] forKey:@"BREAKDOWN"];
        [headerDetails setObject:[detailArray objectAtIndex:35] forKey:@"NREPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:36] forKey:@"EFFECTNAME"];
        [headerDetails setObject:[detailArray objectAtIndex:37] forKey:@"SYSTEMCONDITIONID"];
        [headerDetails setObject:[detailArray objectAtIndex:38] forKey:@"SYSTEMCONDITIONTEXT"];
        
        
        [headerDetails setObject:[detailArray objectAtIndex:46] forKey:@"PARNRID"];
        [headerDetails setObject:[detailArray objectAtIndex:47] forKey:@"NAMEVW"];
        [headerDetails setObject:[detailArray objectAtIndex:48] forKey:@"PLANNERGROUP"];
        [headerDetails setObject:[detailArray objectAtIndex:49] forKey:@"PLANNERGROUPNAME"];
        
        
        
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"select * from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"EQUIPMENTHISTORY"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"CFH"];
    }
    
    [queryString setString:@""];
    
    if ([activityType isEqualToString:@"Create"]) {
        activityType = @"I";
    }
    else if ([activityType isEqualToString:@"Change"]) {
        activityType = @"U";
    }
    else if ([activityType isEqualToString:@"Confirm"]){
        activityType = @"Z";
    }
    
    if (activityType.length) {
        
        [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = '%@' and Zdoctype = 'W'",activityType];
        
        NSMutableArray *endPointArray;
        if ([self set_query:queryString]) {
            endPointArray = [self run_Queries_WITHDATA];
        }
        if ([endPointArray count]) {
            NSArray *detailArray = [endPointArray lastObject];
            [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
        }
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_ATTACHMENTS where ordera_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [attachmentDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_WCM_WORKAPPROVALS where orderwcm_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [PermitWorkApprovals addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    NSMutableArray *tempPermitWorkApplicaitons = [NSMutableArray new];
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_WCM_WORKAPPLICATIONS where orderwcm_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        
        [tempPermitWorkApplicaitons addObjectsFromArray:[self run_Queries_WITHDATA]];
        
        for (int i =0; i<[tempPermitWorkApplicaitons count]; i++) {
            
            NSMutableArray *tempPermitHStandardCheckPoints = [NSMutableArray new];
            NSMutableArray *tempPermitCStandardCheckPoints = [NSMutableArray new];
            
            [queryString setString:@""];
            
            
            //            CREATE TABLE "ORDER_WCM_WORK_REQUIREMENTS" ("Wapinr" VARCHAR, "Wapityp" VARCHAR, "ChkPointType" VARCHAR, "Wkid" VARCHAR, "Needid" VARCHAR, "Value" VARCHAR, "Desctext" VARCHAR, "Wkgrp" VARCHAR, "Needgrp" VARCHAR, "Tplnr" VARCHAR, "Equnr" VARCHAR, "Aprv4unmarked" VARCHAR, "Aprv4marked" VARCHAR)
            
            [queryString appendFormat:@"SELECT * from ORDER_WCM_WORK_REQUIREMENTS where Wapinr = '%@' and Wapityp = '%@' and ChkPointType = 'W'",[[tempPermitWorkApplicaitons objectAtIndex:i] objectAtIndex:2],[[tempPermitWorkApplicaitons objectAtIndex:i] objectAtIndex:4]];
            
            if ([self set_query:queryString]) {
                
                [tempPermitHStandardCheckPoints addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"SELECT * from ORDER_WCM_WORK_REQUIREMENTS where Wapinr = '%@' and Wapityp = '%@' and ChkPointType = 'R'",[[tempPermitWorkApplicaitons objectAtIndex:i] objectAtIndex:2],[[tempPermitWorkApplicaitons objectAtIndex:i] objectAtIndex:4]];
            
            if ([self set_query:queryString]) {
                
                [tempPermitCStandardCheckPoints addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            [PermitWorkApplications addObject:[NSMutableArray arrayWithObjects:[tempPermitWorkApplicaitons objectAtIndex:i],tempPermitHStandardCheckPoints,tempPermitCStandardCheckPoints, nil]];
        }
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_WCM_ISSUEPERMITS where orderwcm_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [issuePermits addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_WCM_OPERATIONWCD where orderwcm_header_id = '%@'",uuid];
    
    NSMutableArray *tempPermitsOperationWCD = [NSMutableArray new];
    
    if ([self set_query:queryString]){
        
        [tempPermitsOperationWCD addObjectsFromArray:[self run_Queries_WITHDATA]];
        
        for (int i =0; i<[tempPermitsOperationWCD count]; i++) {
            
            NSMutableArray *tempPermitsOperationWCDTaggingConditions = [NSMutableArray new];
            
            [queryString setString:@""];
            [queryString appendFormat:@"SELECT * from ORDER_WCM_OPERATIONWCD_TAGGINGCONDITIONS where orderwcm_wcnr = '%@'",[[tempPermitsOperationWCD objectAtIndex:i] objectAtIndex:2]];
            
            if ([self set_query:queryString]) {
                
                [tempPermitsOperationWCDTaggingConditions addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            
            [permitsOperationWCD addObject:[NSMutableArray arrayWithObjects:[tempPermitsOperationWCD objectAtIndex:i],tempPermitsOperationWCDTaggingConditions, nil]];
        }
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    for (int x = 0; x <[tempTransactionDetails count]; x ++) {
        NSMutableArray *customOperationFields;
        customOperationFields = [NSMutableArray new];
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and doctypeitem = 'WO'",uuid,[[tempTransactionDetails objectAtIndex:x] objectAtIndex:1]];
        if ([self set_query:queryString]) {
            [customOperationFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
        [transactionDetails addObject:[NSArray arrayWithObjects:[tempTransactionDetails objectAtIndex:x],customOperationFields,nil]];
    }
    
    [queryString setString:@""];
    
    
//    CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR, "ordert_componentaction" VARCHAR, "ordert_receipt" VARCHAR, "ordert_unload" VARCHAR)
    
    [queryString appendFormat:@"SELECT distinct ordert_header_id,ordert_vornr_operation,ordert_quantity, ordert_lgort,ordert_lgorttext,ordert_matnr,ordert_matnrtext,ordert_meins,ordert_posnr,ordert_postp,ordert_postptext,ordert_rsnum,ordert_rspos,ordert_werks,ordert_werkstext,ordert_componentaction,ordert_receipt,ordert_unload from ORDER_PARTS where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    
      NSMutableArray *tempPartDetails = [NSMutableArray new];
      if ([self set_query:queryString]) {
        [tempPartDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
       }
    
      for (int x = 0; x <[tempPartDetails count]; x ++) {
        
         NSMutableArray *customComponentCodeFields;
         customComponentCodeFields = [NSMutableArray new];
        
        [queryString setString:@""];
        [queryString appendFormat:@"SELECT doctype, doctypeitem, tabname, fieldname, value, label, datatype, sequence, length from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@' and ordert_vornr_operation= '%@' and ordert_posnr = '%@' and doctypeitem = 'WC'",uuid,[[tempPartDetails objectAtIndex:x] objectAtIndex:1],[[tempPartDetails objectAtIndex:x] objectAtIndex:8]];
        
        if ([self set_query:queryString]) {
            [customComponentCodeFields addObjectsFromArray:[self run_Queries_WITHDATA]];
        }
        
         [partDetails addObject:[NSArray arrayWithObjects:[tempPartDetails objectAtIndex:x],customComponentCodeFields,nil]];
       }
    
       [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_WSM_SAFETYMEASURES where orderwsm_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [wsmDetails addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_OBJECTS where orderobject_header_id = '%@'",uuid];
    if ([self set_query:queryString]) {
        [objectDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
}

- (void)getinsertDetailCollectiveConfirmationOrderDetailstoDictionary:(NSMutableDictionary *)headerDetails ForUUID:(NSString *)uuid
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from ORDER_COLLECTIVECONFIRMATION where ordercc_id = '%@'",uuid];
    NSMutableArray *headerDetailsArray;
    
    if ([self set_query:queryString]) {
        headerDetailsArray = [self run_Queries_WITHDATA];
    }
    
    if ([headerDetailsArray count]) {
        
        NSArray *detailArray = [headerDetailsArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"ID"];
        [headerDetails setObject:[detailArray objectAtIndex:1] forKey:@"OBJECTID"];
        [headerDetails setObject:[detailArray objectAtIndex:2] forKey:@"REPORTEDBY"];
        [headerDetails setObject:[detailArray objectAtIndex:3] forKey:@"CONFTEXT"];
        [headerDetails setObject:[detailArray objectAtIndex:4] forKey:@"ACTIVITYID"];
        [headerDetails setObject:[detailArray objectAtIndex:5] forKey:@"ACCINCID"];
        [headerDetails setObject:[detailArray objectAtIndex:6] forKey:@"CONFIRMREASON"];
        [headerDetails setObject:[detailArray objectAtIndex:7] forKey:@"REMAINWORK"];
        [headerDetails setObject:[detailArray objectAtIndex:8] forKey:@"AEURU"];
        [headerDetails setObject:[detailArray objectAtIndex:9] forKey:@"RSNUM"];
        [headerDetails setObject:[detailArray objectAtIndex:10] forKey:@"SDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:11] forKey:@"EDATE"];
        [headerDetails setObject:[detailArray objectAtIndex:12] forKey:@"OSTATUS"];
        [headerDetails setObject:[detailArray objectAtIndex:13] forKey:@"OID"];
        [headerDetails setObject:[detailArray objectAtIndex:14] forKey:@"USER02"];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select distinct Zwsrv from SYNC_MAP_DATA where Endpoint = 'SOAP' and Zactivity = 'CC' and Zdoctype = 'W'"];
    
    NSMutableArray *endPointArray;
    if ([self set_query:queryString]) {
        endPointArray = [self run_Queries_WITHDATA];
    }
    if ([endPointArray count]) {
        NSArray *detailArray = [endPointArray lastObject];
        [headerDetails setObject:[detailArray objectAtIndex:0] forKey:@"URL_ENDPOINT"];
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"SELECT * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    //NSMutableArray *tempTransactionDetails = [NSMutableArray new];
    if ([self set_query:queryString]) {
        //  [tempTransactionDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
        [headerDetails setObject:[self run_Queries_WITHDATA] forKey:@"ITEMS"];
    }
    
    
}

- (NSMutableArray *)getAllPendingSyncLogs
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@"select * from synclog where Status = 'New' order by Date,Time"];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    return [NSMutableArray array];
}

- (NSMutableDictionary *)getDataForSyncLog:(NSMutableArray *)dataArray
{
    if ([[dataArray objectAtIndex:2] isEqualToString:@"Notification"]) {
        
        NSMutableDictionary *headerDetailDictionary = [[NSMutableDictionary alloc] init];
        NSMutableArray *causeCodeDetailArray = [[NSMutableArray alloc] init];
        NSMutableArray *taskCodeDetailArray = [[NSMutableArray alloc]init];
        NSMutableArray *headerAttachments = [[NSMutableArray alloc]init];
        NSMutableArray *notifStatusArray = [[NSMutableArray alloc] init];
        [self getinsertDetailNotificationDetailstoDictionary:headerDetailDictionary withAttachments:headerAttachments  withTransaction:causeCodeDetailArray withTasks:taskCodeDetailArray withNotifStatus:notifStatusArray forAction:[dataArray objectAtIndex:3] ForUUID:[dataArray objectAtIndex:7]];
        
        [headerDetailDictionary setObject:@"SYNC" forKey:@"TRANSMITTYPE"];
        [headerDetailDictionary setObject:causeCodeDetailArray forKey:@"ITEMS"];
        [headerDetailDictionary setObject:taskCodeDetailArray forKey:@"TASKS"];
        [headerDetailDictionary setObject:headerAttachments forKey:@"ATTACHMENTS"];
        [headerDetailDictionary setObject:notifStatusArray forKey:@"NOTIFSTATUS"];
        
        return headerDetailDictionary;
    }
    else if ([[dataArray objectAtIndex:2] isEqualToString:@"Order"]) {
        
        NSMutableDictionary *headerDetailDictionary = [[NSMutableDictionary alloc] init];
        
        if ([[dataArray objectAtIndex:3] isEqualToString:@"Collective Confirm"]) {
            
            [self getinsertDetailCollectiveConfirmationOrderDetailstoDictionary:headerDetailDictionary ForUUID:[dataArray objectAtIndex:7]];
            
        }
        else{
            
            NSMutableArray *headerAttachments = [[NSMutableArray alloc]init];
            NSMutableArray *permitsWorkApprovalDetailArray = [[NSMutableArray alloc] init];
            NSMutableArray *permitsWorkApplicationDetailArray = [[NSMutableArray alloc] init];
            NSMutableArray *issuePermitsArray = [[NSMutableArray alloc] init];
            NSMutableArray *operationsDetailArray = [[NSMutableArray alloc] init];
            NSMutableArray *partDetailsArray = [[NSMutableArray alloc]init];
            NSMutableArray *wsmDetailsArray = [[NSMutableArray alloc]init];
            NSMutableArray *objectDetailsArray = [[NSMutableArray alloc]init];
            NSMutableArray *permitsOperationWCD = [[NSMutableArray alloc]init];
            
            [self getinsertDetailOrderDetailstoDictionary:headerDetailDictionary withAttachments:headerAttachments withPermitWorkApprovals:permitsWorkApprovalDetailArray withPermitWorkApplications:permitsWorkApplicationDetailArray withIssuePermits:issuePermitsArray withPermitsOperationWCD:permitsOperationWCD withTransaction:operationsDetailArray withParts:partDetailsArray withActivity:[dataArray objectAtIndex:3] withWsmDetails:wsmDetailsArray withObjectDetails:objectDetailsArray ForUUID:[dataArray objectAtIndex:7]];
            
            [headerDetailDictionary setObject:@"SYNC" forKey:@"TRANSMITTYPE"];
            [headerDetailDictionary setObject:headerAttachments forKey:@"ATTACHMENTS"];
            [headerDetailDictionary setObject:permitsWorkApprovalDetailArray forKey:@"PERMITS_WORKAPPROVAL"];
            [headerDetailDictionary setObject:operationsDetailArray forKey:@"ITEMS"];
            [headerDetailDictionary setObject:partDetailsArray forKey:@"PARTS"];
            [headerDetailDictionary setObject:wsmDetailsArray forKey:@"WSM"];
            [headerDetailDictionary setObject:objectDetailsArray forKey:@"OBJECTS"];
            
        }
        
        return headerDetailDictionary;
        
    }
    else if ([[dataArray objectAtIndex:2] isEqualToString:@"Notification & Order"]) {
        NSMutableDictionary *headerDetailDictionary = [[NSMutableDictionary alloc] init];
        NSMutableArray *causeCodeDetailArray = [[NSMutableArray alloc] init];
        NSMutableArray *headerAttachments = [[NSMutableArray alloc]init];
        NSMutableArray *headerOrderAttachments = [[NSMutableArray alloc]init];
        NSMutableArray *permitsDetailArray = [[NSMutableArray alloc] init];
        NSMutableArray *operationsDetailArray = [[NSMutableArray alloc] init];
        
        [self getinsertDetailNotificationwithOrderDetailstoDictionary:headerDetailDictionary withAttachments:headerAttachments withTransaction:causeCodeDetailArray alongwithOrderAttachment:headerOrderAttachments withPermits:permitsDetailArray  withOrderTransaction:operationsDetailArray forAction:[dataArray objectAtIndex:3] ForUUID:[dataArray objectAtIndex:7]];
        
        [headerDetailDictionary setObject:@"SYNC" forKey:@"TRANSMITTYPE"];
        [headerDetailDictionary setObject:causeCodeDetailArray forKey:@"ITEMS"];
        [headerDetailDictionary setObject:headerAttachments forKey:@"ATTACHMENTS"];
        
        [headerDetailDictionary setObject:headerOrderAttachments forKey:@"OATTACHMENTS"];
        [headerDetailDictionary setObject:permitsDetailArray forKey:@"PERMITS"];
        [headerDetailDictionary setObject:operationsDetailArray forKey:@"OITEMS"];
        
        return headerDetailDictionary;
    }
    else if ([[dataArray objectAtIndex:2] isEqualToString:@"Reservation"])
    {
        NSMutableDictionary *headerDetailDictionary = [[NSMutableDictionary alloc] init];
        [headerDetailDictionary addEntriesFromDictionary:[self getReserveUtilityFor:[dataArray objectAtIndex:7]]];
        [headerDetailDictionary setObject:@"SYNC" forKey:@"TRANSMITTYPE"];
        
        return headerDetailDictionary;
    }
    else if ([[dataArray objectAtIndex:2] isEqualToString:@"Inspection"])
    {
        NSMutableDictionary *headerDetailDictionary = [[NSMutableDictionary alloc] init];
        [headerDetailDictionary addEntriesFromDictionary:[self getInspectionCheckListFor:[dataArray objectAtIndex:7]]];
        [headerDetailDictionary setObject:@"SYNC" forKey:@"TRANSMITTYPE"];
        
        return headerDetailDictionary;
    }
    
    return [NSMutableDictionary dictionary];
}

- (NSMutableArray *)getUUIDForObjectID:(NSString *)objectID
{
    NSMutableString *queryString = [NSMutableString new];
    [queryString setString:@""];
    [queryString appendFormat:@"select distinct UUID from SyncLogs where ObjectID = '%@'",objectID];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    return [NSMutableArray array];
}

#pragma mark - logs

- (void)openLogFile
{
    NSFileManager *fileManager = [NSFileManager defaultManager];
    NSError *error;
    
    NSString *filepathString = [[NSString alloc] initWithString:[[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:@"FTEKPLOG.txt"]];
    dataToFileStream = [[NSOutputStream alloc] initToFileAtPath:filepathString append:YES];
    [dataToFileStream open];
    if (!logEntryFormatter) {
        
        logEntryFormatter = [[NSDateFormatter alloc] init];
        
        NSDate   *creationDate =[[fileManager attributesOfItemAtPath:filepathString error:nil] fileCreationDate];
        
        [logEntryFormatter setDateFormat:@"dd-MM-yyyy HH:mm:ss"];
        
        if ([defaults objectForKey:@"DELETELOGS"])
        {
            NSString *day=[defaults objectForKey:@"DELETELOGS"];
            
            NSDate *minStartDate,*minEndDate;
            
            minStartDate=creationDate;
            minEndDate=[NSDate date];
            
            NSInteger comparisionResult = [AppDelegate daysBetweenDate:minStartDate andDate:minEndDate];
            
            NSString *comparisionString = [NSString stringWithFormat:@"%i",(int)comparisionResult];
            
            if ([comparisionString intValue] > [day intValue])
            {
                BOOL success = [fileManager removeItemAtPath:filepathString error:&error];
                if (success) {
                    [self localNotifications];
                    
                    NSLog(@"Imp file deleted");
                }
                
                else
                {
                    NSLog(@"Imp Do not delete");
                    [fileManager removeItemAtPath:filepathString error:&error];
                }
            }
        }
    }
}

-(void)localNotifications
{
    //@"Device Logs has been deleted becuase of application settings for Fieltekpro"
    
    // Schedule the notification
    
    UILocalNotification* localNotification = [[UILocalNotification alloc] init];
    
    localNotification.alertBody =@"Device Logs has been deleted as per the settings";
    
    localNotification.timeZone = [NSTimeZone defaultTimeZone];
    
    [[UIApplication sharedApplication] presentLocalNotificationNow:localNotification];
    
}
- (void)writToLogFile:(NSString *)content
{
    NSMutableString *contentStr = [[NSMutableString alloc] initWithString:@""];
    [contentStr appendFormat:@"%@ : %@ \n",[logEntryFormatter stringFromDate:[NSDate date]],content];
    NSData *stringData = [contentStr dataUsingEncoding:NSUTF8StringEncoding];
    if ([dataToFileStream streamStatus] == NSStreamStatusOpen) {
        [dataToFileStream write:[stringData bytes] maxLength:[stringData length]];
    }
}
- (void)closeLogfile
{
    [dataToFileStream close];
}

#pragma mark - logs for custom fields

- (void)writeStringToFile:(NSString*)aString {
    
    // Build the path, and create if needed.
    NSString* filePath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];
    NSString* fileName = @"customFields.txt";
    NSString* fileAtPath = [filePath stringByAppendingPathComponent:fileName];
    
    if (![[NSFileManager defaultManager] fileExistsAtPath:fileAtPath]) {
        [[NSFileManager defaultManager] createFileAtPath:fileAtPath contents:nil attributes:nil];
    }
    // The main act...
    [[aString dataUsingEncoding:NSUTF8StringEncoding] writeToFile:fileAtPath atomically:NO];
}

- (NSString*)readStringFromFile {
    
    // Build the path...
    NSString* filePath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];
    NSString* fileName = @"customFields.txt";
    NSString* fileAtPath = [filePath stringByAppendingPathComponent:fileName];
    
    // The main act...
    return [[NSString alloc] initWithData:[NSData dataWithContentsOfFile:fileAtPath] encoding:NSUTF8StringEncoding];
}

#pragma mark - Insert Methods

- (BOOL)insertSyncMapData:(NSMutableArray *)syncMapData :(NSString *)endPoint
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    /*
     CREATE TABLE "SYNC_MAP_DATA" ("Endpoint" VARCHAR,"Zactivity" VARCHAR,"Zdoctype" VARCHAR,"Zwsrv" VARCHAR)
     */
    
    for (int i=0; i<[syncMapData count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"insert into SYNC_MAP_DATA values(\"%@\",\"%@\",\"%@\",\"%@\")",endPoint,[[syncMapData objectAtIndex:i] objectForKey:@"Zactivity"],[[syncMapData objectAtIndex:i] objectForKey:@"Zdoctype"],[[syncMapData objectAtIndex:i] objectForKey:@"Zwsrv"]];
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return YES;
}

-(BOOL)insertintoActivityTypeData:(NSArray *)activityTypesData{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from ACTIVITYTYPEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    /*
     CREATE TABLE "ACTIVITYTYPEMASTER" ("Kokrs" VARCHAR, "Kostl" VARCHAR, "Latyp" VARCHAR, "Lstar" VARCHAR, "Ktext" VARCHAR)
     */
    
    for (int i=0; i<[activityTypesData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into ACTIVITYTYPEMASTER values(\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[activityTypesData objectAtIndex:i] objectForKey:@"Kokrs"],[[activityTypesData objectAtIndex:i] objectForKey:@"Kostl"],[[activityTypesData objectAtIndex:i] objectForKey:@"Latyp"],[[activityTypesData objectAtIndex:i] objectForKey:@"Lstar"],[[activityTypesData objectAtIndex:i] objectForKey:@"Ktext"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

///AppSettingsData Insert//////
-(BOOL)insertintoAppSettingsMaster :(NSArray *)arr_AppSettings
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from APPSETTINGSMASTER"];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_AppSettings count]; i++) {
        
        [queryString setString:@""];
        
        //CREATE TABLE "APPSETTINGSMASTER" ("Host" VARCHAR, "Port" VARCHAR, "Dsource" VARCHAR, "Endpoint" VARCHAR, "Syncint" VARCHAR, "Synccnt" VARCHAR, "Mlog" VARCHAR, "DmlogInt" VARCHAR, "Active" VARCHAR, "Def" VARCHAR)
        [queryString appendFormat: @"INSERT INTO APPSETTINGSMASTER(Host,Port,Dsource,Endpoint,Syncint,Synccnt,Mlog,DmlogInt,Active,Def) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_AppSettings objectAtIndex:i] objectForKey:@"Host"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Port"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Dsource"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Endpoint"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Syncint"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Synccnt"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Mlog"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"DmlogInt"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Active"],[[arr_AppSettings objectAtIndex:i] objectForKey:@"Def"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

///NFCSettingsData Insert//////
-(BOOL)insertintoNFCSettingsMaster:(NSArray *)arr_NFCSettings
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"DELETE from NFCSETTINGSMASTER"];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    //CREATE TABLE "NFCSETTINGSMASTER" ("Mandt" VARCHAR, "Werks" VARCHAR, "Latitude" VARCHAR, "Longitude" VARCHAR, "Range" VARCHAR)
    
    for (int i =0; i<[arr_NFCSettings count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NFCSETTINGSMASTER(Mandt,Werks,Latitude,Longitude,Range) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_NFCSettings objectAtIndex:i] objectForKey:@"Mandt"],[[arr_NFCSettings objectAtIndex:i] objectForKey:@"Werks"],[[arr_NFCSettings objectAtIndex:i] objectForKey:@"Latitude"],[[arr_NFCSettings objectAtIndex:i] objectForKey:@"Longitude"],[[arr_NFCSettings objectAtIndex:i] objectForKey:@"Range"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
    }
    
    return TRUE;
}

///NotifType Insert//////
-(BOOL)insertintoNotificationType :(NSArray *)notifTypes
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from NOTIFICATIONTYPEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[notifTypes count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATIONTYPEMASTER(notificationtype_id,notificationtype_description) VALUES (\"%@\",\"%@\")",[[notifTypes objectAtIndex:i] objectForKey:@"Qmart"],[[notifTypes objectAtIndex:i] objectForKey:@"Qmartx"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

/////NotifType Insert//////
//-(BOOL)insertintoNotificationType :(NSArray *)arr_Qmart :(NSArray *)arr_Qmartx
//{
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    [queryString setString:@"delete from NOTIFICATIONTYPEMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i =0; i<[arr_Qmart count]; i++) {
//        [queryString setString:@""];
//        [queryString appendFormat: @"INSERT INTO NOTIFICATIONTYPEMASTER(notificationtype_id,notificationtype_description) VALUES (\"%@\",\"%@\")",[arr_Qmart objectAtIndex:i],[arr_Qmartx objectAtIndex:i]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//    return TRUE;
//}

-(BOOL)insertintoNotifPriority :(NSMutableArray *)notificationPriority{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from NOTIFICATION_PRIORITYMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[notificationPriority count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_PRIORITYMASTER(priority_id,priority_description) VALUES (\"%@\",\"%@\")",[[notificationPriority objectAtIndex:i] objectForKey:@"Priok"],[[notificationPriority objectAtIndex:i] objectForKey:@"Priokx"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//-(BOOL)insertintoNotifPriority :(NSArray *)arr_Priok :(NSArray *)arr_Priokx
//{
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    [queryString setString:@"delete from NOTIFICATION_PRIORITYMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
//
//    for (int i =0; i<[arr_Priok count]; i++) {
//        [queryString setString:@""];
//        [queryString appendFormat: @"INSERT INTO NOTIFICATION_PRIORITYMASTER(priority_id,priority_description) VALUES (\"%@\",\"%@\")",[arr_Priok objectAtIndex:i],[arr_Priokx objectAtIndex:i]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}

-(BOOL)insertintoOrderPriority:(NSArray *)orderPriority
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from ORDER_PRIORITYMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[orderPriority count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat: @"INSERT INTO ORDER_PRIORITYMASTER(priority_id,priority_description) VALUES (\"%@\",\"%@\")",[[orderPriority objectAtIndex:i] objectForKey:@"Priok"],[[orderPriority objectAtIndex:i] objectForKey:@"Priokx"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//-(BOOL)insertintoOrderPriority :(NSArray *)arr_Priok :(NSArray *)arr_Priokx
//{
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    for (int i =0; i<[arr_Priok count]; i++) {
//        [queryString setString:@""];
//        [queryString appendFormat: @"INSERT INTO ORDER_PRIORITYMASTER(priority_id,priority_description) VALUES (\"%@\",\"%@\")",[arr_Priok objectAtIndex:i],[arr_Priokx objectAtIndex:i]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}

-(BOOL)insertintoCostCenter:(NSArray *)costCenterArray
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from COSTCENTERMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[costCenterArray count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"INSERT INTO COSTCENTERMASTER(costcenter_id,costcenter_description,plant_id) VALUES (\"%@\",\"%@\",\"%@\")",[[costCenterArray objectAtIndex:i] objectForKey:@"Kostl"],[[costCenterArray objectAtIndex:i] objectForKey:@"Ktext"],[[costCenterArray objectAtIndex:i] objectForKey:@"Werks"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//-(BOOL)insertintoCostCenter :(NSArray *)arr_Kostl :(NSArray *)arr_Ktext
//{
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    for (int i =0; i<[arr_Kostl count]; i++) {
//        [queryString setString:@""];
//        [queryString appendFormat:@"INSERT INTO COSTCENTERMASTER(costcenter_id,costcenter_description) VALUES (\"%@\",\"%@\")",[arr_Kostl objectAtIndex:i],[arr_Ktext objectAtIndex:i]];
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}


-(BOOL)insertintoConfirmReason :(NSArray *)resultData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from GETCONFIRMREASONMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[resultData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO GETCONFIRMREASONMASTER(Werks,Grund,Grdtx) VALUES (\"%@\",\"%@\",\"%@\")",[[resultData objectAtIndex:i] objectForKey:@"Werks"],[[resultData objectAtIndex:i] objectForKey:@"Grund"],[[resultData objectAtIndex:i] objectForKey:@"Grdtx"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoNotifEffect :(NSArray *)arr_NotifEffectData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"DELETE FROM NOTIFEFFECTMASTER"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_NotifEffectData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFEFFECTMASTER(Auswk,Auswkt) VALUES (\"%@\",\"%@\")",[[arr_NotifEffectData objectAtIndex:i] objectForKey:@"Auswk"],[[arr_NotifEffectData objectAtIndex:i] objectForKey:@"Auswkt"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoOrderSystemCondition :(NSArray *)arr_OrderSystemConditionData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"DELETE FROM ORDERSYSTEMCONDITIONMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_OrderSystemConditionData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO ORDERSYSTEMCONDITIONMASTER(Anlzu,Anlzux) VALUES (\"%@\",\"%@\")",[[arr_OrderSystemConditionData objectAtIndex:i] objectForKey:@"Anlzu"],[[arr_OrderSystemConditionData objectAtIndex:i] objectForKey:@"Anlzux"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoEtTq80 :(NSArray *)arr_EtTq80Data
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"DELETE FROM NOTIF_ORDER_TYPE_RELATION_MASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_EtTq80Data count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIF_ORDER_TYPE_RELATION_MASTER(Qmart,Auart) VALUES (\"%@\",\"%@\")",[[arr_EtTq80Data objectAtIndex:i] objectForKey:@"Qmart"],[[arr_EtTq80Data objectAtIndex:i] objectForKey:@"Auart"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoInGrp :(NSArray *)arr_InGrpData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"DELETE FROM PLANNERGROUPMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_InGrpData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO PLANNERGROUPMASTER(Iwerk,Ingrp,Innam) VALUES (\"%@\",\"%@\",\"%@\")",[[arr_InGrpData objectAtIndex:i] objectForKey:@"Iwerk"],[[arr_InGrpData objectAtIndex:i] objectForKey:@"Ingrp"],[[arr_InGrpData objectAtIndex:i] objectForKey:@"Innam"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoPernr :(NSArray *)arr_PernrData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"DELETE FROM PERSONRESPONSIBLEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_PernrData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO PERSONRESPONSIBLEMASTER(Werks,Arbpl,Objid,Lastname,Firstname) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_PernrData objectAtIndex:i] objectForKey:@"Werks"],[[arr_PernrData objectAtIndex:i] objectForKey:@"Arbpl"],[[arr_PernrData objectAtIndex:i] objectForKey:@"Objid"],[[arr_PernrData objectAtIndex:i] objectForKey:@"Lastname"],[[arr_PernrData objectAtIndex:i] objectForKey:@"Firstname"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}



-(BOOL)insertintoAuthorizationGroup :(NSArray *)arr_AuthorizationData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    //  CREATE TABLE "WCM_AUTHORIZATION_GROUP" ("Begru_id" VARCHAR, "Begtx_text" VARCHAR)
    
    [queryString setString:@"DELETE FROM WCM_AUTHORIZATION_GROUP"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_AuthorizationData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO WCM_AUTHORIZATION_GROUP(Begru_id,Begtx_text) VALUES (\"%@\",\"%@\")",[[arr_AuthorizationData objectAtIndex:i] objectForKey:@"Begru"],[[arr_AuthorizationData objectAtIndex:i] objectForKey:@"Begtx"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoUsages :(NSArray *)arr_UsageData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    //CREATE TABLE "WCM_USAGES" ("Iwerk" VARCHAR, "Objart" VARCHAR, "Use_id" VARCHAR, "Usex_text" VARCHAR)
    
    
    [queryString setString:@"DELETE FROM WCM_USAGES"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_UsageData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO WCM_USAGES(Iwerk,Objart,Use_id,Usex_text) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_UsageData objectAtIndex:i] objectForKey:@"Iwerk"],[[arr_UsageData objectAtIndex:i] objectForKey:@"Objart"],[[arr_UsageData objectAtIndex:i] objectForKey:@"Use"],[[arr_UsageData objectAtIndex:i] objectForKey:@"Usex"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}



-(BOOL)insertintoWCMWorks :(NSArray *)arr_WcmWorkData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"DELETE FROM WCM_WORK_REQUIREMENTS"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    
    for (int i =0; i<[arr_WcmWorkData count]; i++) {
        
        [queryString setString:@""];
        
        
        NSString *workidString,*needidString,*ModflgString,*PropflgString,*DpflgString;
        
        
        if ([[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Wkid"]) {
            
            workidString=[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Wkid"];
        }
        else{
            
            workidString=@"";
        }
        
        if ([[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Needid"]) {
            
            needidString=[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Needid"];
        }
        else{
            
            needidString=@"";
        }
        
        
        if ([[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Propflg"]) {
            
            PropflgString=[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Propflg"];
        }
        else{
            
            PropflgString=@"";
        }
        
        if ([[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Modflg"]) {
            
            ModflgString=[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Modflg"];
        }
        else{
            
            ModflgString=@"";
        }
        
        if ([[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Dpflg"]) {
            
            DpflgString=[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Dpflg"];
        }
        else{
            
            DpflgString=@"";
        }
        
        //        CREATE TABLE "ORDER_WCM_WORK_REQUIREMENTS" ("Wapinr" VARCHAR, "Wapityp" VARCHAR, "ChkPointType" VARCHAR, "Wkid" VARCHAR, "Needid" VARCHAR, "Value" VARCHAR, "Desctext" VARCHAR, "Wkgrp" VARCHAR, "Needgrp" VARCHAR, "Tplnr" VARCHAR, "Equnr" VARCHAR, "Aprv4unmarked" VARCHAR, "Aprv4marked" VARCHAR, "Propflg" VARCHAR, "Modflg" VARCHAR, "Dpflg" VARCHAR)
        
        
        [queryString appendFormat: @"INSERT INTO WCM_WORK_REQUIREMENTS(Wapinr,Wapityp,ChkPointType,Wkid,Needid,Value,Desctext,Wkgrp,Needgrp,Tplnr,Equnr,Aprv4unmarked,Aprv4marked,Propflg,Modflg,Dpflg) VALUES (\"\",\"\",\"W\",\"%@\",\"%@\",\"\",\"%@\",\"%@\",\"\",\"%@\",\"\",\"\",\"\",\"%@\",\"%@\",\"%@\")",workidString,needidString,[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"ScrtextL"],[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Wapiuse"],[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Iwerk"],PropflgString,ModflgString,DpflgString];
        
        
        //        [queryString appendFormat: @"INSERT INTO ORDER_WCM_WORKS(Dpflg,Iwerk,Modflg,ScrtextL,Wapiuse,Wkgrp,Wkid,Aprv4unmarked,Aprv4marked,wapinr,wapityp,value,checkpointtype) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"\",\"\",\"\",\"\",\"\",\"\")",DpflgString,[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Iwerk"],ModflgString,[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"ScrtextL"],[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Wapiuse"],[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Wkgrp"],[[arr_WcmWorkData objectAtIndex:i] objectForKey:@"Wkid"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}


-(BOOL)insertintoWCMRequirements :(NSArray *)arr_WcmRequirementsData
{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    
    for (int i =0; i<[arr_WcmRequirementsData count]; i++) {
        
        [queryString setString:@""];
        
        
        NSString *workidString,*needidString,*ModflgString,*PropflgString,*DpflgString;
        
        
        if ([[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Wkid"]) {
            
            workidString=[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Wkid"];
        }
        else{
            
            workidString=@"";
        }
        
        if ([[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Needid"]) {
            
            needidString=[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Needid"];
        }
        else{
            
            needidString=@"";
        }
        
        if ([[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Propflg"]) {
            
            PropflgString=[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Propflg"];
        }
        else{
            
            PropflgString=@"";
        }
        
        if ([[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Modflg"]) {
            
            ModflgString=[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Modflg"];
        }
        else{
            
            ModflgString=@"";
        }
        
        if ([[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Dpflg"]) {
            
            DpflgString=[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Dpflg"];
        }
        else{
            
            DpflgString=@"";
        }
        
        
        //        CREATE TABLE "ORDER_WCM_WORK_REQUIREMENTS" ("Wapinr" VARCHAR, "Wapityp" VARCHAR, "ChkPointType" VARCHAR, "Wkid" VARCHAR, "Needid" VARCHAR, "Value" VARCHAR, "Desctext" VARCHAR, "Wkgrp" VARCHAR, "Needgrp" VARCHAR, "Tplnr" VARCHAR, "Equnr" VARCHAR, "Aprv4unmarked" VARCHAR, "Aprv4marked" VARCHAR, "Propflg" VARCHAR, "Modflg" VARCHAR, "Dpflg" VARCHAR)
        
        [queryString appendFormat: @"INSERT INTO WCM_WORK_REQUIREMENTS(Wapinr,Wapityp,ChkPointType,Wkid,Needid,Value,Desctext,Wkgrp,Needgrp,Tplnr,Equnr,Aprv4unmarked,Aprv4marked,Propflg,Modflg,Dpflg) VALUES (\"\",\"\",\"R\",\"%@\",\"%@\",\"\",\"%@\",\"%@\",\"\",\"%@\",\"\",\"\",\"\",\"%@\",\"%@\",\"%@\")",workidString,needidString,[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"ScrtextL"],[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Wapiuse"],[[arr_WcmRequirementsData objectAtIndex:i] objectForKey:@"Iwerk"],PropflgString,ModflgString,DpflgString];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
 }


-(BOOL)insertintoETWBSData :(NSArray *)arr_WBSData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from ETWBSMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
 
       //CREATE TABLE `ETWBS-MASTER` ( `Iwerk` TEXT, `Gsber` TEXT, `Posid` TEXT, `Poski` TEXT, `Post1` TEXT, `Pspnr` TEXT, `Pspid` TEXT )
 
    for (int i =0; i<[arr_WBSData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO ETWBSMASTER(Iwerk,Gsber,Posid,Poski,Post1,Pspnr,Pspid) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_WBSData objectAtIndex:i] objectForKey:@"Iwerk"],[[arr_WBSData objectAtIndex:i] objectForKey:@"Gsber"],[[arr_WBSData objectAtIndex:i] objectForKey:@"Posid"],[[arr_WBSData objectAtIndex:i] objectForKey:@"Poski"],[[arr_WBSData objectAtIndex:i] objectForKey:@"Post1"],[[arr_WBSData objectAtIndex:i] objectForKey:@"Pspnr"],[[arr_WBSData objectAtIndex:i] objectForKey:@"Pspid"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoETREVRData :(NSArray *)arr_REVRData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from ETREVNR-MASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //CREATE TABLE `ETREVNR-MASTER` ( `Iwerk` TEXT, `Revnr` TEXT, `Revnr` TEXT )
    for (int i =0; i<[arr_REVRData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO ETREVNR-MASTER(Iwerk,Revnr,Revnr) VALUES (\"%@\",\"%@\",\"%@\")",[[arr_REVRData objectAtIndex:i] objectForKey:@"Iwerk"],[[arr_REVRData objectAtIndex:i] objectForKey:@"Revnr"],[[arr_REVRData objectAtIndex:i] objectForKey:@"Revtx"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}
-(BOOL)insertintoUserData :(NSArray *)arr_UserData
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from USERDATAMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_UserData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO USERDATAMASTER(Sapuser,Muser,Fname,Lname,Kostl,Arbpl,Iwerk,Ounit,Pernr,Ingpr,Parvw,Parnr,Suser,Ustyp,Usgrp) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_UserData objectAtIndex:i] objectForKey:@"Sapuser"],[[arr_UserData objectAtIndex:i] objectForKey:@"Muser"],[[arr_UserData objectAtIndex:i] objectForKey:@"Fname"],[[arr_UserData objectAtIndex:i] objectForKey:@"Lname"],[[arr_UserData objectAtIndex:i] objectForKey:@"Kostl"],[[arr_UserData objectAtIndex:i] objectForKey:@"Arbpl"],[[arr_UserData objectAtIndex:i] objectForKey:@"Iwerk"],[[arr_UserData objectAtIndex:i] objectForKey:@"Ounit"],[[arr_UserData objectAtIndex:i] objectForKey:@"Pernr"],[[arr_UserData objectAtIndex:i] objectForKey:@"Ingpr"],[[arr_UserData objectAtIndex:i] objectForKey:@"Parvw"],[[arr_UserData objectAtIndex:i] objectForKey:@"Parnr"],[[arr_UserData objectAtIndex:i] objectForKey:@"Suser"],[[arr_UserData objectAtIndex:i] objectForKey:@"Ustyp"],[[arr_UserData objectAtIndex:i] objectForKey:@"Usgrp"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoNotifItemCodes :(NSArray *)arr_ItemCodegruppe :(NSArray *)arr_ItemKurztext :(NSString *)str_NotificationType :(NSString *)str_CatalogProfile{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    for (int i =0; i<[arr_ItemCodegruppe count]; i++) {
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO NOTIFICATION_COMPONENTMASTER(component_id,component_description,component_notificationtype_id,component_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[arr_ItemCodegruppe objectAtIndex:i],[arr_ItemKurztext objectAtIndex:i],str_NotificationType,str_CatalogProfile];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

-(BOOL)insertintoNotifItemCodesProblem :(NSArray *)arr_ItemCode :(NSArray *)arr_ItemKurztext :(NSArray *)arr_ComponentId :(NSString *)str_ComponentNotifId :(NSString *)str_CatalogProfileId{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_COMPONENT_PROBLEMMASTER"];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_ItemCode count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_COMPONENT_PROBLEMMASTER(problem_id,problem_description,problem_component_id,component_notificationtype_id,component_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[arr_ItemCode objectAtIndex:i],[arr_ItemKurztext objectAtIndex:i],[arr_ComponentId objectAtIndex:i],str_ComponentNotifId,str_CatalogProfileId];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
    
    
}

- (BOOL)insertintoNotifCodesTaskGroup :(NSArray *)arr_taskCodegruppe :(NSArray *)arr_taskKurztext :(NSString *)str_NotificationType :(NSString *)str_CatalogProfile{
    
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TASKGROUPMASTER"];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_taskCodegruppe count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_TASKGROUPMASTER(taskgroup_id,taskgroup_description,taskgroup_notificationtype_id,taskgroup_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[arr_taskCodegruppe objectAtIndex:i],[arr_taskKurztext objectAtIndex:i],str_NotificationType,str_CatalogProfile];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoNotifCodesObjectGroup :(NSArray *)arr_objectCodegruppe :(NSArray *)arr_objectKurztext :(NSString *)str_NotificationType :(NSString *)str_CatalogProfile{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_OBJECTGROUPMASTER"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_objectCodegruppe count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_OBJECTGROUPMASTER(objectgroup_id,objectgroup_description,objectgroup_notificationtype_id,objectgroup_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[arr_objectCodegruppe objectAtIndex:i],[arr_objectKurztext objectAtIndex:i],str_NotificationType,str_CatalogProfile];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}


- (BOOL)insertintoActivityCodesGroup :(NSArray *)arr_ActCodegruppe :(NSArray *)arr_ActKurztext :(NSString *)str_NotificationType :(NSString *)str_CatalogProfile{

    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_ACTIVITYMASTER"];
    
  //  CREATE TABLE `NOTIFICATION_ACTIVITYMASTER` ( `activity_id` TEXT, `activity_text` TEXT, `code_group_id` TEXT, `catalog_profileid` TEXT )

    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_ActCodegruppe count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_ACTIVITYMASTER(activity_id,activity_text,code_group_id,catalog_profileid) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[arr_ActCodegruppe objectAtIndex:i],[arr_ActKurztext objectAtIndex:i],str_NotificationType,str_CatalogProfile];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;

}

- (BOOL)insertintoNotifCodesGroup :(NSArray *)arr_ItemCodegruppe :(NSArray *)arr_ItemKurztext :(NSString *)str_NotificationType :(NSString *)str_CatalogProfile{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_CAUSEGROUPMASTER"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_ItemCodegruppe count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_CAUSEGROUPMASTER(causegroup_id,causegroup_description,causegroup_notificationtype_id,causegroup_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[arr_ItemCodegruppe objectAtIndex:i],[arr_ItemKurztext objectAtIndex:i],str_NotificationType,str_CatalogProfile];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoNotifCodes :(NSArray *)arr_ItemCode :(NSArray *)arr_ItemKurztext :(NSArray *)arr_ComponentId :(NSString *)str_CauseCodeNotifId :(NSString *)str_CatalogProfileId{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_CGROUP_CAUSECODEMASTER"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_ItemCode count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_CGROUP_CAUSECODEMASTER(causecode_id,causecode_description,causecode_cgroup_id, causegroup_notificationtype_id, causegroup_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[arr_ItemCode objectAtIndex:i],[arr_ItemKurztext objectAtIndex:i],[arr_ComponentId objectAtIndex:i],str_CauseCodeNotifId,str_CatalogProfileId];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoNotifTaskCodes :(NSArray *)arr_taskCode :(NSArray *)arr_taskKurztext :(NSArray *)arr_ComponentId :(NSString *)str_CauseCodeNotifId :(NSString *)str_CatalogProfileId{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TGROUP_TASKCODEMASTER"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_taskCode count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO NOTIFICATION_TGROUP_TASKCODEMASTER(taskcode_id,taskcode_description,taskcode_tgroup_id, taskgroup_notificationtype_id, taskgroup_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[arr_taskCode objectAtIndex:i],[arr_taskKurztext objectAtIndex:i],[arr_ComponentId objectAtIndex:i],str_CauseCodeNotifId,str_CatalogProfileId];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoNotifObjectCodes :(NSArray *)arr_objectCode :(NSArray *)arr_objectKurztext :(NSArray *)arr_ComponentId :(NSString *)str_CauseCodeNotifId :(NSString *)str_CatalogProfileId{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_OGROUP_OBJECTCODEMASTER"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_objectCode count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO NOTIFICATION_OGROUP_OBJECTCODEMASTER(objectcode_id,objectcode_description,objectcode_ogroup_id, objectgroup_notificationtype_id, objectgroup_catalogprofile_id) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[arr_objectCode objectAtIndex:i],[arr_objectKurztext objectAtIndex:i],[arr_ComponentId objectAtIndex:i],str_CauseCodeNotifId,str_CatalogProfileId];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoOrderType:(NSArray *)orderTypeArray{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from ORDERTYPEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[orderTypeArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO ORDERTYPEMASTER(ordertype_id,ordertype_description) VALUES (\"%@\",\"%@\")",[[orderTypeArray objectAtIndex:i] objectForKey:@"Auart"],[[orderTypeArray objectAtIndex:i] objectForKey:@"Txt"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//- (BOOL)insertintoOrderType :(NSArray *)arr_Auart :(NSArray *)arr_Txt{
//
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    [queryString appendFormat:@"delete from ORDERTYPEMASTER"];
//
//    if ([self set_query:queryString]) {
//
//        if (![self run_Queries_NODATA]) {
//            return NO;
//        }
//    }
//
//    for (int i =0; i<[arr_Auart count]; i++) {
//
//        [queryString setString:@""];
//
//        [queryString appendFormat:@"INSERT INTO ORDERTYPEMASTER(ordertype_id,ordertype_description) VALUES (\"%@\",\"%@\")",[arr_Auart objectAtIndex:i],[arr_Txt objectAtIndex:i]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}


- (BOOL)insertintoAccIndicator:(NSArray *)accoutingIndicator{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from ACCINDICATORMASTER"];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[accoutingIndicator count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO ACCINDICATORMASTER(accinidcator_id,accindicator_description) VALUES (\"%@\",\"%@\")",[[accoutingIndicator objectAtIndex:i] objectForKey:@"Bemot"],[[accoutingIndicator objectAtIndex:i] objectForKey:@"BemotTxt"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//
//- (BOOL)insertintoAccIndicator :(NSArray *)arr_Bemot :(NSArray *)arr_BemotTxt{
//
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    [queryString appendFormat:@"delete from ACCINDICATORMASTER"];
//
//    if ([self set_query:queryString]) {
//
//        if (![self run_Queries_NODATA]) {
//            return NO;
//        }
//    }
//
//    for (int i =0; i<[arr_Bemot count]; i++) {
//
//        [queryString setString:@""];
//
//        [queryString appendFormat:@"INSERT INTO ACCINDICATORMASTER(accinidcator_id,accindicator_description) VALUES (\"%@\",\"%@\")",[arr_Bemot objectAtIndex:i],[arr_BemotTxt objectAtIndex:i]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}

- (BOOL)insertintoPlantsMaster :(NSArray *)arr_Werks{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from PLANTSMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_Werks count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO PLANTSMASTER(plant_id,plant_text) VALUES (\"%@\",\"%@\")",[[arr_Werks objectAtIndex:i] objectForKey:@"Werks"],[[arr_Werks objectAtIndex:i] objectForKey:@"Name1"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoStorageLocationMaster:(NSArray *)arr_Lgort{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from STORAGELOCATIONMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_Lgort count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO STORAGELOCATIONMASTER(plant_id,plant_text,storage_id,storageloc_text) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_Lgort objectAtIndex:i] objectForKey:@"Werks"],[[arr_Lgort objectAtIndex:i] objectForKey:@"Name1"],[[arr_Lgort objectAtIndex:i] objectForKey:@"Lgort"],[[arr_Lgort objectAtIndex:i] objectForKey:@"Lgobe"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}


- (BOOL)insertintoGetUnits:(NSArray *)unitTypeArray{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from GETUNITTYPEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[unitTypeArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO GETUNITTYPEMASTER(unittype_id,unittype_description) VALUES (\"%@\",\"%@\")",[[unitTypeArray objectAtIndex:i] objectForKey:@"Meins"],[[unitTypeArray objectAtIndex:i] objectForKey:@"UnitType"]];
        
        if ([self set_query:queryString]) {
            
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//
//- (BOOL)insertintoGetUnits :(NSArray *)arr_Meins :(NSArray *)arr_UnitType{
//
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    [queryString appendFormat:@"delete from GETUNITTYPEMASTER"];
//
//    if ([self set_query:queryString]) {
//
//        if (![self run_Queries_NODATA]) {
//            return NO;
//        }
//    }
//
//    for (int i =0; i<[arr_Meins count]; i++) {
//
//        [queryString setString:@""];
//
//        [queryString appendFormat:@"INSERT INTO GETUNITTYPEMASTER(unittype_id,unittype_description) VALUES (\"%@\",\"%@\")",[[arr_UnitType objectAtIndex:i] objectForKey:@"Meins"],[[arr_Meins objectAtIndex:i] objectForKey:@"UnitType"]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}

- (BOOL)insertintoListOfMovementTypes:(NSArray *)movementTypeArray{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from MOVEMENTTYPESMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[movementTypeArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO MOVEMENTTYPESMASTER(Btext,Bwart) VALUES (\"%@\",\"%@\")",[[movementTypeArray objectAtIndex:i] objectForKey:@"Btext"],[[movementTypeArray objectAtIndex:i] objectForKey:@"Bwart"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

//
//- (BOOL)insertintoListOfMovementTypes :(NSArray *)arr_Btext :(NSArray *)arr_Bwart{
//
//    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
//
//    [queryString appendFormat:@"delete from MOVEMENTTYPESMASTER"];
//
//    if ([self set_query:queryString]) {
//
//        if (![self run_Queries_NODATA]) {
//            return NO;
//        }
//    }
//
//    for (int i =0; i<[arr_Btext count]; i++) {
//
//        [queryString setString:@""];
//
//        [queryString appendFormat:@"INSERT INTO MOVEMENTTYPESMASTER(Btext,Bwart) VALUES (\"%@\",\"%@\")",[[arr_Btext objectAtIndex:i] objectForKey:@"Btext"],[[arr_Bwart objectAtIndex:i] objectForKey:@"Bwart"]];
//
//        if ([self set_query:queryString]) {
//            if (![self run_Queries_NODATA]) {
//                return NO;
//            }
//            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
//        }
//    }
//
//    return TRUE;
//}

- (BOOL)insertintoListOfWorkCenter :(NSArray *)arr_WorkCenterData{
    
 //   CREATE TABLE "WORKCENTERMASTER" ("plant_id" VARCHAR, "plant_text" VARCHAR, "workcenter_id" VARCHAR, "workcenter_text" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from WORKCENTERMASTER"];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    for (int i =0; i<[arr_WorkCenterData count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO WORKCENTERMASTER(plant_id,plant_text,workcenter_id,workcenter_text) VALUES (\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_WorkCenterData objectAtIndex:i] objectForKey:@"Werks"],[[arr_WorkCenterData objectAtIndex:i] objectForKey:@"Name1"],[[arr_WorkCenterData objectAtIndex:i] objectForKey:@"Arbpl"],[[arr_WorkCenterData objectAtIndex:i] objectForKey:@"Ktext"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoFuncLocFromCostCenter :(NSArray *)arr_Tplnr :(NSArray *)arr_Pltxt :(NSArray *)arr_Arbpl :(NSArray *)arr_Werks :(NSString *)str_CostCenter{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from FuncLocFromCostCenter"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_Tplnr count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat: @"INSERT INTO FuncLocFromCostCenter(Tplnr,Pltxt,Arbpl,Werks,IvCcenter) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[arr_Tplnr objectAtIndex:i],[arr_Pltxt objectAtIndex:i],[arr_Arbpl objectAtIndex:i],[arr_Werks objectAtIndex:i],str_CostCenter];
        
        if ([self set_query:queryString]) {
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoEuipNoFromCostCenter :(NSArray *)arr_Arbpl :(NSArray *)arr_Eqktx :(NSArray *)arr_Equnr :(NSArray *)arr_Werks :(NSArray *)arr_Spras :(NSArray *)arr_Pltxt :(NSArray *)arr_Tplnr :(NSString *)str_CostCenter{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from EquipFromCostCenter"];
    
    if ([self set_query:queryString]) {
        
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    for (int i =0; i<[arr_Equnr count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"INSERT INTO EquipFromCostCenter(Arbpl,Eqktx,Equnr,Iwerk,Pltxt,Spras,Tplnr,IvCcenter) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[arr_Arbpl objectAtIndex:i],[arr_Eqktx objectAtIndex:i],[arr_Equnr objectAtIndex:i],[arr_Werks objectAtIndex:i],[arr_Pltxt objectAtIndex:i],[arr_Spras objectAtIndex:i],[arr_Tplnr objectAtIndex:i],str_CostCenter];
        
        if ([self set_query:queryString]) {
            
            if (![self run_Queries_NODATA]) {
                return NO;
            }
            
            [ConsoleLogHandler showLog:[NSString stringWithFormat:@"transaction inserted %i",i]];
        }
    }
    
    return TRUE;
}

- (BOOL)insertintoBOMComponents :(NSArray *)arr_Header :(NSArray *)arr_Transaction{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    for (int i =0; i<[arr_Header count]; i++) {
        
        if (queryString.length) {
            [queryString appendFormat:@"; /n"];
        }
        
        [queryString appendFormat:@"INSERT INTO BOMLOOKUP_HEADER(Bom,BomDesc,Plant) VALUES (\"%@\",\"%@\",\"%@\")",[[arr_Header objectAtIndex:i] objectForKey:@"Bom"],[[[arr_Header objectAtIndex:i] objectForKey:@"BomDesc"] stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding],[[arr_Header objectAtIndex:i] objectForKey:@"Plant"]];
    }
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    [queryString setString:@""];
    
    for (int j =0; j<[arr_Transaction count]; j++) {
        
        if (queryString.length) {
            [queryString appendFormat:@"; /n"];
        }
        
        [queryString appendFormat:@"INSERT INTO BOMLOOKUP_TRANSACTION(Bom,BomComponent,CompText,Quantity,Unit,Stlkz) VALUES (\"%@\",\"%@\",\"%@\",\"%@\",\"%@\",\"%@\")",[[arr_Transaction objectAtIndex:j] objectForKey:@"Bom"],[[arr_Transaction objectAtIndex:j] objectForKey:@"BomComponent"],[[[arr_Header objectAtIndex:j] objectForKey:@"CompText"] stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding],[[arr_Transaction objectAtIndex:j] objectForKey:@"Quantity"],[[arr_Transaction objectAtIndex:j] objectForKey:@"Unit"],[[arr_Transaction objectAtIndex:j] objectForKey:@"Stlkz"]];
    }
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    return TRUE;
}

#pragma mark-
#pragma mark- Confirmation and Collective Confirmation

- (NSMutableArray *)getAllOperationsForUUID:(NSString *)uuid
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from ORDER_TRANSACTION where ordert_header_id = '%@' ORDER BY ordert_vornr_operation ASC",uuid];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

//collective

-(BOOL)insertOrderCollectiveDetails:(NSMutableDictionary *) collectiveConfirmationDetails  withMeasurementDocuments:(NSMutableArray *)measurementDocsDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    //    CREATE TABLE "ORDER_COLLECTIVECONFIRMATION" ("ordercc_id" VARCHAR, "ordercc_object_id" VARCHAR, "ordercc_reportedby" VARCHAR, "ordercc_confirmationtext" VARCHAR, "ordercc_learr" VARCHAR, "ordercc_bemot" VARCHAR, "ordercc_leknw" VARCHAR, "ordercc_grund" VARCHAR, "ordercc_aeuru" VARCHAR, "ordercc_rsnum" VARCHAR, "ordercc_sdate" VARCHAR, "ordercc_edate" VARCHAR, "ordercc_status" VARCHAR, "ordercc_ordertype_id" VARCHAR, "ordercc_user02" VARCHAR)
    
    
    //For Order Collective Confirmation.
    
    [queryString appendFormat:@"delete from ORDER_COLLECTIVECONFIRMATION where ordercc_id = '%@' ",[collectiveConfirmationDetails objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"insert into ORDER_COLLECTIVECONFIRMATION values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[collectiveConfirmationDetails objectForKey:@"ID"],[collectiveConfirmationDetails objectForKey:@"OBJECTID"],[collectiveConfirmationDetails objectForKey:@"REPORTEDBY"],[collectiveConfirmationDetails objectForKey:@"CONFTEXT"],[collectiveConfirmationDetails objectForKey:@"ACTIVITYID"],[collectiveConfirmationDetails objectForKey:@"ACCINCID"],[collectiveConfirmationDetails objectForKey:@"CONFIRMREASON"],[collectiveConfirmationDetails objectForKey:@"REMAINWORK"],[collectiveConfirmationDetails objectForKey:@"AEURU"],[collectiveConfirmationDetails objectForKey:@"RSNUM"],[collectiveConfirmationDetails objectForKey:@"SDATE"],[collectiveConfirmationDetails objectForKey:@"EDATE"],[collectiveConfirmationDetails objectForKey:@"OSTATUS"],@"",@""];
    
    if ([self set_query:queryString]) {
        
        if ([self run_Queries_NODATA]) {
            
            NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
            [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
            NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
            
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Collective Confirm','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],[collectiveConfirmationDetails objectForKey:@"REPORTEDBY"],[collectiveConfirmationDetails objectForKey:@"ID"],[collectiveConfirmationDetails objectForKey:@"OBJECTID"]];
            
            if ([self set_query:queryString]) {
                
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    
    //for  measurement Documents
    for (int i=0; i<[measurementDocsDetails count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into ORDER_MEASUREMENT_DOCUMENTS values ('%@','%@','%@','%@','%@','%@','%@','%@','%@','A')",[[measurementDocsDetails objectAtIndex:i] objectAtIndex:0],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:1],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:2],[[measurementDocsDetails objectAtIndex:3] objectAtIndex:4],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:5],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:6],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:7],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:8],[[measurementDocsDetails objectAtIndex:i] objectAtIndex:9]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return YES;
}

//add MDocs
-(NSMutableArray *)insertMeasurementDocs:(NSDictionary *)MdocsDetails{
    
   //CREATE TABLE "ORDER_MEASUREMENT_DOCUMENTS" ("orderm_header_id" VARCHAR, "orderm_qmnum" VARCHAR, "orderm_aufnr" VARCHAR, "orderm_vornr" VARCHAR, "orderm_mdoc" VARCHAR, "orderm_point" VARCHAR, "orderm_mpobj" VARCHAR,"orderm_mpobt" VARCHAR, "orderm_psort" VARCHAR, "orderm_pttxt" VARCHAR, "orderm_atinn" VARCHAR, "orderm_idate" VARCHAR, "orderm_itime" VARCHAR, "orderm_mdtxt" VARCHAR, "orderm_readr" VARCHAR, "orderm_atbez" VARCHAR, "orderm_msehi" VARCHAR, "orderm_msehl" VARCHAR, "orderm_readc" VARCHAR, "orderm_desic" VARCHAR, "orderm_prest" VARCHAR, "orderm_docaf" VARCHAR, "orderm_action" VARCHAR)
    
    
//    [addMdocsDictionary setObject:@"" forKey:@"MVALUATION"];
//
//    if (resultString.length) {
//
//        [addMdocsDictionary setObject:[resultString copy] forKey:@"RESULT"];
//
//    }
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"insert into ORDER_MEASUREMENT_DOCUMENTS(orderm_header_id, orderm_qmnum, orderm_aufnr, orderm_vornr, orderm_mdoc, orderm_point, orderm_mpobj, orderm_mpobt, orderm_psort, orderm_pttxt, orderm_atinn, orderm_idate,orderm_itime, orderm_mdtxt, orderm_readr, orderm_atbez,  orderm_msehi, orderm_msehl, orderm_readc, orderm_desic, orderm_prest, orderm_docaf, orderm_action) values('%@','','','','','%@','','','','%@','','%@','%@','','%@','%@','','','','','','','A')",[MdocsDetails objectForKey:@"ID"],[MdocsDetails objectForKey:@"MEASUREMENTPOINTNAME"],[MdocsDetails objectForKey:@"MEASUREMENTDESCRIPTION"],[MdocsDetails objectForKey:@"MEASUREMENTDATE"],[MdocsDetails objectForKey:@"MEASUREMENTTIME"],[MdocsDetails objectForKey:@"MVALUATION"],[MdocsDetails objectForKey:@"MEASUREMENTREADING"]];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)fetchMeasurementDocumentsForUUID:(NSString *)uuid{
    
    NSMutableArray *MDocsDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT distinct orderm_header_id, orderm_qmnum, orderm_aufnr, orderm_vornr, orderm_mdoc, orderm_point, orderm_mpobj, orderm_mpobt, orderm_psort, orderm_pttxt, orderm_atinn, orderm_idate,orderm_itime, orderm_mdtxt, orderm_readr, orderm_atbez,  orderm_msehi, orderm_msehl, orderm_readc, orderm_desic, orderm_prest, orderm_docaf, orderm_action from ORDER_MEASUREMENT_DOCUMENTS where orderm_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        [MDocsDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return MDocsDetails;
}

-(NSMutableArray *)fetchOrderMDocumentsForUUID:(NSString *)aufnrId{
    
    NSMutableArray *MDocsDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT distinct orderm_header_id, orderm_qmnum, orderm_aufnr, orderm_vornr, orderm_mdoc, orderm_point, orderm_mpobj, orderm_mpobt, orderm_psort, orderm_pttxt, orderm_atinn, orderm_idate,orderm_itime, orderm_mdtxt, orderm_readr, orderm_atbez,  orderm_msehi, orderm_msehl, orderm_readc, orderm_desic, orderm_prest, orderm_docaf, orderm_action from ORDER_MEASUREMENT_DOCUMENTS where orderm_aufnr = '%@'",aufnrId];
    
    if ([self set_query:queryString]) {
        [MDocsDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return MDocsDetails;
}

/*
 -(NSMutableArray *)fetchMeasurementDocumentsForUUID:(NSString *)uuid{
 
 NSMutableArray *taskDetails = [NSMutableArray new];
 
 NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
 
 [queryString appendFormat:@"SELECT * from ORDER_MEASUREMENT_DOCUMENTS_COPY where orderm_header_id = '%@'",uuid];
 
 if ([self set_query:queryString]) {
 [taskDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
 }
 
 return taskDetails;
 }*/

-(void)deleteMeasurementDocuments{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_MEASUREMENT_DOCUMENTS_COPY"];
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
}

-(BOOL)deleteSyncLogs{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from SyncLog where Status !='New'"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deletesynclog:(NSMutableArray *)getdeleteObjectIds{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    for (int i=0; i<[getdeleteObjectIds count]; i++) {
        [queryString setString:@""];
        [queryString appendFormat:@"delete from SyncLog where UUID = '%@' and Date ='%@' and Time ='%@' ",[[getdeleteObjectIds objectAtIndex:i] objectAtIndex:7],[[getdeleteObjectIds objectAtIndex:i] objectAtIndex:0],[[getdeleteObjectIds objectAtIndex:i] objectAtIndex:1]];
        [self set_query:queryString];
        if (![self run_Queries_NODATA]) {
            NSLog(@"Cannot delete");
        }
        
    }
    return YES;
}


//list of components

- (BOOL)deleteComponentsForMaterial:(NSMutableDictionary *)componentsDictionary
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from COMPONENTSMASTER where plant_id like '%@'",[NSString stringWithFormat:@"%@",[[componentsDictionary objectForKey:@"PLANT"] stringByReplacingOccurrencesOfString:@"*" withString:@"%"]]];
    
    if([[componentsDictionary objectForKey:@"STORAGELOCATION"] length]){
        [queryString appendFormat:@" and storagelocation_id like '%@''",[NSString stringWithFormat:@"%@",[[componentsDictionary objectForKey:@"STORAGELOCATION"] stringByReplacingOccurrencesOfString:@"*" withString:@"%"]]];
    }
    if ([[componentsDictionary objectForKey:@"MATERIALDESCRIPTION"] length]){
        [queryString appendFormat:@" and material_name like '%@'",[NSString stringWithFormat:@"%@",[[componentsDictionary objectForKey:@"MATERIALDESCRIPTION"] stringByReplacingOccurrencesOfString:@"*" withString:@"%"]]];
    }
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    return YES;
}

-(BOOL)deleteCustomFields{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from CUSTOMFIELDSMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteGeoTagFields{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from GEOTAG_HEADER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNotificationDetails:(NSString *)headerID{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_CUSTOMFIELDS where notificationh_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER_EQUIPMENTS_HISTORY where notificationh_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION_CUSTOMFIELDS where notificationt_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS where notificationa_id ='%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteOrderDetails:(NSString *)headerID{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_HEADER_PERMIT where orderp_header_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_TRANSACTION_CUSTOMFIELDS where ordert_header_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from ORDER_HEADER_EQUIPMENTS_HISTORY where orderh_id = '%@'",headerID];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

//Stock OverView
- (BOOL)deleteStockOverView:(NSString *)descriptionString searID:(NSString *)idString :(NSMutableDictionary *)plantDictionary
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    if (idString.length) {
        
        [queryString appendFormat:@"delete from STOCKOVERVIEWMASTER where Matnr = '%@'",idString];
    }
    else
    {
        [queryString appendFormat:@"delete from STOCKOVERVIEWMASTER"];
    }
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    return YES;
}

- (NSMutableArray *)getSyncLogsDetails:(NSString *)userName
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select * from SyncLog WHERE User = '%@' order by Date DESC,Time DESC",userName];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDICTIONARY];
    }
    return [NSMutableArray array];
}

- (BOOL)completeNotificationForUUID:(NSString *)notificationH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set nh_upadated_Date = '%@' where notificationh_id = '%@'",[getDate stringFromDate:[NSDate date]],notificationH_ID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Complete','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,notificationH_ID,objectID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    
    return NO;
}

- (BOOL)deleteRecordinNotificationForUUID:(NSString *)notificationH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id = '%@'",notificationH_ID];
    [self set_query:queryString];
    if ([self run_Queries_NODATA]) {
        [queryString setString:@""];
        [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_header_id = '%@'",notificationH_ID];
        [self set_query:queryString];
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"delete from NOTIFICATION_TASKS where notificationt_header_id = '%@'",notificationH_ID];
            [self set_query:queryString];
            if ([self run_Queries_NODATA]) {
                [queryString setString:@""];
                [queryString appendFormat:@"delete from NOTIFICATION_ATTACHMENTS where notificationa_header_id = '%@'",notificationH_ID];
                [self set_query:queryString];
                if ([self run_Queries_NODATA]) {
                    [queryString setString:@""];
                    [queryString appendFormat:@"delete from SyncLog where UUID = '%@'",notificationH_ID];
                    if ([self set_query:queryString]) {
                        if ([self run_Queries_NODATA]) {
                            return YES;
                        }
                    }
                }
            }
        }
    }
    else{
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

- (BOOL)deleteRecordinOrderForUUID:(NSString *)orderH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from ORDER_HEADER where orderh_id = '%@'",orderH_ID];
    [self set_query:queryString];
    if ([self run_Queries_NODATA]) {
        [queryString setString:@""];
        [queryString appendFormat:@"delete from ORDER_TRANSACTION where ordert_header_id = '%@'",orderH_ID];
        [self set_query:queryString];
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"delete from ORDER_ATTACHMENTS where ordera_header_id = '%@'",orderH_ID];
            [self set_query:queryString];
            if ([self run_Queries_NODATA]) {
                [queryString setString:@""];
                [queryString appendFormat:@"delete from ORDER_HEADER_CUSTOMFIELDS where orderh_id = '%@'",orderH_ID];
                if ([self set_query:queryString]) {
                    if ([self run_Queries_NODATA]) {
                        [queryString setString:@""];
                        [queryString appendFormat:@"delete from SyncLog where UUID = '%@'",orderH_ID];
                        if ([self set_query:queryString]) {
                            if ([self run_Queries_NODATA]) {
                                return YES;
                            }
                        }
                        return YES;
                    }
                }
            }
        }
    }
    else{
        NSLog(@"Cannot delete");
    }
    
    return YES;
}


- (BOOL)cancelNotificationForUUID:(NSString *)notificationH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set nh_upadated_Date = '%@' where notificationh_id = '%@'",[getDate stringFromDate:[NSDate date]],notificationH_ID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,notificationH_ID,objectID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    return NO;
}

- (BOOL)cancelOrderForUUID:(NSString *)orderH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set oh_upadated_Date = '%@',oh_sync_status = 'Cancel' where orderh_id = '%@'",[getDate stringFromDate:[NSDate date]],orderH_ID];
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Cancel','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,orderH_ID,objectID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    return NO;
}


- (BOOL)releaseNotificationForUUID:(NSString *)notificationH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set nh_upadated_Date = '%@' where notificationh_id = '%@'",[getDate stringFromDate:[NSDate date]],notificationH_ID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Release','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,notificationH_ID,objectID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    return NO;
}

- (BOOL)postPoneNotificationForUUID:(NSString *)notificationH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set nh_upadated_Date = '%@' where notificationh_id = '%@'",[getDate stringFromDate:[NSDate date]],notificationH_ID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Notification','Postpone','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,notificationH_ID,objectID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    return NO;
}

- (BOOL)releaseOrderForUUID:(NSString *)orderH_ID ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set oh_upadated_Date = '%@',oh_sync_status = 'Release' where orderh_id = '%@'",[getDate stringFromDate:[NSDate date]],orderH_ID];
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Release','%@','New','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,orderH_ID,objectID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    return NO;
}


- (BOOL)confirmOrderForUUID:(NSDictionary *)orderObjects ObjectcID:(NSString *)objectID ReportedBY:(NSString *)reportedPerson
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set orderh_status = 'PCNF' where orderh_id = '%@'",[orderObjects objectForKey:@"ID"]];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"select ordert_vornr_operation FROM ORDER_TRANSACTION where ordert_status = 'New' and ordert_header_id = '%@'",[orderObjects objectForKey:@"ID"]];
            NSMutableArray *tempTransactionStatusDetails = [NSMutableArray new];
            if ([self set_query:queryString]) {
                [tempTransactionStatusDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
            }
            [queryString setString:@""];
            [queryString appendFormat:@"update ORDER_TRANSACTION set ordert_aueru = '%@', ordert_status = ''  where ordert_header_id = '%@' and ordert_vornr_operation = '%@'",[orderObjects objectForKey:@"OPSTATUS"],[orderObjects objectForKey:@"ID"],[[tempTransactionStatusDetails objectAtIndex:0] objectAtIndex:0]];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    [queryString setString:@""];
                    [queryString appendFormat:@"insert into SyncLog(Date,Time,DocumentCategory,ActivityType,User,Status,UUID,ObjectID) values('%@','%@','Order','Confirm','%@','Complete','%@','%@')",[dateTimeArray firstObject],[dateTimeArray lastObject],reportedPerson,[orderObjects objectForKey:@"ID"],objectID];
                    if ([self set_query:queryString]) {
                        if ([self run_Queries_NODATA]) {
                            return YES;
                        }
                    }
                }
            }
        }
    }
    return NO;
}

- (void)refreshCoreDataContext;
{
    
}

- (BOOL)deleteCompletedTasksForRefresh
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select uuid from SyncLog where Status = 'New'"];
    NSMutableArray *unCompletedUUID;
    if ([self set_query:queryString]) {
        unCompletedUUID = [self run_Queries_WITHDATA_singleArray];
    }
    if (unCompletedUUID.count) {
        [queryString setString:@""];
        NSMutableString *uuidsString = [[NSMutableString alloc] initWithString:@"'"];
        [uuidsString appendString:[unCompletedUUID componentsJoinedByString:@"','"]];
        [uuidsString appendString:@"'"];
        [queryString appendFormat:@"delete from NOTIFICATION_HEADER where notificationh_id not in (%@)",uuidsString];
        if ([self set_query:queryString]) {
            if ([self run_Queries_NODATA]) {
                [queryString setString:@""];
                [queryString appendFormat:@"delete from NOTIFICATION_TRANSACTION where notificationt_header_id not in (%@)",uuidsString];
                if ([self set_query:queryString]) {
                    if ([self run_Queries_NODATA]) {
                        return YES;
                    }
                }
                return YES;
            }
        }
    }
    return NO;
}

- (void)importLocalDataIntoCoreData
{
    NSFetchRequest *request = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    request.fetchLimit = 10;
    NSSortDescriptor *descriptior1 = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
    [request setSortDescriptors:[NSArray arrayWithObject:descriptior1]];
    NSError *fetchError;
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    NSArray *resultArray = [[delegate.coreDataControlObject context] executeFetchRequest:request error:&fetchError];
    if (fetchError) {
        NSLog(@"Eror : %@",fetchError.description);
    }
    else
    {
        NSDictionary *functioalLocationDictionary,*equipmentDictionary;
        NSArray *functionalLocationArray,*equipmentArray;
        if (![resultArray count]) {
            NSDictionary *functionDictionary = [NSDictionary dictionaryWithXMLFile:[[NSBundle mainBundle] pathForResource:@"ListOfEquipments" ofType:nil]];
            functionDictionary = [functionDictionary objectForKey:@"env:Body"];
            if (functionDictionary.count) {
                functionDictionary = [functionDictionary objectForKey:@"n0:_-emt_-pmSearchFlocEquipResponse"];
                if (functionDictionary.count) {
                    functionDictionary = [functionDictionary objectForKey:@"EtFuncEquip"];
                    if (functionDictionary.count) {
                        functionalLocationArray = [functionDictionary objectForKey:@"item"];
                        for (int i=0; i<[functionalLocationArray count]; i++) {
                            FunctionalLocation *location = [NSEntityDescription insertNewObjectForEntityForName:@"FunctionalLocation" inManagedObjectContext:delegate.coreDataControlObject.context];
                            functioalLocationDictionary = [functionalLocationArray objectAtIndex:i];
                            location.locationid = [functioalLocationDictionary objectForKey:@"Tplnr"];
                            location.locationName = [functioalLocationDictionary objectForKey:@"Pltxt"];
                            location.plantName = [functioalLocationDictionary objectForKey:@"Werks"];
                            location.workStation = [functioalLocationDictionary objectForKey:@"Arbpl"];
                            location.costCenter = [functioalLocationDictionary objectForKey:@"Kostl"];
                            
                            if ([functioalLocationDictionary objectForKey:@"Equip"]) {
                                if ([[functioalLocationDictionary objectForKey:@"Equip"] objectForKey:@"item"]) {
                                    id equipmnetDetails = [[functioalLocationDictionary objectForKey:@"Equip"] objectForKey:@"item"];
                                    if ([equipmnetDetails isKindOfClass:[NSArray class]]) {
                                        equipmentArray = equipmnetDetails;
                                        for (int j=0; j<[equipmentArray count]; j++) {
                                            equipmentDictionary = [equipmentArray objectAtIndex:j];
                                            Equipment *equipment = [NSEntityDescription insertNewObjectForEntityForName:@"Equipment" inManagedObjectContext:delegate.coreDataControlObject.context];
                                            equipment.equipmentID = [equipmentDictionary objectForKey:@"Equnr"];
                                            equipment.equipmentName = [equipmentDictionary objectForKey:@"Eqktx"];
                                            equipment.catalogProfileID = [equipmentDictionary objectForKey:@"Rbnr"];
                                            equipment.location = location;
                                        }
                                    }
                                    else if ([equipmnetDetails isKindOfClass:[NSDictionary class]])
                                    {
                                        equipmentDictionary = equipmnetDetails;
                                        Equipment *equipment = [NSEntityDescription insertNewObjectForEntityForName:@"Equipment" inManagedObjectContext:delegate.coreDataControlObject.context];
                                        equipment.equipmentID = [equipmentDictionary objectForKey:@"Equnr"];
                                        equipment.equipmentName = [equipmentDictionary objectForKey:@"Eqktx"];
                                        equipment.catalogProfileID = [equipmentDictionary objectForKey:@"Rbnr"];
                                        equipment.location = location;
                                    }
                                }
                            }
                            if (!(i%100)) {
                                [delegate.coreDataControlObject saveContext];
                                [delegate.coreDataControlObject.context reset];
                            }
                            //   NSLog(@"%i) Function id %@ inserted equipment %lu inserted",i,location.locationid,(unsigned long)location.equipments.count);
                        }
                        [delegate.coreDataControlObject saveContext];
                        [delegate.coreDataControlObject.context reset];
                    }
                }
            }
            functionDictionary = nil;
            NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
            [requestFlocation setIncludesSubentities:NO];
            NSError *error;
            int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestFlocation error:&error];
            NSLog(@"Total functional location inserted count = %i",count);
        }
    }
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    [requestFlocation setIncludesSubentities:NO];
    NSError *error;
    int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestFlocation error:&error];
    NSLog(@"Total equipment inserted count = %i",count);
}

- (NSArray *)getfunctionalLocationsforCostCenter:(NSString *)costCenterID withMatchString:(NSString *)searchString
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [delegate.coreDataControlObject.context reset];
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    if (costCenterID.length && searchString.length) {
        [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"(costCenter like[cd] %@) AND (locationName like[cd] %@*)",costCenterID,searchString]];
    }
    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
    [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
    NSError *error;
    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
    if (error) {
        NSLog(@"%@",error.description);
    }
    else
    {
        return resultArray;
    }
    
    return [NSArray array];
}

- (NSArray *)getEquipmentsForCostCenter:(NSString *)costCenterID withMatchString:(NSString *)searchString{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *plantPredicate,*searchPredicate;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *functionLocationRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    NSSortDescriptor *orderDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"descripton" ascending:YES];
    [functionLocationRequest setSortDescriptors:[NSArray arrayWithObject:orderDescriptor]];
    if (costCenterID.length) {
        plantPredicate = [NSPredicate predicateWithFormat:@"location.costCenter like[cd] %@",costCenterID];
    }
    if (searchString.length) {
        searchPredicate = [NSPredicate predicateWithFormat:@"descripton like[cd] %@",[searchString stringByAppendingString:@"*"]];
    }
    if (searchPredicate && plantPredicate) {
        NSCompoundPredicate *compPredicate = [NSCompoundPredicate andPredicateWithSubpredicates:@[plantPredicate,searchPredicate]];
        
        [functionLocationRequest setPredicate:compPredicate];
        //[dataArray addObjectsFromArray:
    }
    else if(plantPredicate)
    {
        [functionLocationRequest setPredicate:plantPredicate];
    }
    else
    {
        [functionLocationRequest setPredicate:searchPredicate];
    }
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:functionLocationRequest error:&error];
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    [dataArray addObjectsFromArray:tempArray];
    return dataArray;
}

- (NSMutableArray *)getFunctionalLocationForCostCenter:(NSString *)costCenter searchString:(NSString *)searchString
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *plantPredicate,*searchPredicate;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *functionLocationRequest = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    NSSortDescriptor *orderDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
    [functionLocationRequest setSortDescriptors:[NSArray arrayWithObject:orderDescriptor]];
    if (costCenter.length) {
        plantPredicate = [NSPredicate predicateWithFormat:@"costCenter like[cd] %@",costCenter];
    }
    if (searchString.length) {
        searchPredicate = [NSPredicate predicateWithFormat:@"locationName like[cd] %@",[searchString stringByAppendingString:@"*"]];
    }
    if (searchPredicate && plantPredicate) {
        NSCompoundPredicate *compPredicate = [NSCompoundPredicate andPredicateWithSubpredicates:@[plantPredicate,searchPredicate]];
        
        [functionLocationRequest setPredicate:compPredicate];
        //[dataArray addObjectsFromArray:
    }
    else if(plantPredicate)
    {
        [functionLocationRequest setPredicate:plantPredicate];
    }
    else
    {
        [functionLocationRequest setPredicate:searchPredicate];
    }
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:functionLocationRequest error:&error];
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    [dataArray addObjectsFromArray:tempArray];
    return dataArray;
}

- (NSArray *)getPlantNames
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [delegate.coreDataControlObject.context reset];
    NSFetchRequest *functionLocationRequest = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    [functionLocationRequest setResultType:NSDictionaryResultType];
    [functionLocationRequest setReturnsDistinctResults:YES];
    [functionLocationRequest setPropertiesToFetch:@[@"plantName"]];
    NSError *error;
    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:functionLocationRequest error:&error];
    if (error) {
        NSLog(@"%@",error.description);
    }
    else
    {
        NSMutableArray *plantArray = [[NSMutableArray alloc] init];
        for (int i=0; i<[resultArray count]; i++) {
            [plantArray addObject:[[resultArray objectAtIndex:i] allValues]];
        }
        return plantArray;
    }
    return [NSArray array];
}

- (NSMutableArray *)testEntityData:(NSString *)incidentId{
    
    AppDelegate   *appdelgate = (AppDelegate *)[[UIApplication
                                                 sharedApplication]delegate];
    
    NSManagedObjectContext *context = appdelgate.coreDataControlObject.context;
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"ETWCMCCO"];
    
    [materialsRequest setResultType:NSDictionaryResultType];
    
    NSError *error = nil;
    NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
    if (error) {
        [NSException raise:@"no comments found" format:@"%@", [error localizedDescription]];
    }
    if (objs.count > 0) {
        // there is a Matnr with same id exsist. Use update method
        
        [dataArray addObjectsFromArray:objs];
        
    }else {
        
    }
    
    return dataArray;
    
}

- (void)insertFuncLocEquimentsToCoreDataFromArray:(NSArray *)functionalLocationArray{
    
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    NSDictionary *functioalLocationDictionary,*equipmentDictionary;
    NSArray *equipmentArray;
    FunctionalLocation *location;
    
    for (int i=0; i<[functionalLocationArray count]; i++) {
        
        location = [NSEntityDescription insertNewObjectForEntityForName:@"FunctionalLocation" inManagedObjectContext:delegate.coreDataControlObject.context];
        functioalLocationDictionary = [functionalLocationArray objectAtIndex:i];
        location.locationid = [functioalLocationDictionary objectForKey:@"Tplnr"];
        location.locationName = [functioalLocationDictionary objectForKey:@"Pltxt"];
        location.plantName = [functioalLocationDictionary objectForKey:@"Werks"];
        location.workStation = [functioalLocationDictionary objectForKey:@"Arbpl"];
        location.costCenter = [functioalLocationDictionary objectForKey:@"Kostl"];
        location.fltyp = [functioalLocationDictionary objectForKey:@"Fltyp"];
        location.plannerGroup = [functioalLocationDictionary objectForKey:@"Ingrp"];
        location.tplma = [functioalLocationDictionary objectForKey:@"Tplma"];
        
        if ([functioalLocationDictionary objectForKey:@"Equip"]) {
            
            if ([[functioalLocationDictionary objectForKey:@"Equip"] objectForKey:@"item"]) {
                
                id equipmnetDetails = [[functioalLocationDictionary objectForKey:@"Equip"] objectForKey:@"item"];
                
                if ([equipmnetDetails isKindOfClass:[NSArray class]]) {
                    
                    equipmentArray = equipmnetDetails;
                    
                    for (int j=0; j<[equipmentArray count]; j++) {
                        
                        equipmentDictionary = [equipmentArray objectAtIndex:j];
                        
                        Equipment *equipment = [NSEntityDescription insertNewObjectForEntityForName:@"Equipment" inManagedObjectContext:delegate.coreDataControlObject.context];
                        
                        equipment.tplnr = [functioalLocationDictionary objectForKey:@"Tplnr"];
                        equipment.pltxt = [functioalLocationDictionary objectForKey:@"Pltxt"];
                        
                        equipment.equipmentID = [equipmentDictionary objectForKey:@"Equnr"];
                        
                        if ([equipmentDictionary objectForKey:@"Hequi"]) {
                            equipment.equipmentHID = [equipmentDictionary objectForKey:@"Hequi"];
                        }
                        else{
                            equipment.equipmentHID = @"";
                        }
                        
                        equipment.equipmentName = [equipmentDictionary objectForKey:@"Eqktx"];
                        
                        if ([equipmentDictionary objectForKey:@"Sequi"]) {
                            equipment.sequip = [equipmentDictionary objectForKey:@"Sequi"];
                        }
                        else{
                            
                            equipment.sequip = @"";
                        }
                        
                        if ([equipmentDictionary objectForKey:@"Level"]) {
                            equipment.level = [equipmentDictionary objectForKey:@"Level"];
                        }
                        else{
                            equipment.level = @"";
                        }
                        
                        equipment.catalogProfileID = [equipmentDictionary objectForKey:@"Rbnr"];
                        equipment.plantName = [equipmentDictionary objectForKey:@"Werks"];
                        equipment.workStation = [equipmentDictionary objectForKey:@"Arbpl"];
                        equipment.costCenter = [equipmentDictionary objectForKey:@"Kostl"];
                        equipment.location = location;
                    }
                }
                else if ([equipmnetDetails isKindOfClass:[NSDictionary class]])
                {
                    equipmentDictionary = equipmnetDetails;
                    
                    Equipment *equipment = [NSEntityDescription insertNewObjectForEntityForName:@"Equipment" inManagedObjectContext:delegate.coreDataControlObject.context];
                    
                    equipment.tplnr = [functioalLocationDictionary objectForKey:@"Tplnr"];
                    equipment.pltxt = [functioalLocationDictionary objectForKey:@"Pltxt"];
                    
                    if ([equipmentDictionary objectForKey:@"Hequi"]) {
                        equipment.equipmentHID = [equipmentDictionary objectForKey:@"Hequi"];
                    }
                    else{
                        
                        equipment.equipmentHID = @"";
                    }
                    
                    equipment.equipmentID = [equipmentDictionary objectForKey:@"Equnr"];
                    
                    equipment.equipmentName = [equipmentDictionary objectForKey:@"Eqktx"];
                    
                    if ([equipmentDictionary objectForKey:@"Sequi"]) {
                        equipment.sequip = [equipmentDictionary objectForKey:@"Sequi"];
                    }
                    else{
                        equipment.sequip = @"";
                    }
                    
                    if ([equipmentDictionary objectForKey:@"Level"]) {
                        equipment.level = [equipmentDictionary objectForKey:@"Level"];
                    }
                    else{
                        equipment.level = @"";
                    }
                    
                    equipment.catalogProfileID = [equipmentDictionary objectForKey:@"Rbnr"];
                    equipment.plantName = [equipmentDictionary objectForKey:@"Werks"];
                    equipment.workStation = [equipmentDictionary objectForKey:@"Arbpl"];
                    equipment.costCenter = [equipmentDictionary objectForKey:@"Kostl"];
                    equipment.location = location;
                }
            }
        }
        
        if (!(i%100)) {
            [delegate.coreDataControlObject saveContext];
            [delegate.coreDataControlObject.context reset];
        }
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    [requestFlocation setIncludesSubentities:NO];
    NSError *error;
    int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestFlocation error:&error];
    NSLog(@"Total functional location inserted count = %i",count);
    
    NSFetchRequest *requestEquipment = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    [requestEquipment setIncludesSubentities:NO];
    
    int equipCount = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestEquipment error:&error];
    NSLog(@"Total equipment inserted count = %i",equipCount);
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of functional locations received:%d , #No of equipments received:%d",count,equipCount]];
    }
}

- (void)insertEquipmentBOMToCoreDataFromArray:(NSDictionary *)EquipmentBOMDictionary
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    NSArray *EquipmentBOMHeaderArray = [EquipmentBOMDictionary objectForKey:@"BOMHeader"];
    NSArray *EquipmentBOMTransactionArray = [EquipmentBOMDictionary objectForKey:@"BOMTransaction"];
    
    for (int i=0; i<[EquipmentBOMHeaderArray count]; i++) {
        
        NSDictionary *EquipmentBOMHeaderDictoinary = [EquipmentBOMHeaderArray objectAtIndex:i];
        
        EquipmentBOMHeader *newEquipmentBOMHeader = [NSEntityDescription insertNewObjectForEntityForName:@"EquipmentBOMHeader" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        newEquipmentBOMHeader.bomheader = [EquipmentBOMHeaderDictoinary objectForKey:@"Bom"];
        newEquipmentBOMHeader.bomdesc = [EquipmentBOMHeaderDictoinary objectForKey:@"BomDesc"];
        newEquipmentBOMHeader.plant = [EquipmentBOMHeaderDictoinary objectForKey:@"Plant"];
        
    }
    
    for (int j=0; j<[EquipmentBOMTransactionArray count]; j++) {
        
        NSDictionary *EquipmentBOMTransactionDictoinary = [EquipmentBOMTransactionArray objectAtIndex:j];
        
        EquipmentBOMTransaction *newEquipmentBOMTransaction = [NSEntityDescription insertNewObjectForEntityForName:@"EquipmentBOMTransaction" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        newEquipmentBOMTransaction.bomtransaction = [EquipmentBOMTransactionDictoinary objectForKey:@"Bom"];
        newEquipmentBOMTransaction.bomcomponent = [EquipmentBOMTransactionDictoinary objectForKey:@"BomComponent"];
        
        if ([[EquipmentBOMTransactionDictoinary objectForKey:@"CompText"] isKindOfClass:[NSString class]]) {
            newEquipmentBOMTransaction.comptext = [EquipmentBOMTransactionDictoinary objectForKey:@"CompText"];
        }
        else{
            
            newEquipmentBOMTransaction.comptext = @"";
        }
        
        newEquipmentBOMTransaction.quantity = [EquipmentBOMTransactionDictoinary objectForKey:@"Quantity"];
        newEquipmentBOMTransaction.unit = [EquipmentBOMTransactionDictoinary objectForKey:@"Unit"];
        
        if ([EquipmentBOMTransactionDictoinary objectForKey:@"Stlkz"]) {
            newEquipmentBOMTransaction.stlkz = [EquipmentBOMTransactionDictoinary objectForKey:@"Stlkz"];
        }
        else{
            
            newEquipmentBOMTransaction.stlkz = @"";
        }
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of EquipmentBOM received"]];
    }
}

- (void)insertStockOverViewToCoreDataFromArray:(NSArray *)StockOverViewArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    StockOverView *stockOverView;
    
    for (int i=0; i<[StockOverViewArray count]; i++) {
        
        NSDictionary *stockOverViewDictoinary = [StockOverViewArray objectAtIndex:i];
        
        stockOverView = [NSEntityDescription insertNewObjectForEntityForName:@"StockOverView" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        stockOverView.lgpbe = [stockOverViewDictoinary objectForKey:@"Lgpbe"];
        stockOverView.lgort = [stockOverViewDictoinary objectForKey:@"Lgort"];
        stockOverView.labst = [stockOverViewDictoinary objectForKey:@"Labst"];
        stockOverView.werks = [stockOverViewDictoinary objectForKey:@"Werks"];
        stockOverView.bwtar = [stockOverViewDictoinary objectForKey:@"Bwtar"];
        stockOverView.speme = [stockOverViewDictoinary objectForKey:@"Speme"];
        stockOverView.matnr = [stockOverViewDictoinary objectForKey:@"Matnr"];
        stockOverView.maktx = [stockOverViewDictoinary objectForKey:@"Maktx"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
}

- (void)insertEquipMpttToCoreDataFromArray:(NSArray *)EquipMpttArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    EquipMptt *newEquipMptt;
    
    for (int i=0; i<[EquipMpttArray count]; i++) {
        
        NSDictionary *EquipMpttDictoinary = [EquipMpttArray objectAtIndex:i];
        
        newEquipMptt = [NSEntityDescription insertNewObjectForEntityForName:@"EquipMptt" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        newEquipMptt.atinn = [EquipMpttDictoinary objectForKey:@"Atinn"];
        newEquipMptt.atbez = [EquipMpttDictoinary objectForKey:@"Atbez"];
        newEquipMptt.desir = [EquipMpttDictoinary objectForKey:@"Desir"];
        newEquipMptt.equnr = [EquipMpttDictoinary objectForKey:@"Equnr"];
        
        newEquipMptt.mpobj = [EquipMpttDictoinary objectForKey:@"Mpobj"];
        newEquipMptt.mptyp = [EquipMpttDictoinary objectForKey:@"Mptyp"];
        newEquipMptt.mrngu = [EquipMpttDictoinary objectForKey:@"Mrngu"];
        newEquipMptt.msehl = [EquipMpttDictoinary objectForKey:@"Msehl"];
        
        newEquipMptt.point = [EquipMpttDictoinary objectForKey:@"Point"];
        newEquipMptt.psort = [EquipMpttDictoinary objectForKey:@"Psort"];
        newEquipMptt.pttxt = [EquipMpttDictoinary objectForKey:@"Pttxt"];
        
        
        newEquipMptt.readc = @"";
        newEquipMptt.normal = @"";
        newEquipMptt.alarm = @"";
        newEquipMptt.critical = @"";
        newEquipMptt.task = @"";
        newEquipMptt.notes = @"";
        
        
        
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Tplnr"]]) {
            newEquipMptt.tplnr = @"";
        }
        else
        {
            newEquipMptt.tplnr = [EquipMpttDictoinary objectForKey:@"Tplnr"];
        }
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Strno"]]) {
            newEquipMptt.strno = @"";
        }
        else
        {
            newEquipMptt.strno = [EquipMpttDictoinary objectForKey:@"Strno"];
        }
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"mpobt"]]) {
            newEquipMptt.mpobt = @"";
        }
        else
        {
            newEquipMptt.mpobt = [EquipMpttDictoinary objectForKey:@"mpobt"];
        }
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Mrmin"]]) {
            newEquipMptt.mrmin = @"";
        }
        else
        {
            newEquipMptt.mrmin = [EquipMpttDictoinary objectForKey:@"Mrmin"];
        }
        
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Mrmax"]]) {
            newEquipMptt.mrmax = @"";
        }
        else
        {
            newEquipMptt.mrmax = [EquipMpttDictoinary objectForKey:@"Mrmax"];
        }
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Cdsuf"]]) {
            newEquipMptt.cdsuf = @"";
        }
        else
        {
            newEquipMptt.cdsuf = [EquipMpttDictoinary objectForKey:@"Cdsuf"];
        }
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Codct"]]) {
            newEquipMptt.codct = @"";
        }
        else
        {
            newEquipMptt.codct = [EquipMpttDictoinary objectForKey:@"Codct"];
        }
        
        if ([NullChecker isNull:[EquipMpttDictoinary objectForKey:@"Codgr"]]) {
            newEquipMptt.codgr = @"";
        }
        else
        {
            newEquipMptt.codgr = [EquipMpttDictoinary objectForKey:@"Codgr"];
        }
        
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    NSFetchRequest *requestEquipMptt = [NSFetchRequest fetchRequestWithEntityName:@"EquipMptt"];
    [requestEquipMptt setIncludesSubentities:NO];
    NSError *error;
    int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestEquipMptt error:&error];
    NSLog(@"Total requestEquipMptt inserted count = %i",count);
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of EquipMptt received:%d",count]];
    }
}

- (void)insertFlocMpttToCoreDataFromArray:(NSArray *)FlocMpttArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    FlocMptt *newFlocMptt;
    
    for (int i=0; i<[FlocMpttArray count]; i++) {
        
        NSDictionary *FlocMpttDictoinary = [FlocMpttArray objectAtIndex:i];
        
        newFlocMptt = [NSEntityDescription insertNewObjectForEntityForName:@"FlocMptt" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        newFlocMptt.atinn = [FlocMpttDictoinary objectForKey:@"Atinn"];
        newFlocMptt.atbez = [FlocMpttDictoinary objectForKey:@"Atbez"];
        newFlocMptt.desir = [FlocMpttDictoinary objectForKey:@"Desir"];
        
        newFlocMptt.mpobj = [FlocMpttDictoinary objectForKey:@"Mpobj"];
        newFlocMptt.mptyp = [FlocMpttDictoinary objectForKey:@"Mptyp"];
        newFlocMptt.mrngu = [FlocMpttDictoinary objectForKey:@"Mrngu"];
        newFlocMptt.msehl = [FlocMpttDictoinary objectForKey:@"Msehl"];
        
        newFlocMptt.point = [FlocMpttDictoinary objectForKey:@"Point"];
        newFlocMptt.psort = [FlocMpttDictoinary objectForKey:@"Psort"];
        newFlocMptt.pttxt = [FlocMpttDictoinary objectForKey:@"Pttxt"];
        
        if ([NullChecker isNull:[FlocMpttDictoinary objectForKey:@"Tplnr"]]) {
            newFlocMptt.tplnr = @"";
        }
        else
        {
            newFlocMptt.tplnr = [FlocMpttDictoinary objectForKey:@"Tplnr"];
        }
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FlocMptt"];
    [requestFlocation setIncludesSubentities:NO];
    NSError *error;
    int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestFlocation error:&error];
    NSLog(@"Total FlocMptt inserted count = %i",count);
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of FlocMptt received:%d",count]];
    }
}

- (void)insertMaterialsToCoreDataFromArray:(NSMutableArray *)materialsArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    for (int i=0; i<[materialsArray count]; i++) {
        NSDictionary *materialDictoinary = [materialsArray objectAtIndex:i];
        Material *newMaterial = [NSEntityDescription insertNewObjectForEntityForName:@"Material" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        newMaterial.lgpbe = [materialDictoinary objectForKey:@"Lgpbe"];
        
        newMaterial.lgort = [materialDictoinary objectForKey:@"Lgort"];
        newMaterial.labst = [materialDictoinary objectForKey:@"Labst"];
        
        newMaterial.werks = [materialDictoinary objectForKey:@"Werks"];
        
        newMaterial.speme = [materialDictoinary objectForKey:@"Speme"];
        newMaterial.matnr = [materialDictoinary objectForKey:@"Matnr"];
        newMaterial.maktx = [materialDictoinary objectForKey:@"Maktx"];
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
    [requestFlocation setIncludesSubentities:NO];
    NSError *error;
    int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestFlocation error:&error];
    NSLog(@"Total Materials inserted count = %i",count);
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of Components received:%d",count]];
    }
}


- (void)insertMaterialsToCoreDataFromBomItemsArray:(NSDictionary *)materialsDictionary{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *matnrPredicate;
    
    NSArray *materialsArray=[materialsDictionary objectForKey:@"Material"];
    
    for (int i=0; i<[materialsArray count]; i++) {
        
        matnrPredicate = [NSPredicate predicateWithFormat:@"matnr like[cd] %@",[[materialsArray objectAtIndex:i] objectForKey:@"Matnr"]];
        
        NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
        
        [materialsRequest setPredicate:matnrPredicate];
        
        NSError *error = nil;
        NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
        if (error) {
            [NSException raise:@"no truck find" format:@"%@", [error localizedDescription]];
        }
        if (objs.count > 0) {
            // there is a Matnr with same id exsist. Use update method
            
        }else {
            // there's no Matnr with same id. Use insert method
            
            NSDictionary *materialDictoinary = [materialsArray objectAtIndex:i];
            
            AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
            
            Material *newMaterial = [NSEntityDescription insertNewObjectForEntityForName:@"Material" inManagedObjectContext:delegate.coreDataControlObject.context];
            
            newMaterial.lgpbe = [materialDictoinary objectForKey:@"Lgpbe"];
            
            newMaterial.lgort = [materialDictoinary objectForKey:@"Lgort"];
            newMaterial.labst = [materialDictoinary objectForKey:@"Labst"];
            
            newMaterial.werks = [materialDictoinary objectForKey:@"Werks"];
            
            newMaterial.speme = [materialDictoinary objectForKey:@"Speme"];
            newMaterial.matnr = [materialDictoinary objectForKey:@"Matnr"];
            newMaterial.maktx = [materialDictoinary objectForKey:@"Maktx"];
            
            [delegate.coreDataControlObject saveContext];
            [delegate.coreDataControlObject.context reset];
            
            NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
            [requestFlocation setIncludesSubentities:NO];
            NSError *error;
            int count = (int)[delegate.coreDataControlObject.context countForFetchRequest:requestFlocation error:&error];
            NSLog(@"Total Materials inserted count = %i",count);
            
            if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
            {
                [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of Components received:%d",count]];
            }
        }
    }
}

- (void)insertStocksToCoreDataFromBomItemsArray:(NSDictionary *)materialsDictionary{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *matnrPredicate;
    
    NSArray *materialsArray=[materialsDictionary objectForKey:@"StocKView"];
    
    for (int i=0; i<[materialsArray count]; i++) {
        
        matnrPredicate = [NSPredicate predicateWithFormat:@"matnr like[cd] %@",[[materialsArray objectAtIndex:i] objectForKey:@"Matnr"]];
        
        NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"StockOverView"];
        
        [materialsRequest setPredicate:matnrPredicate];
        
        NSError *error = nil;
        NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
        if (error) {
            [NSException raise:@"no Matnr find" format:@"%@", [error localizedDescription]];
        }
        if (objs.count > 0) {
            // there is a Matnr with same id exsist. Use update method
            
        }else {
            
            // there's no Matnr with same id. Use insert method
            
            AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
            StockOverView *stockOverView;
            
            NSDictionary *stockOverViewDictoinary = [materialsArray objectAtIndex:i];
            
            stockOverView = [NSEntityDescription insertNewObjectForEntityForName:@"StockOverView" inManagedObjectContext:delegate.coreDataControlObject.context];
            
            stockOverView.lgpbe = [stockOverViewDictoinary objectForKey:@"Lgpbe"];
            
            stockOverView.lgort = [stockOverViewDictoinary objectForKey:@"Lgort"];
            stockOverView.labst = [stockOverViewDictoinary objectForKey:@"Labst"];
            
            stockOverView.werks = [stockOverViewDictoinary objectForKey:@"Werks"];
            
            stockOverView.speme = [stockOverViewDictoinary objectForKey:@"Speme"];
            stockOverView.matnr = [stockOverViewDictoinary objectForKey:@"Matnr"];
            stockOverView.maktx = [stockOverViewDictoinary objectForKey:@"Maktx"];
            
            [delegate.coreDataControlObject saveContext];
            [delegate.coreDataControlObject.context reset];
            
            if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
            {
                [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
            }
            
        }
        
    }
    
    
}

- (NSMutableArray *)fetchStocksDataFromBomItem:(NSString *)bomItem
{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *matnrPredicate;
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    matnrPredicate = [NSPredicate predicateWithFormat:@"matnr like[cd] %@",bomItem];
    
    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"StockOverView"];
    
    [materialsRequest setPredicate:matnrPredicate];
    
    [materialsRequest setResultType:NSDictionaryResultType];
    
    NSError *error = nil;
    NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
    if (error) {
        [NSException raise:@"no Matnr find" format:@"%@", [error localizedDescription]];
    }
    if (objs.count > 0) {
        // there is a Matnr with same id exsist. Use update method
        
        [dataArray addObjectsFromArray:objs];
 
    }else {
        
     }
    
     return dataArray;
    
}



- (NSMutableArray *)searchMaterialsForPlant:(NSString *)plantName StorageLocation:(NSString *)storageName MaterialDescription:(NSString *)materialName
{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *plantPredicate,*storageLocPredicate,*materialDesc;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
    //     NSSortDescriptor *orderDescriptor = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
    //     [materialsRequest setSortDescriptors:[NSArray arrayWithObject:orderDescriptor]];
    if (plantName.length) {
        plantPredicate = [NSPredicate predicateWithFormat:@"plantid like[cd] %@",plantName];
    }
    if (storageName.length) {
        storageLocPredicate = [NSPredicate predicateWithFormat:@"storagelocation like[cd] %@",[storageName stringByAppendingString:@"*"]];
    }
    if (materialName.length){
        materialDesc = [NSPredicate predicateWithFormat:@"materialname like[cd] %@",[materialName stringByAppendingString:@"*"]];
    }
    if (storageLocPredicate && plantPredicate && materialDesc) {
        NSCompoundPredicate *compPredicate = [NSCompoundPredicate andPredicateWithSubpredicates:@[plantPredicate,storageLocPredicate,materialDesc]];
        
        [materialsRequest setPredicate:compPredicate];
    }
    else if (storageLocPredicate && plantPredicate){
        NSCompoundPredicate *compPredicate = [NSCompoundPredicate andPredicateWithSubpredicates:@[plantPredicate,storageLocPredicate]];
        [materialsRequest setPredicate:compPredicate];
    }
    else if(plantPredicate)
    {
        [materialsRequest setPredicate:plantPredicate];
    }
    else if(storageLocPredicate)
    {
        [materialsRequest setPredicate:storageLocPredicate];
    }
    else if(materialDesc)
    {
        [materialsRequest setPredicate:materialDesc];
    }
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:materialsRequest error:&error];
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
    
    //    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    //    [context reset];
    //    NSMutableArray *dataArray = [NSMutableArray new];
    //    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
    //    /*if (plantID.length && searchString.length) {
    //        [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"(plantName like[cd] %@) AND (locationName like[cd] %@*)",plantID,searchString]];
    //    }*/
    //    //NSMutableString *searchPredictString = [[NSMutableString alloc] initWithString:@""];
    //    NSMutableArray *predicates = [[NSMutableArray alloc] init];
    //    if (plantName.length) {
    //        //[searchPredictString appendFormat:@"(plantid like[cd] %@)",plantName];
    //        NSPredicate *plantPredicate = [NSPredicate predicateWithFormat:@"plantid like[cd] %@",plantName];
    //        [predicates addObject:plantPredicate];
    //    }
    //    if (storageName.length) {
    //        NSPredicate *storagePredicate = [NSPredicate predicateWithFormat:@"storagelocation like[cd] %@",storageName];
    //        [predicates addObject:storagePredicate];
    //    }
    //    if (materialName.length) {
    //        NSPredicate *materialDescPredicate = [NSPredicate predicateWithFormat:@"materialname like[cd] %@",materialName];
    //        [predicates addObject:materialDescPredicate];
    //
    //    }
    //
    //    NSCompoundPredicate *compPredicate = [NSCompoundPredicate andPredicateWithSubpredicates:predicates];
    //    [requestFlocation setPredicate:compPredicate];
    //    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"materialname" ascending:YES];
    //    [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
    //    NSError *error;
    //    NSArray *tempArray = [context executeFetchRequest:requestFlocation error:&error];
    //    if (error) {
    //        [ConsoleLogHandler showLog:error.description];
    //        return dataArray;
    //    }
    //    [dataArray addObjectsFromArray:tempArray];
    //    return dataArray;
    
    //    if (error) {
    //        NSLog(@"%@",error.description);
    //    }
    //    else
    //    {
    //        return [NSMutableArray arrayWithArray:tempArray];
    //    }
    //
    //    return [NSMutableArray array];
}

- (NSArray *)getComponentForMaterialId:(NSString *)materialID;
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
      NSPredicate *predicate;
     NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *materialRequest = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
    
      //  lgortRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"lgort"], nil];
    
         predicate = [NSPredicate predicateWithFormat:@"lgort like[cd] %@",materialID];
         [materialRequest setPredicate:predicate];
         materialRequest.resultType = NSDictionaryResultType;
 
        NSError *error;
        NSArray *tempArray = [context executeFetchRequest:materialRequest error:&error];
        if (error) {
            [ConsoleLogHandler showLog:error.description];
            return dataArray;
        }
    
        [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

- (NSArray *)getFuncLoc:(NSString *)locationID
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *predicate;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *funclocRequest = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    
    if ([locationID isEqualToString:@"*"]) {
        predicate = [NSPredicate predicateWithFormat:@"level contains[c] %@ ",@"1"];
    }
    else{
        predicate = [NSPredicate predicateWithFormat:@"locationid contains[c] %@ OR locationName contains[c] %@ OR plantName contains[c] %@ OR workStation contains[c] %@ OR costCenter contains[c] %@ OR plannerGroup contains[c] %@",locationID,locationID,locationID,locationID,locationID,locationID];
    }
    
    if (predicate){
        
        [funclocRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    }
    
    funclocRequest.resultType = NSDictionaryResultType;
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:funclocRequest error:&error];
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

//insert
- (NSArray *)getComponentFromPubnubForMaterialId:(NSDictionary *)componentDictionary
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [delegate.coreDataControlObject.context reset];
    NSFetchRequest *requestMaterial = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
    
    [requestMaterial setPredicate:[NSPredicate predicateWithFormat:@"materialid LIKE[cd] %@ AND plantid LIKE[cd] %@ AND storagelocation LIKE[cd] %@ ",[componentDictionary objectForKey:@"Matnr"],[componentDictionary objectForKey:@"Werks"],[componentDictionary objectForKey:@"Lgort"]]];
    
    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"materialname" ascending:YES];
    [requestMaterial setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
    NSError *error;
    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestMaterial error:&error];
    if (error) {
        NSLog(@"%@",error.description);
    }
    else
    {
        if ([resultArray count]) {
            Material *material = [resultArray firstObject];
            return [NSArray arrayWithObjects:material.matnr,material.werks,material.lgort, nil];
        }
        return resultArray;
    }
    
    return [NSArray array];
}

- (NSArray *)getEquipmentsForlocationIDFromPubNub:(NSString *)locationID
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [delegate.coreDataControlObject.context reset];
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    
    [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"locationid like[cd] %@",locationID]];
    
    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
    [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
    NSError *error;
    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
    if (error) {
        NSLog(@"%@",error.description);
    }
    else
    {
        if ([resultArray count]) {
            FunctionalLocation *location = [resultArray firstObject];
            return [NSArray arrayWithObject:location.locationid];
        }
        return resultArray;
    }
    
    return [NSArray array];
}

-(NSArray *)getdistinctValuesfromCoreData:(NSDictionary *)inputParameters
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *fetchRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"Equipment" inManagedObjectContext:context];
    
    // Required! Unless you set the resultType to NSDictionaryResultType, distinct can't work.
    // All objects in the backing store are implicitly distinct, but two dictionaries can be duplicates.
    // Since you only want distinct names, only ask for the 'name' property.
    fetchRequest.resultType = NSDictionaryResultType;
    
    fetchRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentHID"], nil];
    fetchRequest.returnsDistinctResults = YES;
    
    // Now it should yield an NSArray of distinct values in dictionaries.
    NSArray *tempResultArray = [context executeFetchRequest:fetchRequest error:nil];
    
    fetchRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentHID"],[[entity propertiesByName] objectForKey:@"equipmentID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"],[[entity propertiesByName] objectForKey:@"location"], nil];
    
    NSPredicate *predicate;
    
    for (int i =0; i<[tempResultArray count]; i++) {
        
        predicate = [NSPredicate predicateWithFormat:@"equipmentHID == %@",[[tempResultArray objectAtIndex:i] objectForKey:@"equipmentHID"]];
        
        if (predicate) {
            [fetchRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
        }
        
        NSError *error;
        
        NSArray *tempArray = [context executeFetchRequest:fetchRequest error:&error];
        
        if (error) {
            [ConsoleLogHandler showLog:error.description];
            return dataArray;
        }
        
        [dataArray addObjectsFromArray:tempArray];
    }
    
    return dataArray;
}

- (NSArray *)getOnlyDistinctEquipments:(NSDictionary *)distinctRecords
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    
    NSMutableArray *dataArray = [NSMutableArray new];
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"Equipment" inManagedObjectContext:context];
    
    if ([distinctRecords objectForKey:@"equipmentHID"]) {
        
        NSFetchRequest * equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
        equipmentRequest.resultType = NSDictionaryResultType;
        
        equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"], nil];
        
        equipmentRequest.includesPropertyValues = YES;
        equipmentRequest.returnsObjectsAsFaults = YES;
        
        equipmentRequest.sortDescriptors = @[[NSSortDescriptor sortDescriptorWithKey:@"equipmentID" ascending:YES]];
        NSPredicate *predicate = [NSPredicate predicateWithFormat:@"equipmentHID == %@",[distinctRecords objectForKey:@"equipmentHID"]];
        
        [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
        
        NSError *error;
        
        NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
        
        if (error) {
            [ConsoleLogHandler showLog:error.description];
        }
        
        [dataArray addObjectsFromArray:tempArray];
    }
    else{
        
        NSMutableArray *tempdataArray = [NSMutableArray new];
        
        NSFetchRequest *equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
        
        equipmentRequest.returnsDistinctResults = YES;
        equipmentRequest.resultType = NSDictionaryResultType;
        [equipmentRequest setPropertiesToFetch:[NSArray arrayWithObject:@"equipmentHID"]];
        
        NSError *error;
        NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
        
        if (error) {
            [ConsoleLogHandler showLog:error.description];
        }
        
        [tempdataArray addObjectsFromArray:tempArray];
        
        NSPredicate *predicate;
        
        for (int i =0; i<[tempdataArray count]; i++) {
            
            if ([[[tempdataArray objectAtIndex:i] objectForKey:@"equipmentHID"] length]) {
                
                predicate = [NSPredicate predicateWithFormat:@"equipmentHID == %@",[[tempdataArray objectAtIndex:i] objectForKey:@"equipmentHID"]];
                
                equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentHID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"], nil];
                
                equipmentRequest.sortDescriptors = @[[NSSortDescriptor sortDescriptorWithKey:@"equipmentHID" ascending:YES]];
                
                [equipmentRequest setFetchLimit:1];
                
                equipmentRequest.resultType = NSDictionaryResultType;
                
                [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
                
                NSError *error;
                
                NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
                
                if (error) {
                    [ConsoleLogHandler showLog:error.description];
                }
                
                [dataArray addObjectsFromArray:tempArray];
                
            }
        }
        
        [tempdataArray removeAllObjects];
        
        equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
        equipmentRequest.returnsDistinctResults = YES;
        equipmentRequest.resultType = NSDictionaryResultType;
        [equipmentRequest setPropertiesToFetch:[NSArray arrayWithObject:@"equipmentID"]];
        
        tempArray = [context executeFetchRequest:equipmentRequest error:&error];
        
        if (error) {
            [ConsoleLogHandler showLog:error.description];
        }
        
        [tempdataArray addObjectsFromArray:tempArray];
        
        for (int i =0; i<[tempdataArray count]; i++) {
            
            if ([[[tempdataArray objectAtIndex:i] objectForKey:@"equipmentID"] length]) {
                
                predicate = [NSPredicate predicateWithFormat:@"equipmentID == %@",[[tempdataArray objectAtIndex:i] objectForKey:@"equipmentID"]];
                
                equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"], nil];
                
                equipmentRequest.sortDescriptors = @[[NSSortDescriptor sortDescriptorWithKey:@"equipmentID" ascending:YES]];
                
                equipmentRequest.resultType = NSDictionaryResultType;
                
                [equipmentRequest setFetchLimit:1];
                
                [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
                
                NSError *error;
                
                NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
                
                if (error) {
                    [ConsoleLogHandler showLog:error.description];
                }
                
                [dataArray addObjectsFromArray:tempArray];
            }
        }
    }
    
    return dataArray;
}


-(NSArray *)getFunctionLocations:(NSDictionary *)fetchRequest {
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *predicate;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    //  NSEntityDescription *entity = [NSEntityDescription entityForName:@"FunctionalLocation" inManagedObjectContext:context];
    
    NSFetchRequest *equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    equipmentRequest.resultType = NSDictionaryResultType;
    
    // equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"locationid"],[[entity propertiesByName] objectForKey:@"locationName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"],[[entity propertiesByName] objectForKey:@"costCenter"],[[entity propertiesByName] objectForKey:@"plannerGroup"], nil];
    
    if (fetchRequest) {
        
        if ([fetchRequest objectForKey:@"functionLocationHID"]) {
            
            predicate = [NSPredicate predicateWithFormat:@"tplma == %@",[fetchRequest objectForKey:@"functionLocationHID"]];
        }
        else{
            
            // predicate = [NSPredicate predicateWithFormat:@"Stplnr == %X"];
        }
    }
    else{
        
        predicate = [NSPredicate predicateWithFormat:@"level == 1"];
        
    }
    
    [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
    
}

-(NSArray *)getiWerksForfunctionLocation:(NSString *)locationId {
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    
    NSFetchRequest *equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    equipmentRequest.resultType = NSDictionaryResultType;
    
    NSPredicate *predicate;
    
    if (locationId.length) {
        
        predicate = [NSPredicate predicateWithFormat:@"locationid == %@",locationId];
        
        [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    }
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

-(NSArray *)getiWerksForequipment:(NSString *)equipmentId {

    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
 
    NSFetchRequest *equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    equipmentRequest.resultType = NSDictionaryResultType;
    
     NSPredicate *predicate;
    
    if (equipmentId.length) {
        
        predicate = [NSPredicate predicateWithFormat:@"equipmentID == %@",equipmentId];
        
        [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
     }
 
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
    
     if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
 
    return dataArray;
}


-(NSArray *)getEquipments:(NSDictionary *)fetchRequest{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    
    NSMutableArray *dataArray = [NSMutableArray new];
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"Equipment" inManagedObjectContext:context];
    NSFetchRequest *equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    equipmentRequest.resultType = NSDictionaryResultType;
    
//    equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"],[[entity propertiesByName] objectForKey:@"sequip"],[[entity propertiesByName] objectForKey:@"level"],[[entity propertiesByName] objectForKey:@"iwerks"],[[entity propertiesByName] objectForKey:@"ingrp"], nil];
    
    NSPredicate *predicate;
    
    if (fetchRequest) {
        
        if ([fetchRequest objectForKey:@"locationID"]) {
            
            predicate = [NSPredicate predicateWithFormat:@"tplnr == %@ AND level == 1",[fetchRequest objectForKey:@"locationID"]];
        }
        else{
            
            predicate = [NSPredicate predicateWithFormat:@"equipmentHID == %@",[fetchRequest objectForKey:@"equipmentHID"]];
        }
    }
    else{
        
        predicate = [NSPredicate predicateWithFormat:@"level == 1"];
        
    }
    
    [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

/*
 - (NSArray *)getEquipments:(NSString *)locationID
 {
 NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
 [context reset];
 NSPredicate *equipmentIdPredicate,*equipmentNamePredicate,*catalogProfilePredicate,*predicate;
 NSMutableArray *dataArray = [NSMutableArray new];
 
 NSFetchRequest *equipmentRequest = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
 equipmentRequest.returnsDistinctResults = YES;
 equipmentRequest.resultType = NSDictionaryResultType;
 [equipmentRequest setPropertiesToFetch:[NSArray arrayWithObject:@"equipmentID"]];
 
 if ([locationID isEqualToString:@"*"]) {
 
 }
 else{
 predicate = [NSPredicate predicateWithFormat:@"equipmentID beginswith[c] %@ OR equipmentName beginswith[c] %@ OR catalogProfileID beginswith[c] %@",locationID,locationID,locationID];
 }
 
 if (equipmentIdPredicate && equipmentNamePredicate && catalogProfilePredicate) {
 
 }
 else if (predicate){
 
 [equipmentRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
 }
 
 NSError *error;
 NSArray *tempArray = [context executeFetchRequest:equipmentRequest error:&error];
 if (error) {
 [ConsoleLogHandler showLog:error.description];
 return dataArray;
 }
 
 [dataArray addObjectsFromArray:tempArray];
 
 return dataArray;
 }*/



- (NSArray *)getFuncLocForEquipID:(NSString *)locationID
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [delegate.coreDataControlObject.context reset];
    NSFetchRequest *requestEuipment = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
    
    [requestEuipment setPredicate:[NSPredicate predicateWithFormat:@"equipmentID like[cd] %@ OR equipmentHID like[cd] %@",locationID,locationID]];
    
    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"equipmentName" ascending:YES];
    [requestEuipment setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
    NSError *error;
    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestEuipment error:&error];
    if (error) {
        NSLog(@"%@",error.description);
    }
    else
    {
        if ([resultArray count]) {
            Equipment *equip = [resultArray firstObject];
            return [NSArray arrayWithObject:equip.tplnr];
            //            FunctionalLocation *location = [resultArray firstObject];
            //           return [NSArray arrayWithArray:[location.equipments allObjects]];
        }
        return resultArray;
    }
    
    return [NSArray array];
}

- (NSArray *)getEquipmentsForlocationID:(NSString *)locationID
{
    /*
     equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"], nil];
     
     equipmentRequest.includesPropertyValues = YES;
     equipmentRequest.returnsObjectsAsFaults = YES;
     */
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [delegate.coreDataControlObject.context reset];
    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
    //if (plantID.length && searchString.length) {
    [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"locationid like[cd] %@",locationID]];
    // }
    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
    
    [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
    NSError *error;
    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
    if (error) {
        NSLog(@"%@",error.description);
    }
    else
    {
        FunctionalLocation *location;
        NSMutableArray *tempMutArray = [NSMutableArray new];
        
        for (int i =0; i<[resultArray count]; i++) {
            location = [resultArray objectAtIndex:i];
            
            //   [tempMutArray addObjectsFromArray:[NSArray arrayWithArray:[location.equipments allObjects]]];
        }
        
        for (Equipment *equipments in [location.equipments allObjects]) {
            NSLog(@"%@", equipments.equipmentID);
            
            NSMutableDictionary *dictionary = [NSMutableDictionary new];
            
            [dictionary setObject:equipments.equipmentID forKey:@"equipmentHID"];
            [dictionary setObject:equipments.catalogProfileID forKey:@"equipmentName"];
            [dictionary setObject:equipments.catalogProfileID forKey:@"catalogProfileID"];
            [dictionary setObject:equipments.catalogProfileID forKey:@"plantName"];
            [dictionary setObject:equipments.catalogProfileID forKey:@"workStation"];
            
            
            // equipmentRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"equipmentHID"],[[entity propertiesByName] objectForKey:@"catalogProfileID"],[[entity propertiesByName] objectForKey:@"equipmentName"],[[entity propertiesByName] objectForKey:@"plantName"],[[entity propertiesByName] objectForKey:@"workStation"], nil];
            
        }
        
        
        if ([tempMutArray count]) {
            return tempMutArray;
        }
        
        return [NSArray array];
    }
    
    return [NSArray array];
}

//- (NSArray *)getEquipmentsForlocationID:(NSString *)locationID
//{
//    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
//    [delegate.coreDataControlObject.context reset];
//    NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
//    //if (plantID.length && searchString.length) {
//    [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"locationid like[cd] %@",locationID]];
//    // }
//    NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
//    [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
//    NSError *error;
//    NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
//    if (error) {
//        NSLog(@"%@",error.description);
//    }
//    else
//    {
//        FunctionalLocation *location;
//        NSMutableArray *tempMutArray = [NSMutableArray new];
//        for (int i =0; i<[resultArray count]; i++) {
//            location = [resultArray objectAtIndex:i];
//
//            [tempMutArray addObjectsFromArray:[NSArray arrayWithArray:[location.equipments allObjects]]];
//        }
//
//        if ([tempMutArray count]) {
//            return tempMutArray;
//        }
//
//        return [NSArray array];
//    }
//
//    return [NSArray array];
//}

//MeasurementDocuments

- (NSArray *) getMeasurementDocumentPoints:(NSString *)locationID
{
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    [context reset];
    NSPredicate *predicate;
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *equipMpttRequest = [NSFetchRequest fetchRequestWithEntityName:@"EquipMptt"];
    
    if ([locationID isEqualToString:@"*"]) {
        
    }
    else{
        
        predicate = [NSPredicate predicateWithFormat:@"equnr like[cd] %@",locationID];
    }
    
    equipMpttRequest.resultType = NSDictionaryResultType;
    
    if (predicate){
        
        [equipMpttRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    }
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:equipMpttRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
        return dataArray;
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
    
}

- (BOOL)updateNotificationWithObjectid:(NSString *)objectId forHeaderID:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set nh_objectID = '%@' where notificationh_id = '%@'",objectId,headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"update NOTIFICATION_TRANSACTION set notificationt_compstatus = 'U' and notificationt_itemstatus = 'U' where notificationt_header_id = '%@'",headerID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    if ([self updateSynclogobjectID:objectId forUUID:headerID]) {
                        return YES;
                    }
                }
            }
        }
    }
    return YES;
}

- (BOOL)updateNotificationStatus:(NSString *)headerID :(NSString *)status
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set notificationh_status = '%@', nh_upadated_Date = '%@' where notificationh_id = '%@'",status,[getDate stringFromDate:[NSDate date]],headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    return YES;
}

- (BOOL)updateOrderStatus:(NSString *)headerID :(NSString *)status
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set orderh_status = '%@', oh_upadated_Date = '%@' where orderh_id = '%@'",status,[getDate stringFromDate:[NSDate date]],headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    return YES;
}

- (BOOL)updateOrderNoinNotification:(NSDictionary *)inputParameters
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set notificationh_order_no = '%@', nh_upadated_Date = '%@' where nh_objectID = '%@'",[inputParameters objectForKey:@"AUFNR"],[getDate stringFromDate:[NSDate date]],[inputParameters objectForKey:@"QMNUM"]];
    
    if ([self set_query:queryString]) {
        
        [self run_Queries_NODATA];
    }
    
    return YES;
}

- (BOOL)updateOrderWithObjectid:(NSString *)objectId forHeaderID:(NSString *)headerID
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set oh_objectID = '%@', oh_upadated_Date = '%@' where orderh_id = '%@'",objectId,[getDate stringFromDate:[NSDate date]],headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"update ORDER_TRANSACTION set ordert_status = '', ordert_operation_action = 'U' where ordert_header_id = '%@'",headerID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    if ([self updateSynclogobjectID:objectId forUUID:headerID]) {
                        return YES;
                    }
                }
            }
        }
    }
    return YES;
}

- (BOOL)updateOrderStatus:(NSString *)headerID
{
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set oh_upadated_Date = '%@' where orderh_id = '%@'",[getDate stringFromDate:[NSDate date]],headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            [queryString setString:@""];
            [queryString appendFormat:@"update ORDER_TRANSACTION set ordert_status = '' where ordert_header_id = '%@'",headerID];
            if ([self set_query:queryString]) {
                if ([self run_Queries_NODATA]) {
                    return YES;
                }
            }
        }
    }
    return YES;
}

- (BOOL)updateForChangeNotification:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update NOTIFICATION_HEADER set notificationh_status = 'Changed' where notificationh_id = '%@'",headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    return NO;
}

- (BOOL)updateForChangeOrder:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update ORDER_HEADER set orderh_status = 'Changed' where orderh_id = '%@'",headerID];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    return NO;
}

- (BOOL)updateSynclogobjectID:(NSString *)objectID forUUID:(NSString *)uuidString
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update SyncLog set ObjectID = '%@',Status = 'Complete' where UUID = '%@'",objectID,uuidString];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    
    return NO;
}

- (BOOL)updateSyncLogForCategory:(NSString *)cateGory action:(NSString *)actionString objectid:(NSString *)objectID UUID:(NSString *)headerID
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update SyncLog set ObjectID = '%@', Status = 'Complete' where UUID = '%@' and DocumentCategory = '%@' and ActivityType = '%@'",objectID,headerID,cateGory,actionString];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    
    return NO;
}


- (BOOL)updateSyncLogForCategory:(NSString *)cateGory action:(NSString *)actionString objectid:(NSString *)objectID UUID:(NSString *)headerID  date:(NSString *)dateValue timestamp:(NSString *)timestampvalue
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update SyncLog set ObjectID = '%@', Status = 'Complete' where UUID = '%@' and DocumentCategory = '%@' and ActivityType = '%@' and 'Date'='%@' and Time='%@'",objectID,headerID,cateGory,actionString,dateValue,timestampvalue];
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    
    return NO;
}

- (BOOL)updateSyncLogErrorForCategory:(NSString *)cateGory action:(NSString *)actionString objectid:(NSString *)objectID UUID:(NSString *)headerID message:(NSString *)message
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update SyncLog set ObjectID = '%@',Status = 'ERROR',Message = \"%@\" where UUID = '%@' and DocumentCategory = '%@' and ActivityType = '%@'",objectID,message,headerID,cateGory,actionString];
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    
    return NO;
}

- (BOOL)updateSyncLogErrorForCategory:(NSString *)cateGory action:(NSString *)actionString objectid:(NSString *)objectID UUID:(NSString *)headerID message:(NSString *)message Date:(NSString *)date timestamp:(NSString *)timestampvalue
{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"update SyncLog set ObjectID = '%@',Status = 'ERROR',Message = \"%@\" where UUID = '%@' and DocumentCategory = '%@' and ActivityType = '%@' and Date = '%@' and Time = '%@' ",objectID,message,headerID,cateGory,actionString,date,timestampvalue];
    
    if ([self set_query:queryString]) {
        if ([self run_Queries_NODATA]) {
            return YES;
        }
    }
    
    return  NO;
}


- (NSString *)fetchNameForIDKey:(NSString *)keyName forValue:(NSString *)keyValue
{
    NSArray *dataArray;
    if ([keyName isEqualToString:@"ORDEROBJECTID"]) {
        dataArray = [self fetchColumn:@"orderh_id" fromTabe:@"ORDER_HEADER" condtionColumn:@"oh_objectID" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"OBJECTID"]) {
        dataArray = [self fetchColumn:@"notificationh_id" fromTabe:@"NOTIFICATION_HEADER" condtionColumn:@"nh_objectID" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"NPID"]) {
        dataArray = [self fetchColumn:@"priority_description" fromTabe:@"NOTIFICATION_PRIORITYMASTER" condtionColumn:@"priority_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"OPID"]) {
        dataArray = [self fetchColumn:@"priority_description" fromTabe:@"ORDER_PRIORITYMASTER" condtionColumn:@"priority_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"NID"]) {
        dataArray = [self fetchColumn:@"notificationtype_description" fromTabe:@"NOTIFICATIONTYPEMASTER" condtionColumn:@"notificationtype_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"OID"]) {
        dataArray = [self fetchColumn:@"ordertype_description" fromTabe:@"ORDERTYPEMASTER" condtionColumn:@"ordertype_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"IGID"]) {
        dataArray = [self fetchColumn:@"component_description" fromTabe:@"NOTIFICATION_COMPONENTMASTER" condtionColumn:@"component_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"IID"]) {
        dataArray = [self fetchColumn:@"problem_description" fromTabe:@"NOTIFICATION_COMPONENT_PROBLEMMASTER" condtionColumn:@"problem_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"CGID"]) {
        dataArray = [self fetchColumn:@"causegroup_description" fromTabe:@"NOTIFICATION_CAUSEGROUPMASTER" condtionColumn:@"causegroup_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"CID"]) {
        dataArray = [self fetchColumn:@"causecode_description" fromTabe:@"NOTIFICATION_CGROUP_CAUSECODEMASTER" condtionColumn:@"causecode_id" conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"FID"]) {
        AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
        [delegate.coreDataControlObject.context reset];
        NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"FunctionalLocation"];
        //if (plantID.length && searchString.length) {
        [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"locationid like[cd] %@",keyValue]];
        // }
        NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"locationName" ascending:YES];
        [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
        NSError *error;
        NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
        if (error) {
            NSLog(@"%@",error.description);
        }
        else
        {
            if ([resultArray count]) {
                FunctionalLocation *location = [resultArray firstObject];
                return location.locationName;
            }
            
        }
    }
    else if ([keyName isEqualToString:@"EQID"]) {
        AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
        [delegate.coreDataControlObject.context reset];
        NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"Equipment"];
        //if (plantID.length && searchString.length) {
        [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"equipmentID like[cd] %@",keyValue]];
        // }
        NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"equipmentID" ascending:YES];
        [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
        NSError *error;
        NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
        if (error) {
            NSLog(@"%@",error.description);
        }
        else
        {
            if ([resultArray count]) {
                Equipment *equipment = [resultArray firstObject];
                return equipment.equipmentName;
            }
            
        }
    }
    else if ([keyName isEqualToString:@"MID"]) {
        AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
        [delegate.coreDataControlObject.context reset];
        NSFetchRequest *requestFlocation = [NSFetchRequest fetchRequestWithEntityName:@"Material"];
        //if (plantID.length && searchString.length) {
        [requestFlocation setPredicate:[NSPredicate predicateWithFormat:@"materialid like[cd] %@",keyValue]];
        // }
        NSSortDescriptor *descriptor1 = [NSSortDescriptor sortDescriptorWithKey:@"materialname"ascending:YES];
        [requestFlocation setSortDescriptors:[NSArray arrayWithObject:descriptor1]];
        NSError *error;
        NSArray *resultArray = [delegate.coreDataControlObject.context executeFetchRequest:requestFlocation error:&error];
        if (error) {
            NSLog(@"%@",error.description);
        }
        else
        {
            if ([resultArray count]) {
                Material *component = [resultArray firstObject];
                return component.maktx;
            }
            
        }
    }
    
    if ([dataArray count]) {
        return [dataArray firstObject];
    }
    return @"";
}

- (NSString *)fetchNameForIDKeyM:(NSString *)keyName forValue:(NSMutableArray *)keyValue
{
    NSArray *dataArray;
    if ([keyName isEqualToString:@"IGID"]) {
        //component_notificationtype_id
        dataArray = [self fetchColumnM:@"component_description" fromTabe:@"NOTIFICATION_COMPONENTMASTER" condtionColumn:@[@"component_id"] conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"IID"]) {
        dataArray = [self fetchColumnM:@"problem_description" fromTabe:@"NOTIFICATION_COMPONENT_PROBLEMMASTER" condtionColumn:@[@"problem_id",@"problem_component_id"] conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"CGID"]) {
        //,@"causegroup_notificationtype_id
        dataArray = [self fetchColumnM:@"causegroup_description" fromTabe:@"NOTIFICATION_CAUSEGROUPMASTER" condtionColumn:@[@"causegroup_id"] conditionvalue:keyValue];
    }
    else if ([keyName isEqualToString:@"CID"]) {
        dataArray = [self fetchColumnM:@"causecode_description" fromTabe:@"NOTIFICATION_CGROUP_CAUSECODEMASTER" condtionColumn:@[@"causecode_id",@"causecode_cgroup_id"] conditionvalue:keyValue];
    }
    if ([dataArray count]) {
        return [dataArray firstObject];
    }
    return @"";
}

- (NSMutableArray *)fetchColumn:(NSString *)columnName fromTabe:(NSString *)tableName condtionColumn:(NSString *)conditionColumn conditionvalue:(NSString *)value
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select %@ from %@ where %@ = '%@'",columnName,tableName,conditionColumn,value];
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    
    return [NSMutableArray array];
}

- (NSMutableArray *)fetchColumnM:(NSString *)columnName fromTabe:(NSString *)tableName condtionColumn:(NSArray *)conditionColumn conditionvalue:(NSMutableArray *)value
{
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select %@ from %@ where ",columnName,tableName];
    for (int i=0; i<[conditionColumn count]; i++) {
        if (i) {
            [queryString appendString:@" and "];
        }
        [queryString appendFormat:@"%@ = '%@'",[conditionColumn objectAtIndex:i],[value objectAtIndex:i]];
    }
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    return [NSMutableArray array];
}

#pragma mark-
#pragma mark- Read Methods

-(NSMutableArray *)readSqliteFile_BomLookup_EtComponents:(NSString *)str_Bom{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select BomComponent, CompText, Quantity, Unit, Stlkz from BOMLOOKUP_TRANSACTION WHERE Bom = '%@' ORDER BY BomComponent ASC",str_Bom];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

#pragma mark-
#pragma mark- Delete Methods

//delete

-(BOOL)deleteNOTIFICATION_CAUSEGROUPMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_CAUSEGROUPMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_CGROUP_CAUSECODEMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_CGROUP_CAUSECODEMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_COMPONENTMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_COMPONENTMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_COMPONENT_PROBLEMMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_COMPONENT_PROBLEMMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_TASKMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TASKGROUPMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_TASK_TASKGROUPMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_TGROUP_TASKCODEMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_OBJECTMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_OBJECTGROUPMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteNOTIFICATION_OBJECT_OBJECTGROUPMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_OGROUP_OBJECTCODEMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteSyncMapData{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from SYNC_MAP_DATA"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

-(BOOL)deleteAppSettingsData{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from APPSETTINGSMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    return YES;
}

-(BOOL)deleteActivityTypeData{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from ACTIVITYTYPEMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    return YES;
}

-(BOOL)deleteControlKeys{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from CONTROLKEYMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    return YES;
}

-(BOOL)deleteNotificationType{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATIONTYPEMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    return YES;
}

-(BOOL)deleteUserData{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from USERDATAMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    return YES;
}

-(BOOL)deleteCostCenter{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from COSTCENTERMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    return YES;
}


-(BOOL)deleteCONFIRMREASONMASTER{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from GETCONFIRMREASONMASTER"];
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

- (NSMutableArray *)deleteSqliteFile_FuncLocFromCostCenter{
    
    NSArray *aArrDocPath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *aStrDestPath = [NSString stringWithFormat :@"%@/PlantMaintenance.sqlite",[aArrDocPath objectAtIndex :0]];
    
    sqlite3 *sqlite;
    NSMutableArray *arrIfformation;
    
    if(sqlite3_open([aStrDestPath UTF8String], &sqlite)==SQLITE_OK)
    {
        NSString *strQuery =[NSString stringWithFormat :@"delete from FuncLocFromCostCenter"];
        NSLog(@"strstmt  :%@",strQuery);
        
        sqlite3_stmt *compiledStatement;
        arrIfformation  = [[NSMutableArray alloc]init];
        if(sqlite3_prepare_v2(sqlite, [strQuery UTF8String], -1, &compiledStatement, nil)==SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                
            }
            
        }
        
        sqlite3_finalize(compiledStatement);
    }
    
    return arrIfformation;
}

- (NSMutableArray *)deleteSqliteFile_EquipFromCostCenter{
    
    NSArray *aArrDocPath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *aStrDestPath = [NSString stringWithFormat :@"%@/PlantMaintenance.sqlite",[aArrDocPath objectAtIndex :0]];
    
    sqlite3 *sqlite;
    NSMutableArray *arrIfformation;
    
    if(sqlite3_open([aStrDestPath UTF8String], &sqlite)==SQLITE_OK)
    {
        
        NSString *strQuery =[NSString stringWithFormat :@"delete from EquipFromCostCenter"];
        NSLog(@"strstmt  :%@",strQuery);
        
        sqlite3_stmt *compiledStatement;
        arrIfformation  = [[NSMutableArray alloc]init];
        if(sqlite3_prepare_v2(sqlite, [strQuery UTF8String], -1, &compiledStatement, nil)==SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                
            }
            
        }
        
        sqlite3_finalize(compiledStatement);
    }
    
    return arrIfformation;
}

-(BOOL)deleteNotificationPrioirty{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"delete from NOTIFICATION_PRIORITYMASTER"];
    
    [self set_query:queryString];
    
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return YES;
}

- (NSMutableArray *)deleteSqliteFile_BomLookup_ETComponents :(NSString *)BOMEquip{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    if (BOMEquip.length) {
        
        [queryString appendFormat:@"delete from BOMLOOKUP_HEADER where Bom = '%@'; delete from BOMLOOKUP_TRANSACTION where Bom = '%@'",BOMEquip,BOMEquip];
    }
    else{
        
        [queryString appendFormat:@"delete from BOMLOOKUP_HEADER; delete from BOMLOOKUP_TRANSACTION"];
    }
    
    [self set_query:queryString];
    
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    return nil;
}

#pragma mark- request Delegate
- (void)resultData:(NSDictionary *)resultData withErrorDescription:(NSString *)errorDescription requestID:(WebServiceRequest)requestID :(int)statusCode
{
    switch (requestID) {
            
        case GET_NOTIFICATIONNO_DETAILS:
            
            if (!errorDescription.length) {
                
                NSMutableDictionary *parsedDictionary = [[Response sharedInstance] parseForGetNotificationNoDetails:resultData];
                
                if ([parsedDictionary objectForKey:@"resultHeader"]) {
                    NSMutableDictionary *notificationDetailDictionary = [[NSMutableDictionary alloc] init];
                    
                    id responseObject = [parsedDictionary objectForKey:@"resultHeader"];
                    
                    NSMutableArray *notificatinHeaderArray = [[NSMutableArray alloc] init];
                    
                    NSMutableArray *inspectionResultDataArray = [NSMutableArray new];
                    
                    
                    [notificatinHeaderArray addObjectsFromArray:responseObject];
                    
                    NSDictionary *headerDictionary;
                    NSDateFormatter *dateFormate = [[NSDateFormatter alloc] init];
                    [dateFormate setDateFormat:@"yyyy-MM-dd"];
                    
                    for (int i=0; i<[notificatinHeaderArray count]; i++) {
                        if ([[notificatinHeaderArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                            headerDictionary = [notificatinHeaderArray objectAtIndex:i];
                            NSMutableDictionary *currentHeaderDictionary = [[NSMutableDictionary alloc] init];
                            if ([headerDictionary objectForKey:@"BreakdownInd"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"BreakdownInd"] copy] forKey:@"BREAKDOWN"];
                            }
                            else
                            {
                                [currentHeaderDictionary setObject:@" " forKey:@"BREAKDOWN"];
                            }
                            
                            if ([headerDictionary objectForKey:@"FunctionLoc"]) {
                                
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"FunctionLoc"] copy] forKey:@"FID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"FID"];
                            }
                            if ([headerDictionary objectForKey:@"Pltxt"]) {
                                
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Pltxt"] copy] forKey:@"FNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"FNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"NotifShorttxt"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"NotifShorttxt"] copy] forKey:@"SHORTTEXT"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"SHORTTEXT"];
                            }
                            if ([headerDictionary objectForKey:@"NotifType"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"NotifType"] copy] forKey:@"NID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"NID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Qmartx"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Qmartx"] copy] forKey:@"NNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"NNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Qmnum"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Qmnum"] copy] forKey:@"OBJECTID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"OBJECTID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Qmdat"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Qmdat"] copy] forKey:@"QMDAT"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"QMDAT"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"REPORTEDBY"];
                            
                            if ([headerDictionary objectForKey:@"ReportedBy"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"ReportedBy"] copy] forKey:@"NREPORTEDBY"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"NREPORTEDBY"];
                                
                            }
                            
                            if ([headerDictionary objectForKey:@"Equipment"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Equipment"] copy] forKey:@"EQID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"EQID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Eqktx"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Eqktx"] copy] forKey:@"EQNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"EQNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Priority"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Priority"] copy] forKey:@"NPID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"NPID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Priokx"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Priokx"] copy] forKey:@"NPNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"NPNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"MalfuncEddate"]) {
                                
                                NSString *malfunctionEndDateString;
                                
                                if (![NullChecker isNull:[headerDictionary objectForKey:@"MalfuncEddate"]]) {
                                    
                                    if ([[headerDictionary objectForKey:@"MalfuncEddate"] rangeOfString:@"Date"].length) {
                                        
                                        malfunctionEndDateString=[NSString stringWithFormat:@"%@",[dateFormate stringFromDate:[NSDate dateWithTimeIntervalSince1970:[[[[headerDictionary objectForKey:@"MalfuncEddate"] stringByReplacingOccurrencesOfString:@"/Date(" withString:@""] stringByReplacingOccurrencesOfString:@")/" withString:@""] doubleValue]/1000.0]]];
                                        
                                    }
                                    else
                                    {
                                        malfunctionEndDateString=[NSString stringWithFormat:@"%@",[headerDictionary objectForKey:@"MalfuncEddate"]];
                                    }
                                }
                                
                                
                                
                                if (malfunctionEndDateString.length) {
                                    
                                    if ([headerDictionary objectForKey:@"MalfuncEdtime"]) {
                                        
                                        [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@ %@",malfunctionEndDateString,[headerDictionary objectForKey:@"MalfuncEdtime"]] forKey:@"EDATE"];
                                    }
                                    else{
                                        
                                        [currentHeaderDictionary setObject:malfunctionEndDateString forKey:@"EDATE"];
                                    }
                                }
                                
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"EDATE"];
                            }
                            
                            if (![NullChecker isNull:[headerDictionary objectForKey:@"MalfuncStdate"]]) {
                                
                                NSString *malfunctionStartDateString;
                                
                                if ([[headerDictionary objectForKey:@"MalfuncStdate"] rangeOfString:@"Date"].length) {
                                    
                                    malfunctionStartDateString=[NSString stringWithFormat:@"%@",[dateFormate stringFromDate:[NSDate dateWithTimeIntervalSince1970:[[[[headerDictionary objectForKey:@"MalfuncStdate"] stringByReplacingOccurrencesOfString:@"/Date(" withString:@""] stringByReplacingOccurrencesOfString:@")/" withString:@""] doubleValue]/1000.0]]];
                                }
                                else{
                                    
                                    malfunctionStartDateString=[NSString stringWithFormat:@"%@",[headerDictionary objectForKey:@"MalfuncStdate"]];
                                    [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@",[headerDictionary objectForKey:@"MalfuncStdate"]] forKey:@"SDATE"];
                                }
                                
                                if (malfunctionStartDateString.length) {
                                    
                                    if ([headerDictionary objectForKey:@"MalfuncSttime"]) {
                                        
                                        [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@ %@",malfunctionStartDateString,[headerDictionary objectForKey:@"MalfuncSttime"]] forKey:@"SDATE"];
                                    }
                                    else{
                                        
                                        [currentHeaderDictionary setObject:malfunctionStartDateString forKey:@"SDATE"];
                                    }
                                }
                                
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"SDATE"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Werks"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Werks"] forKey:@"PLANTID"];
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Plantname"] forKey:@"PLANTNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"PLANTID"];
                                [currentHeaderDictionary setObject:@"" forKey:@"PLANTNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Arbpl"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Arbpl"] forKey:@"WORKCENTERID"];
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Wkctrname"] forKey:@"WORKCENTERNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"WORKCENTERID"];
                                [currentHeaderDictionary setObject:@"" forKey:@"WORKCENTERNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Xstatus"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Xstatus"] forKey:@"NSTATUS"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"OSNO" forKey:@"NSTATUS"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"DOCS"];
                            
                            if ([headerDictionary objectForKey:@"Docs"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Docs"] forKey:@"DOCS"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"RSDATE"];
                            
                            if ([headerDictionary objectForKey:@"Strmn"]) {
                                
                                if ([headerDictionary objectForKey:@"Strur"]) {
                                    
                                    [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@ %@",[headerDictionary objectForKey:@"Strmn"],[headerDictionary objectForKey:@"Strur"]] forKey:@"RSDATE"];
                                }
                                else{
                                    
                                    [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Strmn"] forKey:@"RSDATE"];
                                }
                                
                                
                                //                                [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@ %@",[headerDictionary objectForKey:@"Strmn"],[headerDictionary objectForKey:@"Strur"]] forKey:@"RSDATE"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"REDATE"];
                            
                            if ([headerDictionary objectForKey:@"Ltrmn"]) {
                                
                                if ([headerDictionary objectForKey:@"Ltrur"]) {
                                    
                                    [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@ %@",[headerDictionary objectForKey:@"Ltrmn"],[headerDictionary objectForKey:@"Ltrur"]] forKey:@"REDATE"];
                                }
                                else{
                                    
                                    [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Ltrmn"] forKey:@"REDATE"];
                                    
                                }
                                //                                [currentHeaderDictionary setObject:[NSString stringWithFormat:@"%@ %@",[headerDictionary objectForKey:@"Ltrmn"],[headerDictionary objectForKey:@"Ltrur"]] forKey:@"REDATE"];
                            }
                            
                            
                            if ([headerDictionary objectForKey:@"ParnrVw"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"ParnrVw"] forKey:@"PARNRID"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"PARNRID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"NameVw"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"NameVw"] forKey:@"PARNRTEXT"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"PARNRTEXT"];
                                
                            }
                            
                            if ([headerDictionary objectForKey:@"Ingrp"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Ingrp"] forKey:@"PLANNERGROUP"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"PLANNERGROUP"];
                                
                            }
                            
                            if ([headerDictionary objectForKey:@"Ingrpname"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Ingrpname"] forKey:@"PLANNERGROUPNAME"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"PLANNERGROUPNAME"];
                                
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"SHIFT"];
                            if ([headerDictionary objectForKey:@"Shift"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Shift"] forKey:@"SHIFT"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"NOOFPERSON"];
                            if ([headerDictionary objectForKey:@"Noofperson"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Noofperson"] forKey:@"NOOFPERSON"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"EFFECTID"];
                            if ([headerDictionary objectForKey:@"Auswk"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Auswk"] forKey:@"EFFECTID"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"EFFECTNAME"];
                            if ([headerDictionary objectForKey:@"Auswkt"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Auswkt"] forKey:@"EFFECTNAME"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"AUFNR"];
                            if ([headerDictionary objectForKey:@"Aufnr"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Aufnr"] forKey:@"AUFNR"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"LONGTEXT"];
                            [currentHeaderDictionary setObject:[[DataBase sharedInstance] fetchNameForIDKey:@"OBJECTID" forValue:[currentHeaderDictionary objectForKey:@"OBJECTID"]] forKey:@"ID"];
                            if (![[currentHeaderDictionary objectForKey:@"ID"] length]) {
                                
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"USR01"];
                            if ([headerDictionary objectForKey:@"Usr01"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr01"] forKey:@"USR01"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"USR02"];
                            if ([headerDictionary objectForKey:@"Usr02"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr02"] forKey:@"USR02"];
                            }
                            
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"NOSYNCLOG"];
                            [currentHeaderDictionary setObject:@"" forKey:@"LATITUDES"];
                            [currentHeaderDictionary setObject:@"" forKey:@"LONGITUDES"];
                            [currentHeaderDictionary setObject:@"" forKey:@"ALTITUDES"];
                            
                            if ([headerDictionary objectForKey:@"EquiHistory"]) {
                                id equipmentHisory = [headerDictionary objectForKey:@"EquiHistory"];
                                if ([equipmentHisory objectForKey:@"item"]) {
                                    equipmentHisory = [equipmentHisory objectForKey:@"item"];
                                    if ([equipmentHisory isKindOfClass:[NSDictionary class]]) {
                                        [currentHeaderDictionary setObject:[NSMutableArray arrayWithObject:equipmentHisory] forKey:@"EQUIPMENTHISTORY"];
                                    }
                                    else if ([equipmentHisory isKindOfClass:[NSArray class]]){
                                        [currentHeaderDictionary setObject:equipmentHisory forKey:@"EQUIPMENTHISTORY"];
                                    }
                                }
                            }
                            
                            if ([headerDictionary objectForKey:@"Fields"]) {
                                NSMutableArray *fieldsMutArray = [NSMutableArray new];
                                NSMutableArray *tempfieldsMutArray = [NSMutableArray new];
                                
                                if ([[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"] isKindOfClass:[NSDictionary class]]) {
                                    [tempfieldsMutArray addObjectsFromArray:[NSMutableArray arrayWithObject:[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"]]];
                                }
                                else if ([[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"] isKindOfClass:[NSArray class]]) {
                                    [tempfieldsMutArray addObjectsFromArray:[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"]];
                                }
                                
                                //                                NSArray *fieldsArray = [[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"];
                                for (int i =0; i<[tempfieldsMutArray count]; i++) {
                                    NSString *fieldValue,*fieldName,*fLabel,*tabName,*dataType,*sequence,*length;
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Fieldname"]]) {
                                        fieldName = @"";
                                    }
                                    else{
                                        fieldName = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Fieldname"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Flabel"]]) {
                                        fLabel = @"";
                                    }
                                    else{
                                        fLabel = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Flabel"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Tabname"]]) {
                                        tabName = @"";
                                    }
                                    else{
                                        tabName = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Tabname"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Value"]]) {
                                        fieldValue = @"";
                                    }
                                    else{
                                        fieldValue = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Value"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Datatype"]]) {
                                        dataType = @"";
                                    }
                                    else{
                                        dataType = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Datatype"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Sequence"]]) {
                                        sequence = @"";
                                    }
                                    else{
                                        sequence = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Sequence"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Length"]]) {
                                        length = @"";
                                    }
                                    else{
                                        length = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Length"];
                                    }
                                    
                                    
                                    [fieldsMutArray addObject:[NSMutableArray arrayWithObjects:@"W",@"WH",tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                }
                                
                                [currentHeaderDictionary setObject:fieldsMutArray forKey:@"CFH"];
                            }
                            
                            [notificationDetailDictionary setObject:[NSMutableArray arrayWithObjects:currentHeaderDictionary,[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array], nil] forKey:[currentHeaderDictionary objectForKey:@"OBJECTID"]];
                        }
                    }
                    
                    [notificatinHeaderArray removeAllObjects];
                    
                    //    resultInspection
                    // resultActivities
                    
                    responseObject = nil;
                    
                    responseObject = [parsedDictionary objectForKey:@"resultInspection"];
                    
                    
                    for (int i = 0; i<[responseObject  count]; i++) {
                        NSDictionary *inspectionresultDictionary;
                        
                        NSMutableArray *resultInpectionsDataArray = [NSMutableArray new];
                        
                        inspectionresultDictionary = [responseObject  objectAtIndex:i];
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Qmnum"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Qmnum"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Aufnr"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Aufnr"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Vornr"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Vornr"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Equnr"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Equnr"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Mdocm"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Mdocm"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Point"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Point"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Mpobj"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Mpobj"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Mpobt"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Mpobt"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Psort"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Psort"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Pttxt"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Pttxt"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Atinn"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Atinn"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Idate"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Idate"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Itime"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Itime"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Mdtxt"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Mdtxt"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Readr"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Readr"]];
                        }
                        
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Atbez"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Atbez"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Msehi"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Msehi"]];
                        }
                        
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Msehl"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Msehl"]];
                        }
                        
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Readc"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Readc"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Desic"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Desic"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Prest"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Prest"]];
                        }
                        
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Docaf"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Docaf"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Codct"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Codct"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Codgr"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Codgr"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Vlcod"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Vlcod"]];
                        }
                        
                        if ([NullChecker isNull:[inspectionresultDictionary objectForKey:@"Action"]]) {
                            [resultInpectionsDataArray addObject:@""];
                        }
                        else{
                            [resultInpectionsDataArray addObject:[inspectionresultDictionary objectForKey:@"Action"]];
                        }
                        
                        [inspectionResultDataArray addObject:resultInpectionsDataArray];
                    }
                    
                    
                    responseObject = nil;
                    NSMutableArray *notificationDocs = [[NSMutableArray alloc] init];
                    
                    if ([parsedDictionary objectForKey:@"resultDocs"]) {
                        responseObject = [parsedDictionary objectForKey:@"resultDocs"];
                        [notificationDocs addObjectsFromArray:responseObject];
                        
                        NSDictionary *DocsDictionary;
                        for (int i =0; i<[notificationDocs count]; i++) {
                            if ([[notificationDocs objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                DocsDictionary = [notificationDocs objectAtIndex:i];
                                if ([notificationDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[DocsDictionary objectForKey:@"Zobjid"] longLongValue]]]) {
                                    NSMutableArray *Docs = [NSMutableArray array];
                                    [Docs addObject:@""];
                                    if ([DocsDictionary objectForKey:@"DocId"]) {
                                        [Docs addObject:[[DocsDictionary objectForKey:@"DocId"] copy]];
                                    }
                                    else{
                                        [Docs addObject:@""];
                                    }
                                    
                                    if ([DocsDictionary objectForKey:@"DocType"]) {
                                        [Docs addObject:[[DocsDictionary objectForKey:@"DocType"] copy]];
                                    }
                                    else{
                                        [Docs addObject:@""];
                                    }
                                    
                                    if ([DocsDictionary objectForKey:@"Filename"]) {
                                        [Docs addObject:[[DocsDictionary objectForKey:@"Filename"] copy]];
                                    }
                                    else{
                                        [Docs addObject:@""];
                                    }
                                    
                                    if ([DocsDictionary objectForKey:@"Filetype"]) {
                                        [Docs addObject:[[DocsDictionary objectForKey:@"Filetype"] copy]];
                                    }
                                    else{
                                        [Docs addObject:@""];
                                    }
                                    
                                    if ([DocsDictionary objectForKey:@"Fsize"]) {
                                        [Docs addObject:[[DocsDictionary objectForKey:@"Fsize"] copy]];
                                    }
                                    else{
                                        [Docs addObject:@""];
                                    }
                                    
                                    if ([DocsDictionary objectForKey:@"Objtype"]) {
                                        [Docs addObject:[[DocsDictionary objectForKey:@"Objtype"] copy]];
                                    }
                                    else{
                                        
                                        [Docs addObject:@""];
                                    }
                                    
                                    [Docs addObject:@""];//Content
                                    [Docs addObject:@""];//Action
                                    
                                    [[[notificationDetailDictionary objectForKey:[DocsDictionary objectForKey:@"Zobjid"]] objectAtIndex:1] addObject:Docs];
                                }
                            }
                        }
                    }
                    
                    responseObject = nil;
                    NSMutableArray *notificationTransactionArray = [[NSMutableArray alloc] init];
                    
                    if ([parsedDictionary objectForKey:@"resultTransactions"]) {
                        responseObject = [parsedDictionary objectForKey:@"resultTransactions"];
                        
                        [notificationTransactionArray addObjectsFromArray:responseObject];
                        
                        NSDictionary *transactionDictionary;
                        
                        for (int i=0; i<[notificationTransactionArray count]; i++) {
                            if ([[notificationTransactionArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                transactionDictionary = [notificationTransactionArray objectAtIndex:i];
                                if ([notificationDetailDictionary objectForKey:[transactionDictionary objectForKey:@"Qmnum"]]) {
                                    NSMutableArray *transactions = [NSMutableArray array];
                                    
                                    [transactions addObject:@""];
                                    [transactions addObject:@""];
                                    if ([transactionDictionary objectForKey:@"ItemdefectGrp"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"ItemdefectGrp"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Defectgrptext"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"Defectgrptext"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItemdefectCod"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"ItemdefectCod"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Defectcodetext"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"Defectcodetext"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                        
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"CauseGrp"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"CauseGrp"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Causegrptext"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"Causegrptext"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"CauseCod"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"CauseCod"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Causecodetext"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"Causecodetext"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItemdefectShtxt"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"ItemdefectShtxt"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    if ([transactionDictionary objectForKey:@"CauseShtxt"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"CauseShtxt"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItemKey"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"ItemKey"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"CauseKey"]) {
                                        [transactions addObject:[[transactionDictionary objectForKey:@"CauseKey"] copy]];
                                    }
                                    else{
                                        [transactions addObject:@""];
                                    }
                                    
                                    [transactions addObject:@""];//Component Status
                                    [transactions addObject:@""];//Item Status
                                    
                                    if ([transactionDictionary objectForKey:@"ItempartGrp"]) {
                                        [transactions addObject:[transactionDictionary objectForKey:@"ItempartGrp"]];
                                    }
                                    else{
                                        
                                        [transactions addObject:@""];//objectPartGroupid
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItempartCod"]) {
                                        [transactions addObject:[transactionDictionary objectForKey:@"ItempartCod"]];
                                    }
                                    else{
                                        
                                        [transactions addObject:@""];//ObjectPartid
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Partgrptext"]) {
                                        [transactions addObject:[transactionDictionary objectForKey:@"Partgrptext"]];
                                    }
                                    else{
                                        
                                        [transactions addObject:@""];//objectPartGrouptext
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Partcodetext"])
                                    {
                                        [transactions addObject:[transactionDictionary objectForKey:@"Partcodetext"]];
                                    }
                                    else{
                                        
                                        [transactions addObject:@""];//ObjectParttext
                                    }
                                    
                                    id customFieldsDamageTransactionsID,customFieldsCauseTransactionsID;
                                    if ([transactionDictionary objectForKey:@"Fields"]) {
                                        NSArray *fieldsArray = [[transactionDictionary objectForKey:@"Fields"] objectForKey:@"item"];
                                        NSMutableArray *transactionsDamageCustomFields = [NSMutableArray array];
                                        NSMutableArray *transactionsCauseCustomFields = [NSMutableArray array];
                                        for (int i =0; i<[fieldsArray count]; i++) {
                                            NSString *fieldValue,*fieldName,*fLabel,*tabName,*docType,*docTypeItem,*dataType,*sequence,*length;
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Fieldname"]]) {
                                                fieldName = @"";
                                            }
                                            else{
                                                fieldName = [[fieldsArray objectAtIndex:i] objectForKey:@"Fieldname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Flabel"]]) {
                                                fLabel = @"";
                                            }
                                            else{
                                                fLabel = [[fieldsArray objectAtIndex:i] objectForKey:@"Flabel"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Tabname"]]) {
                                                tabName = @"";
                                            }
                                            else{
                                                tabName = [[fieldsArray objectAtIndex:i] objectForKey:@"Tabname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Value"]]) {
                                                fieldValue = @"";
                                            }
                                            else{
                                                fieldValue = [[fieldsArray objectAtIndex:i] objectForKey:@"Value"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Zdoctype"]]) {
                                                docType = @"";
                                            }
                                            else{
                                                docType = [[fieldsArray objectAtIndex:i] objectForKey:@"Zdoctype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"ZdoctypeItem"]]) {
                                                docTypeItem = @"";
                                            }
                                            else{
                                                docTypeItem = [[fieldsArray objectAtIndex:i] objectForKey:@"ZdoctypeItem"];
                                            }
                                            
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Datatype"]]) {
                                                dataType = @"";
                                            }
                                            else{
                                                dataType = [[fieldsArray objectAtIndex:i] objectForKey:@"Datatype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Sequence"]]) {
                                                sequence = @"";
                                            }
                                            else{
                                                sequence = [[fieldsArray objectAtIndex:i] objectForKey:@"Sequence"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Length"]]) {
                                                length = @"";
                                            }
                                            else{
                                                length = [[fieldsArray objectAtIndex:i] objectForKey:@"Length"];
                                            }
                                            
                                            if ([docTypeItem isEqualToString:@"QI"]) {
                                                [transactionsDamageCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                            }
                                            else if ([docTypeItem isEqualToString:@"QC"]){
                                                [transactionsCauseCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                            }
                                        }
                                        
                                        customFieldsDamageTransactionsID = transactionsDamageCustomFields;
                                        customFieldsCauseTransactionsID = transactionsCauseCustomFields;
                                    }
                                    
                                    [[[notificationDetailDictionary objectForKey:[transactionDictionary objectForKey:@"Qmnum"]] objectAtIndex:2] addObject:[NSArray arrayWithObjects:transactions,customFieldsDamageTransactionsID,customFieldsCauseTransactionsID, nil]];
                                }
                            }
                        }
                        
                        [notificationTransactionArray removeAllObjects];
                    }
                    
                    
                    responseObject = nil;
                    NSMutableArray *notificationActivitiesArray = [[NSMutableArray alloc] init];
                    
                    if ([parsedDictionary objectForKey:@"resultActivities"]) {
                        responseObject = [parsedDictionary objectForKey:@"resultActivities"];
                        
                        [notificationActivitiesArray addObjectsFromArray:responseObject];
                        
                        NSDictionary *transactionDictionary;
                        
                        for (int i=0; i<[notificationActivitiesArray count]; i++) {
                            if ([[notificationTransactionArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                transactionDictionary = [notificationTransactionArray objectAtIndex:i];
                                if ([notificationDetailDictionary objectForKey:[transactionDictionary objectForKey:@"Qmnum"]]) {
                                    
                                    NSMutableArray *activities = [NSMutableArray array];
                                    
                                    [activities addObject:@""];
                                    [activities addObject:@""];
                                    if ([transactionDictionary objectForKey:@"Actcodetext"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"Actcodetext"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Actgrptext"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"Actgrptext"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Action"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"Action"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ActvCod"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"ActvCod"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                        
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ActvGrp"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"ActvGrp"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ActvKey"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"ActvKey"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ActvShtxt"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"ActvShtxt"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"CauseKey"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"CauseKey"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Defectcodetext"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"Defectcodetext"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    if ([transactionDictionary objectForKey:@"Defectgrptext"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"Defectgrptext"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItemKey"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"ItemKey"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItemdefectCod"]) {
                                        [activities addObject:[[transactionDictionary objectForKey:@"ItemdefectCod"] copy]];
                                    }
                                    else{
                                        [activities addObject:@""];
                                    }
                                    
                                    
                                    if ([transactionDictionary objectForKey:@"ItemdefectGrp"]) {
                                        [activities addObject:[transactionDictionary objectForKey:@"ItemdefectGrp"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                        
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItemdefectShtxt"]) {
                                        [activities addObject:[transactionDictionary objectForKey:@"ItemdefectShtxt"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItempartCod"]) {
                                        [activities addObject:[transactionDictionary objectForKey:@"ItempartCod"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"ItempartGrp"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"ItempartGrp"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Partcodetext"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Partcodetext"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Partgrptext"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Partgrptext"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Qmnum"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Qmnum"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Usr01"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Usr01"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Usr02"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Usr02"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Usr03"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Usr03"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Usr04"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Usr04"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    if ([transactionDictionary objectForKey:@"Usr05"])
                                    {
                                        [activities addObject:[transactionDictionary objectForKey:@"Usr05"]];
                                    }
                                    else{
                                        
                                        [activities addObject:@""];
                                    }
                                    
                                    
                                    id customFieldsDamageTransactionsID,customFieldsCauseTransactionsID;
                                    
                                    if ([transactionDictionary objectForKey:@"Fields"]) {
                                        NSArray *fieldsArray = [[transactionDictionary objectForKey:@"Fields"] objectForKey:@"item"];
                                        NSMutableArray *transactionsDamageCustomFields = [NSMutableArray array];
                                        NSMutableArray *transactionsCauseCustomFields = [NSMutableArray array];
                                        for (int i =0; i<[fieldsArray count]; i++) {
                                            NSString *fieldValue,*fieldName,*fLabel,*tabName,*docType,*docTypeItem,*dataType,*sequence,*length;
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Fieldname"]]) {
                                                fieldName = @"";
                                            }
                                            else{
                                                fieldName = [[fieldsArray objectAtIndex:i] objectForKey:@"Fieldname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Flabel"]]) {
                                                fLabel = @"";
                                            }
                                            else{
                                                fLabel = [[fieldsArray objectAtIndex:i] objectForKey:@"Flabel"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Tabname"]]) {
                                                tabName = @"";
                                            }
                                            else{
                                                tabName = [[fieldsArray objectAtIndex:i] objectForKey:@"Tabname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Value"]]) {
                                                fieldValue = @"";
                                            }
                                            else{
                                                fieldValue = [[fieldsArray objectAtIndex:i] objectForKey:@"Value"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Zdoctype"]]) {
                                                docType = @"";
                                            }
                                            else{
                                                docType = [[fieldsArray objectAtIndex:i] objectForKey:@"Zdoctype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"ZdoctypeItem"]]) {
                                                docTypeItem = @"";
                                            }
                                            else{
                                                docTypeItem = [[fieldsArray objectAtIndex:i] objectForKey:@"ZdoctypeItem"];
                                            }
                                            
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Datatype"]]) {
                                                dataType = @"";
                                            }
                                            else{
                                                dataType = [[fieldsArray objectAtIndex:i] objectForKey:@"Datatype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Sequence"]]) {
                                                sequence = @"";
                                            }
                                            else{
                                                sequence = [[fieldsArray objectAtIndex:i] objectForKey:@"Sequence"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Length"]]) {
                                                length = @"";
                                            }
                                            else{
                                                length = [[fieldsArray objectAtIndex:i] objectForKey:@"Length"];
                                            }
                                            
                                            if ([docTypeItem isEqualToString:@"QI"]) {
                                                [transactionsDamageCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                            }
                                            else if ([docTypeItem isEqualToString:@"QC"]){
                                                [transactionsCauseCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                            }
                                        }
                                        
                                        customFieldsDamageTransactionsID = transactionsDamageCustomFields;
                                        customFieldsCauseTransactionsID = transactionsCauseCustomFields;
                                    }
                                    
                                    [[[notificationDetailDictionary objectForKey:[transactionDictionary objectForKey:@"Qmnum"]] objectAtIndex:2] addObject:[NSArray arrayWithObjects:activities,customFieldsDamageTransactionsID,customFieldsCauseTransactionsID, nil]];
                                }
                            }
                        }
                        
                        [notificationActivitiesArray removeAllObjects];
                    }
                    
                    responseObject = nil;
                    NSMutableArray *notificationTasksArray = [[NSMutableArray alloc] init];
                    
                    if ([parsedDictionary objectForKey:@"resultTasks"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultTasks"];
                        
                        [notificationTasksArray addObjectsFromArray:responseObject];
                        
                        NSDictionary *tasksDictionary;
                        
                        for (int i=0; i<[notificationTasksArray count]; i++) {
                            
                            if ([[notificationTasksArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                tasksDictionary = [notificationTasksArray objectAtIndex:i];
                                if ([notificationDetailDictionary objectForKey:[NSString stringWithFormat:@"%lli",[[tasksDictionary objectForKey:@"Qmnum"] longLongValue]]]) {
                                    
                                    NSMutableArray *tasks = [NSMutableArray array];
                                    
                                    [tasks addObject:@""];
                                    [tasks addObject:@""];
                                    
                                    if ([tasksDictionary objectForKey:@"TaskKey"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"TaskKey"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"TaskGrp"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"TaskGrp"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Taskgrptext"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Taskgrptext"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"TaskCod"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"TaskCod"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Taskcodetext"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Taskcodetext"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"TaskShtxt"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"TaskShtxt"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Parvw"])
                                    {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Parvw"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    [tasks addObject:@""];//processername
                                    
                                    if ([tasksDictionary objectForKey:@"Parnr"])
                                    {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Parnr"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Pster"])
                                    {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Pster"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Peter"])
                                    {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Peter"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Release"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Release"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Complete"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Complete"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Success"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Success"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"ItemKey"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"ItemKey"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    
                                    [tasks addObject:@""];//item status
                                    
                                    ////////////////
                                    
                                    if ([tasksDictionary objectForKey:@"ItempartGrp"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"ItempartGrp"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Partgrptext"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Partgrptext"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"ItempartCod"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"ItempartCod"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Partcodetext"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Partcodetext"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                        
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"ItemdefectGrp"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"ItemdefectGrp"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Defectgrptext"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Defectgrptext"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"ItemdefectCod"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"ItemdefectCod"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Defectcodetext"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Defectcodetext"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"ItemdefectShtxt"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"ItemdefectShtxt"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"UserStatus"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"UserStatus"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"SysStatus"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"SysStatus"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Smsttxt"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Smsttxt"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Smastxt"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Smastxt"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Usr01"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Usr01"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Usr02"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Usr02"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Usr03"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Usr03"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Usr04"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Usr04"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Usr05"]) {
                                        [tasks addObject:[tasksDictionary objectForKey:@"Usr05"]];
                                    }
                                    else{
                                        
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Pstur"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Pstur"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Petur"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Petur"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Erldat"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Erldat"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Erlzeit"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Erlzeit"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    if ([tasksDictionary objectForKey:@"Erlnam"]) {
                                        [tasks addObject:[[tasksDictionary objectForKey:@"Erlnam"] copy]];
                                    }
                                    else{
                                        [tasks addObject:@""];
                                    }
                                    
                                    
                                    id customFieldsTaskTransactionsID;
                                    if ([tasksDictionary objectForKey:@"Fields"]) {
                                        
                                        NSMutableArray *fieldsArray=[NSMutableArray new];
                                        if ([[[tasksDictionary objectForKey:@"Fields"] objectForKey:@"item"] isKindOfClass:[NSDictionary class]]) {
                                            
                                            [fieldsArray addObjectsFromArray:[NSMutableArray arrayWithObject:[[tasksDictionary objectForKey:@"Fields"] objectForKey:@"item"]]];
                                        }
                                        else if ([[[tasksDictionary objectForKey:@"Fields"] objectForKey:@"item"] isKindOfClass:[NSArray class]]){
                                            
                                            [fieldsArray addObjectsFromArray:[[tasksDictionary objectForKey:@"Fields"] objectForKey:@"item"]];
                                        }
                                        
                                        NSMutableArray *taskCodeCustomFields = [NSMutableArray array];
                                        
                                        for (int i =0; i<[fieldsArray count]; i++) {
                                            NSString *fieldValue,*fieldName,*fLabel,*tabName,*docType,*docTypeItem,*dataType,*sequence,*length;
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Fieldname"]]) {
                                                fieldName = @"";
                                            }
                                            else{
                                                fieldName = [[fieldsArray objectAtIndex:i] objectForKey:@"Fieldname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Flabel"]]) {
                                                fLabel = @"";
                                            }
                                            else{
                                                fLabel = [[fieldsArray objectAtIndex:i] objectForKey:@"Flabel"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Tabname"]]) {
                                                tabName = @"";
                                            }
                                            else{
                                                tabName = [[fieldsArray objectAtIndex:i] objectForKey:@"Tabname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Value"]]) {
                                                fieldValue = @"";
                                            }
                                            else{
                                                fieldValue = [[fieldsArray objectAtIndex:i] objectForKey:@"Value"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Zdoctype"]]) {
                                                docType = @"";
                                            }
                                            else{
                                                docType = [[fieldsArray objectAtIndex:i] objectForKey:@"Zdoctype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"ZdoctypeItem"]]) {
                                                docTypeItem = @"";
                                            }
                                            else{
                                                docTypeItem = [[fieldsArray objectAtIndex:i] objectForKey:@"ZdoctypeItem"];
                                            }
                                            
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Datatype"]]) {
                                                dataType = @"";
                                            }
                                            else{
                                                dataType = [[fieldsArray objectAtIndex:i] objectForKey:@"Datatype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Sequence"]]) {
                                                sequence = @"";
                                            }
                                            else{
                                                sequence = [[fieldsArray objectAtIndex:i] objectForKey:@"Sequence"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:i] objectForKey:@"Length"]]) {
                                                length = @"";
                                            }
                                            else{
                                                length = [[fieldsArray objectAtIndex:i] objectForKey:@"Length"];
                                            }
                                            
                                            if ([docTypeItem isEqualToString:@"QT"]) {
                                                [taskCodeCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                            }
                                            
                                        }
                                        
                                        customFieldsTaskTransactionsID = taskCodeCustomFields;
                                        
                                    }
                                    
                                    [[[notificationDetailDictionary objectForKey:[NSString stringWithFormat:@"%lli",[[tasksDictionary objectForKey:@"Qmnum"] longLongValue]]] objectAtIndex:3] addObject:[NSArray arrayWithObjects:tasks,customFieldsTaskTransactionsID, nil]];
                                    
                                }
                            }
                        }
                        
                        [notificationTasksArray removeAllObjects];
                    }
                    
                    responseObject = nil;
                    NSMutableArray *notificationStatusArray = [[NSMutableArray alloc] init];
                    
                    if ([parsedDictionary objectForKey:@"resultNotifStatus"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultNotifStatus"];
                        
                        [notificationStatusArray addObjectsFromArray:responseObject];
                        
                        NSDictionary *notifStatusDictionary;
                        
                        for (int i=0; i<[notificationStatusArray count]; i++) {
                            if ([[notificationStatusArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                notifStatusDictionary = [notificationStatusArray objectAtIndex:i];
                                if ([notificationDetailDictionary objectForKey:[NSString stringWithFormat:@"%lli",[[notifStatusDictionary objectForKey:@"Qmnum"] longLongValue]]]) {
                                    
                                    NSMutableArray *notifStatus = [NSMutableArray array];
                                    
                                    if ([notifStatusDictionary objectForKey:@"Qmnum"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Qmnum"]];
                                    }
                                    else{
                                        
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Aufnr"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Aufnr"]];
                                    }
                                    else{
                                        
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Objnr"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Objnr"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Manum"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Manum"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Stsma"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Stsma"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Inist"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Inist"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Stonr"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Stonr"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Hsonr"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Hsonr"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Nsonr"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Nsonr"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Stat"]) {
                                        [notifStatus addObject:[[notifStatusDictionary objectForKey:@"Stat"] substringToIndex:1]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Act"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Act"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Txt04"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Txt04"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Txt30"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Txt30"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    if ([notifStatusDictionary objectForKey:@"Action"]) {
                                        [notifStatus addObject:[notifStatusDictionary objectForKey:@"Action"]];
                                    }
                                    else{
                                        [notifStatus addObject:@""];
                                    }
                                    
                                    [[[notificationDetailDictionary objectForKey:[NSString stringWithFormat:@"%lli",[[notifStatusDictionary objectForKey:@"Qmnum"] longLongValue]]] lastObject] addObject:notifStatus];
                                }
                            }
                        }
                        
                        [notificationStatusArray removeAllObjects];
                    }
                    
                    responseObject = nil;
                    
                    if ([parsedDictionary objectForKey:@"resultLongText"]) {
                        responseObject = [parsedDictionary objectForKey:@"resultLongText"];
                        NSMutableArray *notificatioTextnArray = [[NSMutableArray alloc] init];
                        
                        [notificatioTextnArray addObjectsFromArray:responseObject];
                        
                        NSDictionary *textDictionary;
                        for (int i=0; i<[notificatioTextnArray count]; i++) {
                            if ([[notificatioTextnArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                textDictionary = [notificatioTextnArray objectAtIndex:i];
                                if ([notificationDetailDictionary objectForKey:[textDictionary objectForKey:@"Qmnum"]]) {
                                    NSMutableDictionary *headerDictionary = [[notificationDetailDictionary objectForKey:[textDictionary objectForKey:@"Qmnum"]] firstObject];
                                    if ([[headerDictionary objectForKey:@"LONGTEXT"] length]) {
                                        [headerDictionary setObject:[NSString stringWithFormat:@"%@\n%@",[headerDictionary objectForKey:@"LONGTEXT"],[textDictionary objectForKey:@"TextLine"]] forKey:@"LONGTEXT"];
                                    }
                                    else
                                    {
                                        [headerDictionary setObject:[NSString stringWithFormat:@"%@",[textDictionary objectForKey:@"TextLine"]] forKey:@"LONGTEXT"];
                                    }
                                }
                            }
                        }
                        
                        [notificationTransactionArray removeAllObjects];
                        responseObject = nil;
                    }
                    
                    NSLog(@"%@",notificationDetailDictionary);
                    
                    NSArray *objectIds = [notificationDetailDictionary allKeys];
                    [[DataBase sharedInstance] deleteinsertDataIntoHeader:@"N"];
                    
                    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
                    {
                        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of Due Notifications received:%lu",(unsigned long)[objectIds count]]];
                    }
                    
                    for (int i=0; i<[objectIds count]; i++) {
                        
                        [[DataBase sharedInstance] insertDataIntoNotificationHeader:[[notificationDetailDictionary objectForKey:[objectIds objectAtIndex:i]] firstObject] withAttachments:[[notificationDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:1] withTransaction:[[notificationDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:2] withActivityCodes:[[notificationDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:2] withTaskcodes:[[notificationDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:4] withInspectionResult:[inspectionResultDataArray copy] withNotifStatusCode:[[notificationDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:4]];
                        
                    }
                }
            }
            
            break;
            
        case GET_ORDERNO_DETAILS:
            if (!errorDescription.length) {
                NSMutableDictionary *parsedDictionary = [[Response sharedInstance] parseForGetOrderDetails:resultData];
                if ([parsedDictionary objectForKey:@"resultHeader"]) {
                    
                    NSMutableDictionary *orderDetailDictionary = [[NSMutableDictionary alloc] init];
                    id responseObject;
                    NSMutableArray *orderOperationArray = [[NSMutableArray alloc] init];
                    NSMutableArray *orderDocsArray = [[NSMutableArray alloc] init];
                    NSMutableArray *orderHeaderArray = [[NSMutableArray alloc] init];
                    NSMutableArray *orderWsmSafetyMeasuresArray = [[NSMutableArray alloc]init];
                    NSMutableArray *orderWcmWorkApprovalListArray = [[NSMutableArray alloc]init];
                    NSMutableArray *orderWcmWorkApplicationListArray = [[NSMutableArray alloc]init];
                    NSMutableArray *orderWcmIssuePermitsArray = [[NSMutableArray alloc]init];
                    NSMutableArray *orderWcmOperationWCDArray = [[NSMutableArray alloc]init];
                    NSMutableArray *orderWcmOperationWCDTaggingConditionsArray = [[NSMutableArray alloc] init];
                    NSMutableArray *orderWcmPermitsStandardCheckPoints = [NSMutableArray new];
                    
                    NSMutableArray *orderStatusArray = [[NSMutableArray alloc] init];
                    NSMutableArray *orderOlistArray = [[NSMutableArray alloc] init];
                    
                    NSMutableArray *orderMeasurementDocumentsArray = [NSMutableArray new];
                    
                    NSDictionary *headerDictionary;
                    
                    responseObject = nil;
                    responseObject = [parsedDictionary objectForKey:@"resultHeader"];
                    
                    [orderHeaderArray addObjectsFromArray:responseObject];
                    
                    NSDateFormatter *dateFormate = [[NSDateFormatter alloc] init];
                    [dateFormate setDateFormat:@"yyyy-MM-dd"];
                    NSMutableDictionary *currentHeaderDictionary;
                    
                    for (int i=0; i<[orderHeaderArray count]; i++) {
                        
                        if ([[orderHeaderArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                            headerDictionary = [orderHeaderArray objectAtIndex:i];
                            currentHeaderDictionary = [[NSMutableDictionary alloc] init];
                            if ([headerDictionary objectForKey:@"Aufnr"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Aufnr"] copy] forKey:@"OBJECTID"];
                            }
                            else
                            {
                                [currentHeaderDictionary setObject:@" " forKey:@"OBJECTID"];
                            }
                            
                            [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Auart"] copy] forKey:@"OID"];
                            
                            if ([NullChecker isNull:[headerDictionary objectForKey:@"Ktext"]]) {
                                [currentHeaderDictionary setObject:@"" forKey:@"SHORTTEXT"];
                            }
                            else{
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Ktext"] copy] forKey:@"SHORTTEXT"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Gltrp"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Gltrp"] forKey:@"EDATE"];
                                
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"EDATE"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Gstrp"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Gstrp"] forKey:@"SDATE"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"SDATE"];
                            }
                            
                            [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Ernam"] copy] forKey:@"REPORTEDBY"];
                            if ([headerDictionary objectForKey:@"Priok"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Priok"] copy] forKey:@"OPID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"OPID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Equnr"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Equnr"] copy] forKey:@"EQID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"EQID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Strno"]) {
                                [currentHeaderDictionary setObject:[[headerDictionary objectForKey:@"Strno"] copy] forKey:@"FID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"FID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Xstatus"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Xstatus"] forKey:@"OSTATUS"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"Assigned" forKey:@"OSTATUS"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Docs"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Docs"] forKey:@"DOCS"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"DOCS"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Werks"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Werks"] forKey:@"PLANTID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"PLANTID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Plantname"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Plantname"] forKey:@"PLANTNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"PLANTNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Arbpl"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Arbpl"] forKey:@"WORKCENTERID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"WORKCENTERID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Wkctrname"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Wkctrname"] forKey:@"WORKCENTERNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"WORKCENTERNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Ausvn"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Ausvn"] forKey:@"MALFUNCTIONSTARTDATE"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"MALFUNCTIONSTARTDATE"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Ausbs"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Ausbs"] forKey:@"MALFUNCTIONENDDATE"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"MALFUNCTIONENDDATE"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Qmnam"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Qmnam"] forKey:@"NREPORTEDBY"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"NREPORTEDBY"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Msaus"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Msaus"] forKey:@"BREAKDOWN"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"BREAKDOWN"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Auswk"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Auswk"] forKey:@"EFFECTID"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"EFFECTID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Auswkt"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Auswkt"] forKey:@"EFFECTNAME"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"EFFECTNAME"];
                            }
                            
                            
                            if ([headerDictionary objectForKey:@"Anlzu"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Anlzu"] forKey:@"SYSTEMCONDITIONID"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"SYSTEMCONDITIONID"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Anlzux"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Anlzux"] forKey:@"SYSTEMCONDITIONTEXT"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"SYSTEMCONDITIONTEXT"];
                            }
                            
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"LATITUDE"];
                            [currentHeaderDictionary setObject:@"" forKey:@"LONGITUDE"];
                            [currentHeaderDictionary setObject:@"" forKey:@"ALTITUDE"];
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"workarea"];
                            [currentHeaderDictionary setObject:@"" forKey:@"costcenter"];
                            
                            if ([headerDictionary objectForKey:@"Kokrs"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Kokrs"] forKey:@"workarea"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Kostl"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Kostl"] forKey:@"costcenter"];
                            }
                            
                            
                            if ([headerDictionary objectForKey:@"EquiHistory"]) {
                                id equipmentHisory = [headerDictionary objectForKey:@"EquiHistory"];
                                if ([equipmentHisory objectForKey:@"item"]) {
                                    equipmentHisory = [equipmentHisory objectForKey:@"item"];
                                    if ([equipmentHisory isKindOfClass:[NSDictionary class]]) {
                                        [currentHeaderDictionary setObject:[NSMutableArray arrayWithObject:equipmentHisory] forKey:@"EQUIPMENTHISTORY"];
                                    }
                                    else if ([equipmentHisory isKindOfClass:[NSArray class]]){
                                        [currentHeaderDictionary setObject:equipmentHisory forKey:@"EQUIPMENTHISTORY"];
                                    }
                                }
                            }
                            
                            if ([headerDictionary objectForKey:@"Fields"]) {
                                NSMutableArray *fieldsMutArray = [NSMutableArray new];
                                NSMutableArray *tempfieldsMutArray = [NSMutableArray new];
                                
                                if ([[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"] isKindOfClass:[NSDictionary class]]) {
                                    [tempfieldsMutArray addObjectsFromArray:[NSMutableArray arrayWithObject:[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"]]];
                                }
                                else if ([[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"] isKindOfClass:[NSArray class]]) {
                                    [tempfieldsMutArray addObjectsFromArray:[[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"]];
                                }
                                
                                //                                NSArray *fieldsArray = [[headerDictionary objectForKey:@"Fields"] objectForKey:@"item"];
                                for (int i =0; i<[tempfieldsMutArray count]; i++) {
                                    NSString *fieldValue,*fieldName,*fLabel,*tabName,*dataType,*sequence,*length;
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Fieldname"]]) {
                                        fieldName = @"";
                                    }
                                    else{
                                        fieldName = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Fieldname"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Flabel"]]) {
                                        fLabel = @"";
                                    }
                                    else{
                                        fLabel = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Flabel"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Tabname"]]) {
                                        tabName = @"";
                                    }
                                    else{
                                        tabName = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Tabname"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Value"]]) {
                                        fieldValue = @"";
                                    }
                                    else{
                                        fieldValue = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Value"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Datatype"]]) {
                                        dataType = @"";
                                    }
                                    else{
                                        dataType = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Datatype"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Sequence"]]) {
                                        sequence = @"";
                                    }
                                    else{
                                        sequence = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Sequence"];
                                    }
                                    
                                    if ([NullChecker isNull:[[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Length"]]) {
                                        length = @"";
                                    }
                                    else{
                                        length = [[tempfieldsMutArray objectAtIndex:i] objectForKey:@"Length"];
                                    }
                                    
                                    
                                    [fieldsMutArray addObject:[NSMutableArray arrayWithObjects:@"W",@"WH",tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                }
                                
                                [currentHeaderDictionary setObject:fieldsMutArray forKey:@"CFH"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"LONGTEXT"];
                            [currentHeaderDictionary setObject:[[DataBase sharedInstance] fetchNameForIDKey:@"ORDEROBJECTID" forValue:[currentHeaderDictionary objectForKey:@"OBJECTID"]] forKey:@"ID"];
                            if (![[currentHeaderDictionary objectForKey:@"ID"] length]) {
                                
                            }
                            
                            if ([headerDictionary objectForKey:@"Auarttext"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Auarttext"] forKey:@"ONAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Priokx"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Priokx"] forKey:@"OPNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"OPNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Pltxt"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Pltxt"] forKey:@"FNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"FNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Eqktx"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Eqktx"] forKey:@"EQNAME"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"EQNAME"];
                            }
                            
                            if ([headerDictionary  objectForKey:@"Bemot"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Bemot"] forKey:@"ACCINCID"];
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Bemot"] forKey:@"ACCINCNAME"];
                            }
                            else{
                                [currentHeaderDictionary setObject:@"" forKey:@"ACCINCID"];
                                [currentHeaderDictionary setObject:@"" forKey:@"ACCINCNAME"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Kokrs"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Kokrs"] forKey:@"workarea"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"workarea"];
                            }
                            
                            if ([headerDictionary objectForKey:@"Kostl"]) {
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Kostl"] forKey:@"costcenter"];
                            }
                            else{
                                
                                [currentHeaderDictionary setObject:@"" forKey:@"costcenter"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"NOSYNCLOG"];
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"QMNUM"];
                            
                            if ([headerDictionary objectForKey:@"Qmnum"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Qmnum"] forKey:@"QMNUM"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"usr01"];
                            if ([headerDictionary objectForKey:@"Usr01"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr01"] forKey:@"usr01"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"usr02"];
                            if ([headerDictionary objectForKey:@"Usr02"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr02"] forKey:@"usr02"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"usr03"];
                            if ([headerDictionary objectForKey:@"Usr03"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr03"] forKey:@"usr03"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"usr04"];
                            if ([headerDictionary objectForKey:@"Usr04"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr04"] forKey:@"usr04"];
                            }
                            
                            [currentHeaderDictionary setObject:@"" forKey:@"usr05"];
                            if ([headerDictionary objectForKey:@"Usr05"]) {
                                
                                [currentHeaderDictionary setObject:[headerDictionary objectForKey:@"Usr04"] forKey:@"usr05"];
                            }
                            
                            [orderDetailDictionary setObject:[NSMutableArray arrayWithObjects:currentHeaderDictionary,[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array],[NSMutableArray array], nil] forKey:[currentHeaderDictionary objectForKey:@"OBJECTID"]];
                        }
                    }
                    
                    [orderHeaderArray removeAllObjects];
                    
                    NSMutableDictionary *orderOlistDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    NSMutableDictionary *tempOlistDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultOrderOlist"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultOrderOlist"];
                        
                        [orderOlistArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderOlistArray count]; i++) {
                            if ([[orderOlistArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderOlistArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                    if ([orderOlistDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                        tempOlistDictionary = [orderOlistDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                        if ([tempOlistDictionary objectForKey:[headerDictionary objectForKey:@"Obknr"]]) {
                                            tempOlistDictionary = [tempOlistDictionary objectForKey:[headerDictionary objectForKey:@"Obknr"]];
                                            [tempOlistDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempOlistDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Obknr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderOlistDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Obknr"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderOlistArray removeAllObjects];
                    
                    NSMutableDictionary *orderDocsDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    NSMutableDictionary *tempDocsDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultDocs"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultDocs"];
                        
                        [orderDocsArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderDocsArray count]; i++) {
                            if ([[orderDocsArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderDocsArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Zobjid"] longLongValue]]]) {
                                    if ([orderDocsDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Zobjid"] longLongValue]]]) {
                                        tempDocsDictionary = [orderDocsDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Zobjid"] longLongValue]]];
                                        if ([tempDocsDictionary objectForKey:[headerDictionary objectForKey:@"Filename"]]) {
                                            tempDocsDictionary = [tempDocsDictionary objectForKey:[headerDictionary objectForKey:@"Filename"]];
                                            [tempDocsDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempDocsDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Filename"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderDocsDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Filename"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Zobjid"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderDocsArray removeAllObjects];
                    
                    NSMutableDictionary *orderTransactionDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    
                    NSMutableDictionary *tempDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultOperationsTransactions"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultOperationsTransactions"];
                        
                        [orderOperationArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderOperationArray count]; i++) {
                            if ([[orderOperationArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderOperationArray objectAtIndex:i];
                                
                                if ([orderDetailDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]]) {
                                    if ([orderTransactionDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]]) {
                                        tempDictionary = [orderTransactionDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]];
                                        if ([tempDictionary objectForKey:[headerDictionary objectForKey:@"Vornr"]]) {
                                            tempDictionary = [tempDictionary objectForKey:[headerDictionary objectForKey:@"Vornr"]];
                                            [tempDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else
                                        {
                                            [tempDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Vornr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderTransactionDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Vornr"]] forKey:[headerDictionary objectForKey:@"Aufnr"]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderOperationArray removeAllObjects];
                    
                    responseObject = nil;
                    NSMutableArray *orderTransactionArray = [[NSMutableArray alloc] init];
                    
                    if ([parsedDictionary objectForKey:@"resultComponentsTransactions"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultComponentsTransactions"];
                        
                        if ([responseObject isKindOfClass:[NSDictionary class]]) {
                            [orderTransactionArray addObject:responseObject];
                        }
                        else if ([responseObject isKindOfClass:[NSArray class]])
                        {
                            [orderTransactionArray addObjectsFromArray:responseObject];
                        }
                        
                        NSDictionary *transactionDictionary;
                        
                        for (int i=0; i<[orderTransactionArray count]; i++) {
                            
                            if ([[orderTransactionArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                
                                transactionDictionary = [orderTransactionArray objectAtIndex:i];
                                
                                if ([orderDetailDictionary objectForKey:[transactionDictionary objectForKey:@"Aufnr"]]) {
                                    
                                    if ([orderTransactionDictionary objectForKey:[transactionDictionary objectForKey:@"Aufnr"]]) {
                                        
                                        tempDictionary = [orderTransactionDictionary objectForKey:[transactionDictionary objectForKey:@"Aufnr"]];
                                        
                                        if ([tempDictionary objectForKey:[transactionDictionary objectForKey:@"Vornr"]]) {
                                            
                                            tempDictionary = [tempDictionary objectForKey:[transactionDictionary objectForKey:@"Vornr"]];
                                            
                                            if ([tempDictionary objectForKey:@"Components"]) {
                                                
                                                NSMutableArray *componentArray = [tempDictionary objectForKey:@"Components"];
                                                
                                                [componentArray addObject:[NSMutableDictionary dictionaryWithDictionary:transactionDictionary]];
                                            }
                                            else
                                            {
                                                [tempDictionary setObject:[NSMutableArray arrayWithObject:[NSMutableDictionary dictionaryWithDictionary:transactionDictionary]] forKey:@"Components"];
                                            }
                                        }
                                        else
                                        {
                                            [tempDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:transactionDictionary] forKey:[transactionDictionary objectForKey:@"Vornr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderTransactionDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:transactionDictionary] forKey:[transactionDictionary objectForKey:@"Vornr"]] forKey:[transactionDictionary objectForKey:@"Aufnr"]];
                                    }
                                }
                            }
                        }
                        
                        [orderTransactionArray removeAllObjects];
                    }
                    
                    NSMutableDictionary *orderMeasurementDocumentsDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    
                    NSMutableDictionary *measureMentDocsDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultMeasurementDocuments"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultMeasurementDocuments"];
                        
                        [orderMeasurementDocumentsArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderMeasurementDocumentsArray count]; i++) {
                            if ([[orderMeasurementDocumentsArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderMeasurementDocumentsArray objectAtIndex:i];
                                
                                if ([orderDetailDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]]) {
                                    if ([orderMeasurementDocumentsDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]]) {
                                        tempDictionary = [orderMeasurementDocumentsDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]];
                                        if ([tempDictionary objectForKey:[headerDictionary objectForKey:@"Mdocm"]]) {
                                            measureMentDocsDictionary = [tempDictionary objectForKey:[headerDictionary objectForKey:@"Mdocm"]];
                                            [measureMentDocsDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else
                                        {
                                            [measureMentDocsDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Mdocm"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderMeasurementDocumentsDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Mdocm"]] forKey:[headerDictionary objectForKey:@"Aufnr"]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderMeasurementDocumentsArray removeAllObjects];
                    
                    NSMutableDictionary *orderWSMSafetyMeasuresDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    NSMutableDictionary *tempWSMSafetyMeasuresDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultWSMSafetyMeasures"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultWSMSafetyMeasures"];
                        
                        [orderWsmSafetyMeasuresArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderWsmSafetyMeasuresArray count]; i++) {
                            
                            if ([[orderWsmSafetyMeasuresArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderWsmSafetyMeasuresArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"EamsAufnr"] longLongValue]]]) {
                                    if ([orderWSMSafetyMeasuresDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"EamsAufnr"] longLongValue]]]) {
                                        tempWSMSafetyMeasuresDictionary = [orderWSMSafetyMeasuresDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"EamsAufnr"] longLongValue]]];
                                        if ([tempWSMSafetyMeasuresDictionary objectForKey:[headerDictionary objectForKey:@"ObjId"]]) {
                                            tempWSMSafetyMeasuresDictionary = [tempWSMSafetyMeasuresDictionary objectForKey:[headerDictionary objectForKey:@"ObjId"]];
                                            [tempWSMSafetyMeasuresDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempWSMSafetyMeasuresDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"ObjId"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderWSMSafetyMeasuresDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"ObjId"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"EamsAufnr"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderWsmSafetyMeasuresArray removeAllObjects];
                    
                    NSMutableDictionary *orderWCMWorkApprovalListDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    NSMutableDictionary *tempWCMWorkApprovalListDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultWorkApprovalsData"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultWorkApprovalsData"];
                        
                        [orderWcmWorkApprovalListArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderWcmWorkApprovalListArray count]; i++) {
                            
                            if ([[orderWcmWorkApprovalListArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderWcmWorkApprovalListArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                    if ([orderWCMWorkApprovalListDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                        tempWCMWorkApprovalListDictionary = [orderWCMWorkApprovalListDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                        if ([tempWCMWorkApprovalListDictionary objectForKey:[headerDictionary objectForKey:@"Wapnr"]]) {
                                            tempWCMWorkApprovalListDictionary = [tempWCMWorkApprovalListDictionary objectForKey:[headerDictionary objectForKey:@"Wapnr"]];
                                            [tempWCMWorkApprovalListDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempWCMWorkApprovalListDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Wapnr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderWCMWorkApprovalListDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Wapnr"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderWcmWorkApprovalListArray removeAllObjects];
                    
                    
                    NSMutableDictionary *orderWCMWorkApplicationListDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    NSMutableDictionary *tempWCMWorkApplicationListDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultWorkApplicationData"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultWorkApplicationData"];
                        
                        [orderWcmWorkApplicationListArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderWcmWorkApplicationListArray count]; i++) {
                            
                            if ([[orderWcmWorkApplicationListArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderWcmWorkApplicationListArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                    if ([orderWCMWorkApplicationListDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                        tempWCMWorkApplicationListDictionary = [orderWCMWorkApplicationListDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                        if ([tempWCMWorkApplicationListDictionary objectForKey:[headerDictionary objectForKey:@"Wapinr"]]) {
                                            tempWCMWorkApplicationListDictionary = [tempWCMWorkApprovalListDictionary objectForKey:[headerDictionary objectForKey:@"Wapinr"]];
                                            [tempWCMWorkApplicationListDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempWCMWorkApplicationListDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Wapinr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderWCMWorkApplicationListDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Wapinr"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderWcmWorkApplicationListArray removeAllObjects];
                    
                    ///
                    NSMutableDictionary *orderWCMIssuePermitsDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    NSMutableDictionary *tempWCMIssuePermitsDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultIssuePermits"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultIssuePermits"];
                        
                        [orderWcmIssuePermitsArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderWcmIssuePermitsArray count]; i++) {
                            
                            if ([[orderWcmIssuePermitsArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderWcmIssuePermitsArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                    if ([orderWCMIssuePermitsDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                        tempWCMIssuePermitsDictionary = [orderWCMIssuePermitsDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                        if ([tempWCMIssuePermitsDictionary objectForKey:[headerDictionary objectForKey:@"Objnr"]]) {
                                            tempWCMIssuePermitsDictionary = [tempWCMIssuePermitsDictionary objectForKey:[headerDictionary objectForKey:@"Objnr"]];
                                            [tempWCMIssuePermitsDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempWCMIssuePermitsDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Objnr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderWCMIssuePermitsDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Objnr"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderWcmIssuePermitsArray removeAllObjects];
                    
                    //
                    
                    responseObject = [parsedDictionary objectForKey:@"resultOperationWCDItemData"];
                    
                    for (int i = 0; i<[responseObject count]; i++) {
                        NSMutableArray *orderDetailWCMOperationWCDTaggingConditionsArray = [NSMutableArray new];
                        
                        tempDictionary = [responseObject objectAtIndex:i];
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Wcnr"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Wcnr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Wcitm"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Wcitm"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Objnr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Itmtyp"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Itmtyp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Seq"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Seq"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Pred"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Pred"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Succ"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Succ"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Ccobj"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Ccobj"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Cctyp"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Cctyp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Stxt"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Stxt"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tggrp"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tggrp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgstep"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgstep"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgproc"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgproc"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgtyp"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgtyp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgseq"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgseq"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgtxt"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgtxt"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Unstep"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Unstep"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Unproc"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Unproc"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Untyp"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Untyp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Unseq"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Unseq"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Untxt"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Untxt"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Phblflg"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Phblflg"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Phbltyp"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Phbltyp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Phblnr"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Phblnr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgflg"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgflg"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgform"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgform"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tgnr"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Tgnr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Unform"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Unform"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Unnr"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Unnr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Control"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Control"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Location"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Location"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Btg"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Btg"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Etg"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Etg"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Bug"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Bug"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Eug"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Eug"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Refobj"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Refobj"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]) {
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMOperationWCDTaggingConditionsArray addObject:[tempDictionary objectForKey:@"Action"]];
                        }
                        
                        [orderWcmOperationWCDTaggingConditionsArray addObject:orderDetailWCMOperationWCDTaggingConditionsArray];
                    }
                    
                    ///
                    responseObject = nil;
                    
                    responseObject = [parsedDictionary objectForKey:@"resultStandardCheckPoints"];
                    
                    for (int i = 0; i<[responseObject count]; i++) {
                        
                        NSMutableArray *orderDetailWCMStandardCheckPointsArray = [NSMutableArray new];
                        
                        tempDictionary = [responseObject objectAtIndex:i];
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Wapinr"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Wapinr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Wapityp"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Wapityp"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Needid"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Needid"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Value"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Value"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"ChkPointType"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"ChkPointType"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Desctext"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Desctext"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Tplnr"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Tplnr"]];
                        }
                        
                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Equnr"]]) {
                            [orderDetailWCMStandardCheckPointsArray addObject:@""];
                        }
                        else{
                            [orderDetailWCMStandardCheckPointsArray addObject:[tempDictionary objectForKey:@"Equnr"]];
                        }
                        
                        [orderWcmPermitsStandardCheckPoints addObject:orderDetailWCMStandardCheckPointsArray];
                    }
                    
                    NSMutableDictionary *orderWCMOperationWCDDictionary = [[NSMutableDictionary alloc] init];
                    responseObject = nil;
                    
                    NSMutableDictionary *tempWCMOperationWCDDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultOperationWCDData"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultOperationWCDData"];
                        
                        [orderWcmOperationWCDArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderWcmOperationWCDArray count]; i++) {
                            
                            if ([[orderWcmOperationWCDArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                headerDictionary = [orderWcmOperationWCDArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                    if ([orderWCMOperationWCDDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]]) {
                                        tempWCMOperationWCDDictionary = [orderWCMOperationWCDDictionary objectForKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                        if ([tempWCMOperationWCDDictionary objectForKey:[headerDictionary objectForKey:@"Wcnr"]]) {
                                            tempWCMOperationWCDDictionary = [tempWCMOperationWCDDictionary objectForKey:[headerDictionary objectForKey:@"Wcnr"]];
                                            [tempWCMOperationWCDDictionary addEntriesFromDictionary:headerDictionary];
                                        }
                                        else{
                                            [tempWCMOperationWCDDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Wcnr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderWCMOperationWCDDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Wcnr"]] forKey:[NSString stringWithFormat:@"%lld",[[headerDictionary objectForKey:@"Aufnr"] longLongValue]]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderWcmOperationWCDArray removeAllObjects];
                    
                    ///
                    responseObject = nil;
                    
                    NSMutableDictionary *orderStatusDictionary = [[NSMutableDictionary alloc] init];
                    
                    NSMutableDictionary *tempOrderStatusDictionary;
                    
                    if ([parsedDictionary objectForKey:@"resultOrderStatus"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultOrderStatus"];
                        
                        [orderStatusArray addObjectsFromArray:responseObject];
                        
                        for (int i=0; i<[orderStatusArray count]; i++) {
                            
                            if ([[orderStatusArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                
                                headerDictionary = [orderStatusArray objectAtIndex:i];
                                
                                if ([orderDetailDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]]) {
                                    
                                    if ([orderStatusDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]]) {
                                        
                                        tempOrderStatusDictionary = [orderStatusDictionary objectForKey:[headerDictionary objectForKey:@"Aufnr"]];
                                        
                                        if ([tempOrderStatusDictionary objectForKey:[headerDictionary objectForKey:@"Objnr"]]) {
                                            
                                            tempOrderStatusDictionary = [tempOrderStatusDictionary objectForKey:[headerDictionary objectForKey:@"Objnr"]];
                                            
                                            if ([tempOrderStatusDictionary objectForKey:@"SystemStatus"]) {
                                                
                                                NSMutableArray *systemStatusArray = [tempOrderStatusDictionary objectForKey:@"SystemStatus"];
                                                
                                                [systemStatusArray addObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary]];
                                            }
                                            else
                                            {
                                                [tempOrderStatusDictionary setObject:[NSMutableArray arrayWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary]] forKey:@"SystemStatus"];
                                            }
                                        }
                                        else
                                        {
                                            [tempOrderStatusDictionary setObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Objnr"]];
                                        }
                                    }
                                    else
                                    {
                                        [orderStatusDictionary setObject:[NSMutableDictionary dictionaryWithObject:[NSMutableDictionary dictionaryWithDictionary:headerDictionary] forKey:[headerDictionary objectForKey:@"Objnr"]] forKey:[headerDictionary objectForKey:@"Aufnr"]];
                                    }
                                }
                            }
                        }
                    }
                    
                    [orderStatusArray removeAllObjects];
                    
                    if ([parsedDictionary objectForKey:@"resultLongText"]) {
                        
                        responseObject = [parsedDictionary objectForKey:@"resultLongText"];
                        
                        NSMutableArray *orderTextnArray = [[NSMutableArray alloc] init];
                        if ([responseObject isKindOfClass:[NSDictionary class]]) {
                            [orderTextnArray addObject:responseObject];
                        }
                        else if ([responseObject isKindOfClass:[NSArray class]])
                        {
                            [orderTextnArray addObjectsFromArray:responseObject];
                        }
                        
                        NSDictionary *textDictionary;
                        for (int i=0; i<[orderTextnArray count]; i++) {
                            if ([[orderTextnArray objectAtIndex:i] isKindOfClass:[NSDictionary class]]) {
                                textDictionary = [orderTextnArray objectAtIndex:i];
                                if ([orderDetailDictionary objectForKey:[textDictionary objectForKey:@"Aufnr"]]) {
                                    if ([textDictionary objectForKey:@"Activity"]) {
                                        tempDictionary = [orderTransactionDictionary objectForKey:[textDictionary objectForKey:@"Aufnr"]];
                                        if (tempDictionary) {
                                            tempDictionary = [tempDictionary objectForKey:[textDictionary objectForKey:@"Activity"]];
                                            if (tempDictionary) {
                                                id longText = [tempDictionary objectForKey:@"OPTLONGTEXT"];
                                                NSString *textLine = [textDictionary objectForKey:@"TextLine"];
                                                if (!textLine.length) {
                                                    textLine = @"";
                                                }
                                                if ([longText length]) {
                                                    [tempDictionary setObject:[NSString stringWithFormat:@"%@\n%@",longText,textLine] forKey:@"OPTLONGTEXT"];
                                                }
                                                else
                                                {
                                                    [tempDictionary setObject:[NSString stringWithString:textLine] forKey:@"OPTLONGTEXT"];
                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        NSMutableDictionary *headerDictionary = [[orderDetailDictionary objectForKey:[textDictionary objectForKey:@"Aufnr"]] firstObject];
                                        NSString *textLine = [textDictionary objectForKey:@"TextLine"];
                                        
                                        if (!textLine.length) {
                                            textLine = @"";
                                        }
                                        
                                        if ([[headerDictionary objectForKey:@"LONGTEXT"] length]) {
                                            [headerDictionary setObject:[NSString stringWithFormat:@"%@\n%@",[headerDictionary objectForKey:@"LONGTEXT"],textLine] forKey:@"LONGTEXT"];
                                        }
                                        else
                                        {
                                            [headerDictionary setObject:[NSString stringWithFormat:@"%@",textLine] forKey:@"LONGTEXT"];
                                        }
                                    }
                                }
                            }
                        }
                        
                        [orderTransactionArray removeAllObjects];
                    }
                    
                    /////
                    responseObject = nil;
                    
                    [orderWcmWorkApplicationListArray addObjectsFromArray:[orderWCMWorkApplicationListDictionary allKeys]];
                    
                    NSArray *recordIDWCMWorkApplicationListArray;
                    NSDictionary *WCMWorkApplicationListDictionary;
                    
                    for (int i =0; i<[orderWcmWorkApplicationListArray  count]; i++) {
                        
                        NSMutableArray *wcmWorkApplicationListArray = [NSMutableArray new];
                        
                        WCMWorkApplicationListDictionary = [orderWCMWorkApplicationListDictionary objectForKey:[orderWcmWorkApplicationListArray objectAtIndex:i]];
                        recordIDWCMWorkApplicationListArray = [WCMWorkApplicationListDictionary allKeys];
                        
                        for (int j=0; j<[recordIDWCMWorkApplicationListArray count]; j++) {
                            
                            NSMutableArray *orderDetailWCMWorkApplicationListArray = [NSMutableArray new];
                            
                            tempDictionary = [WCMWorkApplicationListDictionary objectForKey:[recordIDWCMWorkApplicationListArray objectAtIndex:j]];
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objart"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Objart"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Wapinr"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Wapinr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Iwerk"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Iwerk"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objtyp"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Objtyp"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usage"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Usage"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usagex"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Usagex"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Train"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Train"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Trainx"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Trainx"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Anlzu"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Anlzu"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Anlzux"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Anlzux"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Etape"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Etape"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Etapex"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Etapex"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Stxt"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Stxt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Datefr"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Datefr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Timefr"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Timefr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Dateto"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Dateto"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Timeto"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Timeto"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Priok"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Priok"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Priokx"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Priokx"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rctime"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Rctime"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rcunit"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Rcunit"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Objnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Refobj"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Refobj"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Crea"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Crea"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Prep"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Prep"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Comp"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Comp"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Appr"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Appr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]) {
                                [orderDetailWCMWorkApplicationListArray addObject:@""];//Action
                            }
                            else{
                                [orderDetailWCMWorkApplicationListArray addObject:[tempDictionary objectForKey:@"Action"]];
                            }
                            
                            [wcmWorkApplicationListArray addObject:orderDetailWCMWorkApplicationListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderWcmWorkApplicationListArray objectAtIndex:i]] replaceObjectAtIndex:8 withObject:wcmWorkApplicationListArray];
                    }
                    
                    [orderWcmWorkApplicationListArray removeAllObjects];
                    
                    /////
                    responseObject = nil;
                    
                    [orderWcmOperationWCDArray addObjectsFromArray:[orderWCMOperationWCDDictionary allKeys]];
                    
                    NSArray *recordIDWCMOperationWCDListArray;
                    NSDictionary *WCMOperationWCDListDictionary;
                    
                    for (int i =0; i<[orderWcmOperationWCDArray  count]; i++) {
                        
                        NSMutableArray *wcmOperationWCDListArray = [NSMutableArray new];
                        
                        WCMOperationWCDListDictionary = [orderWCMOperationWCDDictionary objectForKey:[orderWcmOperationWCDArray objectAtIndex:i]];
                        recordIDWCMOperationWCDListArray = [WCMOperationWCDListDictionary allKeys];
                        
                        for (int j=0; j<[recordIDWCMOperationWCDListArray count]; j++) {
                            
                            NSMutableArray *orderDetailWCMOperationWCDListArray = [NSMutableArray new];
                            
                            tempDictionary = [WCMOperationWCDListDictionary objectForKey:[recordIDWCMOperationWCDListArray objectAtIndex:j]];
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objart"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Objart"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Wcnr"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Wcnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Iwerk"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Iwerk"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objtyp"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Objtyp"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usage"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Usage"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usagex"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Usagex"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Train"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Train"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Trainx"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Trainx"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Anlzu"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Anlzu"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Anlzux"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Anlzux"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Etape"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Etape"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Etapex"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Etapex"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Stxt"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Stxt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Datefr"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Datefr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Timefr"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Timefr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Dateto"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Dateto"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Timeto"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Timeto"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Priok"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Priok"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Priokx"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Priokx"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rctime"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Rctime"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rcunit"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Rcunit"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Objnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Refobj"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Refobj"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Crea"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Crea"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Prep"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Prep"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Comp"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Comp"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Appr"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Appr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]) {
                                [orderDetailWCMOperationWCDListArray addObject:@""];//Action
                            }
                            else{
                                [orderDetailWCMOperationWCDListArray addObject:[tempDictionary objectForKey:@"Action"]];
                            }
                            
                            [wcmOperationWCDListArray addObject:orderDetailWCMOperationWCDListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderWcmOperationWCDArray objectAtIndex:i]] replaceObjectAtIndex:10 withObject:wcmOperationWCDListArray];
                    }
                    
                    [orderWcmWorkApplicationListArray removeAllObjects];
                    
                    /////
                    responseObject = nil;
                    
                    [orderWcmWorkApprovalListArray addObjectsFromArray:[orderWCMWorkApprovalListDictionary allKeys]];
                    
                    NSArray *recordIDWCMWorkApprovalListArray;
                    NSDictionary *WCMWorkApprovalListDictionary;
                    
                    for (int i =0; i<[orderWcmWorkApprovalListArray  count]; i++) {
                        
                        WCMWorkApprovalListDictionary = [orderWCMWorkApprovalListDictionary objectForKey:[orderWcmWorkApprovalListArray objectAtIndex:i]];
                        recordIDWCMWorkApprovalListArray = [WCMWorkApprovalListDictionary allKeys];
                        NSMutableArray *wcmWorkApprovalListArray = [NSMutableArray new];
                        
                        for (int j=0; j<[recordIDWCMWorkApprovalListArray count]; j++) {
                            
                            NSMutableArray *orderDetailWCMWorkApprovalListArray = [NSMutableArray new];
                            
                            tempDictionary = [WCMWorkApprovalListDictionary objectForKey:[recordIDWCMWorkApprovalListArray objectAtIndex:j]];
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objart"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Objart"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Wapnr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Wapnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Iwerk"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Iwerk"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usage"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Usage"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usagex"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Usagex"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Train"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Train"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Trainx"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Trainx"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Anlzu"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Anlzu"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Anlzux"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Anlzux"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Etape"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Etape"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Etapex"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Etapex"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Stxt"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Stxt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Datefr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Datefr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Timefr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Timefr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Dateto"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Dateto"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Timeto"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Timeto"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Priok"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Priok"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Priokx"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Priokx"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rctime"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Rctime"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rcunit"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Rcunit"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Objnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Refobj"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Refobj"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Crea"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Crea"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Prep"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Prep"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Comp"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Comp"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Appr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Appr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Pappr"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Pappr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]) {
                                [orderDetailWCMWorkApprovalListArray addObject:@""];//Action
                            }
                            else{
                                [orderDetailWCMWorkApprovalListArray addObject:[tempDictionary objectForKey:@"Action"]];
                            }
                            
                            [wcmWorkApprovalListArray addObject:orderDetailWCMWorkApprovalListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderWcmWorkApprovalListArray objectAtIndex:i]] replaceObjectAtIndex:1 withObject:wcmWorkApprovalListArray];
                    }
                    
                    [orderWcmWorkApprovalListArray removeAllObjects];
                    
                    /////
                    responseObject = nil;
                    
                    [orderWcmIssuePermitsArray addObjectsFromArray:[orderWCMIssuePermitsDictionary allKeys]];
                    
                    NSArray *recordIDWCMIssuePermitsArray;
                    NSDictionary *WCMIssuePermitsDictionary;
                    
                    for (int i =0; i<[orderWcmIssuePermitsArray  count]; i++) {
                        
                        WCMIssuePermitsDictionary = [orderWCMIssuePermitsDictionary objectForKey:[orderWcmIssuePermitsArray objectAtIndex:i]];
                        recordIDWCMIssuePermitsArray = [WCMIssuePermitsDictionary allKeys];
                        NSMutableArray *wcmIssuePermitsArray = [NSMutableArray new];
                        
                        for (int j=0; j<[recordIDWCMIssuePermitsArray count]; j++) {
                            
                            NSMutableArray *orderDetailWCMIssuePermitsArray = [NSMutableArray new];
                            
                            tempDictionary = [WCMIssuePermitsDictionary objectForKey:[recordIDWCMIssuePermitsArray objectAtIndex:j]];
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Objnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Counter"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Counter"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Werks"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Werks"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Crname"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Crname"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objart"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Objart"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objtyp"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Objtyp"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Pmsog"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Pmsog"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Gntxt"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Gntxt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Geniakt"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Geniakt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Genvname"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Genvname"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Hilvl"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Hilvl"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Procflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Procflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Direction"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Direction"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Copyflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Copyflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Mandflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Mandflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Deacflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Deacflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Status"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Status"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Asgnflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Asgnflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Autoflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Autoflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Agent"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Agent"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Valflg"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Valflg"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Wcmuse"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Wcmuse"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]) {
                                [orderDetailWCMIssuePermitsArray addObject:@""];
                            }
                            else{
                                [orderDetailWCMIssuePermitsArray addObject:[tempDictionary objectForKey:@"Action"]];
                            }
                            
                            [wcmIssuePermitsArray addObject:orderDetailWCMIssuePermitsArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderWcmIssuePermitsArray objectAtIndex:i]] replaceObjectAtIndex:9 withObject:wcmIssuePermitsArray];
                    }
                    
                    [orderWcmIssuePermitsArray removeAllObjects];
                    
                    //////////
                    [orderDocsArray addObjectsFromArray:[orderDocsDictionary allKeys]];
                    NSArray *recordIDDocsArray;
                    NSDictionary *docsDictionary;
                    
                    for (int i =0; i<[orderDocsArray  count]; i++) {
                        docsDictionary = [orderDocsDictionary objectForKey:[orderDocsArray objectAtIndex:i]];
                        recordIDDocsArray = [docsDictionary allKeys];
                        NSMutableArray *orderDocsListArray = [NSMutableArray new];
                        
                        for (int j=0; j<[recordIDDocsArray count]; j++) {
                            NSMutableArray *orderDetailDocsListArray = [NSMutableArray new];
                            
                            tempDictionary = [docsDictionary objectForKey:[recordIDDocsArray objectAtIndex:j]];
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Zobjid"]]) {
                                [orderDetailDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"Zobjid"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"DocId"]]) {
                                [orderDetailDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"DocId"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"DocType"]]) {
                                [orderDetailDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"DocType"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Filename"]]) {
                                [orderDetailDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"Filename"]];
                            }
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Filetype"]]) {
                                [orderDetailDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"Filetype"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Fsize"]]) {
                                
                                [orderDetailDocsListArray addObject:@""];//Size
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"Fsize"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objtype"]]) {
                                
                                [orderDetailDocsListArray addObject:@""];//Objtype
                            }
                            else{
                                [orderDetailDocsListArray addObject:[tempDictionary objectForKey:@"Objtype"]];
                            }
                            
                            [orderDetailDocsListArray addObject:@""];//Content
                            [orderDetailDocsListArray addObject:@""];//Action
                            
                            [orderDocsListArray addObject:orderDetailDocsListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderDocsArray objectAtIndex:i]] replaceObjectAtIndex:2 withObject:orderDocsListArray];
                    }
                    
                    [orderDocsArray removeAllObjects];
                    
                    [orderTransactionArray addObjectsFromArray:[orderTransactionDictionary allKeys]];
                    NSArray *recordIDArray;
                    NSDictionary *componentDictionary;
                    
                    for (int i =0; i<[orderTransactionArray  count]; i++) {
                        componentDictionary = [orderTransactionDictionary objectForKey:[orderTransactionArray objectAtIndex:i]];
                        recordIDArray = [componentDictionary allKeys];
                        NSMutableArray *orderTransactionListArray = [NSMutableArray new];
                        NSMutableArray *orderPartsListArray = [NSMutableArray new];
                        
                        for (int j=0; j<[recordIDArray count]; j++) {
                            
                            NSMutableArray *orderDetailTransactionListArray = [NSMutableArray new];
                            
                            tempDictionary = [componentDictionary objectForKey:[recordIDArray objectAtIndex:j]];
                            
                            //CREATE TABLE "ORDER_TRANSACTION" ("ordert_header_id" VARCHAR,"ordert_vornr_operation" VARCHAR,"ordert_operation_name" VARCHAR,"ordert_duration_name" VARCHAR,"ordert_duration_id" VARCHAR,"ordert_fsavd" VARCHAR,"ordert_ssedd" VARCHAR,"ordert_rueck" VARCHAR,"ordert_aueru" VARCHAR,"ordert_operation_action" VARCHAR,"ordert_status" VARCHAR,"ordert_conftext" VARCHAR,"ordert_actwork" VARCHAR,"ordert_unwork" VARCHAR,"ordert_larnt" VARCHAR,"ordert_pernr" VARCHAR,"ordert_plnal" VARCHAR,"ordert_plnnr" VARCHAR,"ordert_plnty" VARCHAR,"ordert_steus" VARCHAR,"ordert_operationlongtext" VARCHAR,"usr01" VARCHAR,"bemot" VARCHAR,"grund" VARCHAR,"learr" VARCHAR,"leknw" VARCHAR,"operation_plantid" VARCHAR,"operation_plantname" VARCHAR,"operation_workcenterid" VARCHAR,"operation_workcentertext" VARCHAR,"ordert_steustext" VARCHAR)
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Aufnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Vornr"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Vornr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Ltxa1"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Ltxa1"]];//Operation short text
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Dauno"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Dauno"]];//duration
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Daune"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Daune"]];//duration id
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Fsavd"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Fsavd"]];//date
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Ssedd"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Ssedd"]];//date
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Rueck"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Rueck"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aueru"]]) {
                                [orderDetailTransactionListArray addObject:@""];//for aueru
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Aueru"]];
                            }
                            
                            [orderDetailTransactionListArray addObject:@""];//For OperationAction
                            [orderDetailTransactionListArray addObject:@""];//For Status
                            [orderDetailTransactionListArray addObject:@""];//For Confirmation text in Confirm Order
                            [orderDetailTransactionListArray addObject:@""];//For Actual Work Text
                            [orderDetailTransactionListArray addObject:@""];//For Actual Work Units
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Larnt"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Larnt"]];//Activity Type
                            }
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Pernr"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Pernr"]];//Personal No
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Plnal"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Plnal"]];//Group Counter
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Plnnr"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Plnnr"]];//key for task list group
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Plnty"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Plnty"]];//Task list type
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Steus"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Steus"]];//Control Key
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"OPTLONGTEXT"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"OPTLONGTEXT"]];
                            }//For Long Text
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Usr01"]]) {
                                [orderDetailTransactionListArray addObject:@""];
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Usr01"]];
                            }//For Actual Work
                            
                            [orderDetailTransactionListArray addObject:@""];//Bemot(Accounting Indicator)
                            [orderDetailTransactionListArray addObject:@""];//grund(ConfirmReason)
                            [orderDetailTransactionListArray addObject:@""];//Learr(noRemainingWork)
                            [orderDetailTransactionListArray addObject:@""];//Leknw(confirmreason)
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Werks"]]) {
                                [orderDetailTransactionListArray addObject:@""];//Werks
                                
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Werks"]];//Werks
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"WerksText"]]) {
                                [orderDetailTransactionListArray addObject:@""];//WerksText
                                
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"WerksText"]];//WersText
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Arbpl"]]) {
                                [orderDetailTransactionListArray addObject:@""];//Arbpl
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"Arbpl"]];//Arbpl
                                
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"ArbplText"]]) {
                                [orderDetailTransactionListArray addObject:@""];//ArbplText
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"ArbplText"]];//ArbplText
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"SteusText"]]) {
                                [orderDetailTransactionListArray addObject:@""];//SteusText
                            }
                            else{
                                [orderDetailTransactionListArray addObject:[tempDictionary objectForKey:@"SteusText"]];//SteusText
                            }
                            
                            id customFieldsOperationsTransactionsID;
                            if ([tempDictionary objectForKey:@"Fields"]) {
                                NSArray *fieldsArray = [[tempDictionary objectForKey:@"Fields"] objectForKey:@"item"];
                                NSMutableArray *transactionsOperationsCustomFields = [NSMutableArray new];
                                for (int l =0; l<[fieldsArray count]; l++) {
                                    NSString *fieldValue,*fieldName,*fLabel,*tabName,*docType,*docTypeItem,*dataType,*sequence,*length;
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Fieldname"]]) {
                                        fieldName = @"";
                                    }
                                    else{
                                        fieldName = [[fieldsArray objectAtIndex:l] objectForKey:@"Fieldname"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Flabel"]]) {
                                        fLabel = @"";
                                    }
                                    else{
                                        fLabel = [[fieldsArray objectAtIndex:l] objectForKey:@"Flabel"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Tabname"]]) {
                                        tabName = @"";
                                    }
                                    else{
                                        tabName = [[fieldsArray objectAtIndex:l] objectForKey:@"Tabname"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Value"]]) {
                                        fieldValue = @"";
                                    }
                                    else{
                                        fieldValue = [[fieldsArray objectAtIndex:l] objectForKey:@"Value"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Zdoctype"]]) {
                                        docType = @"";
                                    }
                                    else{
                                        docType = [[fieldsArray objectAtIndex:l] objectForKey:@"Zdoctype"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"ZdoctypeItem"]]) {
                                        docTypeItem = @"";
                                    }
                                    else{
                                        docTypeItem = [[fieldsArray objectAtIndex:l] objectForKey:@"ZdoctypeItem"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Datatype"]]) {
                                        dataType = @"";
                                    }
                                    else{
                                        dataType = [[fieldsArray objectAtIndex:l] objectForKey:@"Datatype"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Sequence"]]) {
                                        sequence = @"";
                                    }
                                    else{
                                        sequence = [[fieldsArray objectAtIndex:l] objectForKey:@"Sequence"];
                                    }
                                    
                                    if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Length"]]) {
                                        length = @"";
                                    }
                                    else{
                                        length = [[fieldsArray objectAtIndex:l] objectForKey:@"Length"];
                                    }
                                    
                                    if ([docTypeItem isEqualToString:@"WO"]) {
                                        [transactionsOperationsCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                    }
                                }
                                
                                customFieldsOperationsTransactionsID = transactionsOperationsCustomFields;
                            }
                            
                            [orderTransactionListArray addObject:[NSArray arrayWithObjects:orderDetailTransactionListArray,customFieldsOperationsTransactionsID, nil]];
                            
                            if ([tempDictionary objectForKey:@"Components"]) {
                                
                                //CREATE TABLE "ORDER_PARTS" ("ordert_header_id" VARCHAR, "ordert_vornr_operation" VARCHAR, "ordert_quantity" INTEGER, "ordert_lgort" VARCHAR, "ordert_lgorttext" VARCHAR, "ordert_matnr" VARCHAR, "ordert_matnrtext" VARCHAR, "ordert_meins" VARCHAR, "ordert_posnr" VARCHAR, "ordert_postp" VARCHAR, "ordert_postptext" VARCHAR, "ordert_rsnum" VARCHAR, "ordert_rspos" VARCHAR, "ordert_werks" VARCHAR, "ordert_werkstext" VARCHAR)
                                
                                for (int k =0; k<[[tempDictionary objectForKey:@"Components"] count]; k++) {
                                    
                                    NSMutableArray *orderDetailComponentTransactionListArray = [NSMutableArray new];
                                    
                                    NSDictionary *tempCompenetsDictionary = [[tempDictionary objectForKey:@"Components"] objectAtIndex:k];
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Aufnr"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Aufnr"]];
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Vornr"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Vornr"]];
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Bdmng"]]) {
                                        
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Bdmng"]];//Quantity
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Lgort"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Lgort"]];
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"LgortText"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"LgortText"]];
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Matnr"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Matnr"]];//ComponentID
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"MatnrText"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"MatnrText"]];//ComponentName
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Meins"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Meins"]];//Meins
                                        
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Posnr"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Posnr"]];
                                    }
                                    
                                    if([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Postp"]]){
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Postp"]];//Item Category in Components
                                    }
                                    
                                    if([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"PostpText"]]){
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"PostpText"]];//Item Category in Components
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Rsnum"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Rsnum"]];
                                    }
                                    
                                    if ([NullChecker isNull:[tempCompenetsDictionary objectForKey:@"Rspos"]]) {
                                        [orderDetailComponentTransactionListArray addObject:@""];
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Rspos"]];
                                    }
                                    
                                    if ([tempCompenetsDictionary objectForKey:@"Werks"]) {
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"Werks"]];//Werks
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:@""];//Werks
                                    }
                                    
                                    if ([tempCompenetsDictionary objectForKey:@"WerksText"]) {
                                        [orderDetailComponentTransactionListArray addObject:[tempCompenetsDictionary objectForKey:@"WerksText"]];//Werks
                                    }
                                    else{
                                        [orderDetailComponentTransactionListArray addObject:@""];//WerksText
                                    }
                                    
                                    [orderDetailComponentTransactionListArray addObject:@""];//ComponentAction
                                    
                                    id customFieldsComponentsTransactionsID;
                                    NSMutableArray *transactionsComponentsCustomFields = [NSMutableArray new];
                                    
                                    if ([tempCompenetsDictionary objectForKey:@"Fields"]) {
                                        NSArray *fieldsArray = [[tempCompenetsDictionary objectForKey:@"Fields"] objectForKey:@"item"];
                                        
                                        for (int l =0; l<[fieldsArray count]; l++) {
                                            NSString *fieldValue,*fieldName,*fLabel,*tabName,*docType,*docTypeItem,*dataType,*sequence,*length;
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Fieldname"]]) {
                                                fieldName = @"";
                                            }
                                            else{
                                                fieldName = [[fieldsArray objectAtIndex:l] objectForKey:@"Fieldname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Flabel"]]) {
                                                fLabel = @"";
                                            }
                                            else{
                                                fLabel = [[fieldsArray objectAtIndex:l] objectForKey:@"Flabel"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Tabname"]]) {
                                                tabName = @"";
                                            }
                                            else{
                                                tabName = [[fieldsArray objectAtIndex:l] objectForKey:@"Tabname"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Value"]]) {
                                                fieldValue = @"";
                                            }
                                            else{
                                                fieldValue = [[fieldsArray objectAtIndex:l] objectForKey:@"Value"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Zdoctype"]]) {
                                                docType = @"";
                                            }
                                            else{
                                                docType = [[fieldsArray objectAtIndex:l] objectForKey:@"Zdoctype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"ZdoctypeItem"]]) {
                                                docTypeItem = @"";
                                            }
                                            else{
                                                docTypeItem = [[fieldsArray objectAtIndex:l] objectForKey:@"ZdoctypeItem"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Datatype"]]) {
                                                dataType = @"";
                                            }
                                            else{
                                                dataType = [[fieldsArray objectAtIndex:l] objectForKey:@"Datatype"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Sequence"]]) {
                                                sequence = @"";
                                            }
                                            else{
                                                sequence = [[fieldsArray objectAtIndex:l] objectForKey:@"Sequence"];
                                            }
                                            
                                            if ([NullChecker isNull:[[fieldsArray objectAtIndex:l] objectForKey:@"Length"]]) {
                                                length = @"";
                                            }
                                            else{
                                                length = [[fieldsArray objectAtIndex:l] objectForKey:@"Length"];
                                            }
                                            
                                            if ([docTypeItem isEqualToString:@"WC"]){
                                                [transactionsComponentsCustomFields addObject:[NSMutableArray arrayWithObjects:docType,docTypeItem,tabName,fieldName,fieldValue,fLabel,dataType,sequence,length, nil]];
                                            }
                                        }
                                        
                                        customFieldsComponentsTransactionsID = transactionsComponentsCustomFields;
                                    }
                                    
                                    [orderPartsListArray addObject:[NSArray arrayWithObjects:orderDetailComponentTransactionListArray,customFieldsComponentsTransactionsID, nil]];
                                }
                            }
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderTransactionArray objectAtIndex:i]] replaceObjectAtIndex:3 withObject:orderTransactionListArray];
                        
                        [[orderDetailDictionary objectForKey:[orderTransactionArray objectAtIndex:i]] replaceObjectAtIndex:4 withObject:orderPartsListArray];
                    }
                    
                    [orderTransactionArray removeAllObjects];
                    
                    ////////////
                    
                    [orderWsmSafetyMeasuresArray addObjectsFromArray:[orderWSMSafetyMeasuresDictionary allKeys]];
                    
                    NSArray *recordIDWSMSafetyMeasuresArray;
                    NSDictionary *WSMSafetyMeasuresDictionary;
                    
                    for (int i =0; i<[orderWsmSafetyMeasuresArray count]; i++) {
                        
                        WSMSafetyMeasuresDictionary = [orderWSMSafetyMeasuresDictionary objectForKey:[orderWsmSafetyMeasuresArray objectAtIndex:i]];
                        recordIDWSMSafetyMeasuresArray = [WSMSafetyMeasuresDictionary allKeys];
                        NSMutableArray *orderWSMSafetyMeasuresListArray = [NSMutableArray new];
                        
                        //CREATE TABLE "ORDER_WSM_SAFETYMEASURES" ("orderwsm_header_id" VARCHAR, "orderwsm_aufnr" VARCHAR, "orderwsm_vornr_operation" VARCHAR,"orderwsm_description" VARCHAR, "orderwsm_safety_text_no" VARCHAR, "orderwsm_objid" VARCHAR, "orderwsm_objtype" VARCHAR, "orderwsm_safetychar" VARCHAR, "orderwsm_safetychar_text" VARCHAR, "orderwsm_action" VARCHAR)
                        
                        for (int j=0; j<[recordIDWSMSafetyMeasuresArray count]; j++) {
                            
                            NSMutableArray *orderDetailWSMSafetyListArray = [NSMutableArray new];
                            
                            tempDictionary = [WSMSafetyMeasuresDictionary objectForKey:[recordIDWSMSafetyMeasuresArray objectAtIndex:j]];
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"EamsAufnr"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                [orderDetailWSMSafetyListArray addObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"EamsAufnr"] longLongValue]]];
                            }
                            
                            
                            [orderDetailWSMSafetyListArray addObject:@""];//operation
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Description"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                [orderDetailWSMSafetyListArray addObject:[tempDictionary objectForKey:@"Description"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"EamsSafetyTextNo"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                [orderDetailWSMSafetyListArray addObject:[tempDictionary objectForKey:@"EamsSafetyTextNo"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"ObjId"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                [orderDetailWSMSafetyListArray addObject:[tempDictionary objectForKey:@"ObjId"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"ObjType"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                
                                if ([[tempDictionary objectForKey:@"ObjType"] isEqualToString:@"DO"]) {
                                    
                                    [orderDetailWSMSafetyListArray addObject:@"Document"];
                                }
                                else{
                                    
                                    [orderDetailWSMSafetyListArray addObject:[tempDictionary objectForKey:@"ObjType"]];
                                }
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"SafetyChar"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                [orderDetailWSMSafetyListArray addObject:[tempDictionary objectForKey:@"SafetyChar"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"SafetyCharTxt"]]) {
                                [orderDetailWSMSafetyListArray addObject:@""];
                            }
                            else{
                                [orderDetailWSMSafetyListArray addObject:[tempDictionary objectForKey:@"SafetyCharTxt"]];
                            }
                            
                            [orderDetailWSMSafetyListArray addObject:@""];//selection
                            
                            [orderWSMSafetyMeasuresListArray addObject:orderDetailWSMSafetyListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderWsmSafetyMeasuresArray objectAtIndex:i]] replaceObjectAtIndex:5 withObject:orderWSMSafetyMeasuresListArray];
                    }
                    
                    [orderWsmSafetyMeasuresArray removeAllObjects];
                    
                    ///////////
                    
                    [orderStatusArray addObjectsFromArray:[orderStatusDictionary allKeys]];
                    
                    NSArray *recordIDorderStatusArray;
                    NSDictionary *EtorderStatusDictionary;
                    
                    for (int i =0; i<[orderStatusArray count]; i++) {
                        
                        EtorderStatusDictionary = [orderStatusDictionary objectForKey:[orderStatusArray objectAtIndex:i]];
                        recordIDorderStatusArray = [EtorderStatusDictionary allKeys];
                        
                        NSMutableArray *orderStatusDetailArray = [NSMutableArray new];
                        
                        BOOL act = NO;
                        
                        for (int j=0; j<[recordIDorderStatusArray count]; j++) {
                            
                            NSMutableDictionary *orderStatusListDictionary = [NSMutableDictionary new];
                            
                            tempDictionary = [EtorderStatusDictionary objectForKey:[recordIDorderStatusArray objectAtIndex:j]];
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_aufnr"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]] forKey:@"orders_aufnr"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Vornr"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_vornr_operation"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Vornr"] forKey:@"orders_vornr_operation"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                                
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_objnr"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Objnr"] forKey:@"orders_objnr"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Stsma"]]) {
                                
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_stsma"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Stsma"] forKey:@"orders_stsma"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Inist"]]) {
                                
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_inist"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Inist"] forKey:@"orders_inist"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Stonr"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_stonr"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Stonr"] forKey:@"orders_stonr"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Hsonr"]]) {
                                
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_hsonr"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Hsonr"] forKey:@"orders_hsonr"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Nsonr"]]) {
                                
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_nsonr"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Nsonr"] forKey:@"orders_nsonr"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Stat"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_stat"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[[tempDictionary objectForKey:@"Stat"] substringToIndex:1] forKey:@"orders_stat"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Act"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_act"];
                                
                                if (act ==YES) {
                                    [orderStatusListDictionary setObject:@"" forKey:@"orders_selected"];//Selection
                                }
                                else{
                                    
                                    [orderStatusListDictionary setObject:@"Y" forKey:@"orders_selected"];//Selection
                                }
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Act"] forKey:@"orders_act"];
                                [orderStatusListDictionary setObject:@"X" forKey:@"orders_selected"];//Selection
                                if ([[[tempDictionary objectForKey:@"Stat"] substringToIndex:1] isEqualToString:@"E"]) {
                                    act = YES;
                                }
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Txt04"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_txt04"];
                            }
                            else{
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Txt04"] forKey:@"orders_txt04"];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Txt30"]]) {
                                [orderStatusListDictionary setObject:@"" forKey:@"orders_txt30"];
                            }
                            else{
                                
                                [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Txt30"] forKey:@"orders_txt30"];
                            }
                            
                            [orderStatusDetailArray addObject:orderStatusListDictionary];
                            
                            if ([tempDictionary objectForKey:@"SystemStatus"]) {
                                
                                if ([[tempDictionary objectForKey:@"SystemStatus"] isKindOfClass:[NSArray class]]) {
                                    
                                    id systemStatus = [tempDictionary objectForKey:@"SystemStatus"];
                                    
                                    for (int k =0 ; k <[systemStatus count]; k++) {
                                        
                                        NSMutableDictionary *orderStatusListDictionary = [NSMutableDictionary new];
                                        
                                        tempDictionary = [systemStatus objectAtIndex:k];
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_aufnr"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]] forKey:@"orders_aufnr"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Vornr"]]) {
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_vornr_operation"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Vornr"] forKey:@"orders_vornr_operation"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Objnr"]]) {
                                            
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_objnr"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Objnr"] forKey:@"orders_objnr"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Stsma"]]) {
                                            
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_stsma"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Stsma"] forKey:@"orders_stsma"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Inist"]]) {
                                            
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_inist"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Inist"] forKey:@"orders_inist"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Stonr"]]) {
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_stonr"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Stonr"] forKey:@"orders_stonr"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Hsonr"]]) {
                                            
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_hsonr"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Hsonr"] forKey:@"orders_hsonr"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Nsonr"]]) {
                                            
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_nsonr"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Nsonr"] forKey:@"orders_nsonr"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Stat"]]) {
                                            
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_stat"];
                                        }
                                        else{
                                            
                                            if ([[[tempDictionary objectForKey:@"Stat"] substringToIndex:1] isEqualToString:@"I"]) {
                                                
                                                [orderStatusListDictionary setObject:[[tempDictionary objectForKey:@"Stat"] substringToIndex:1] forKey:@"orders_stat"];
                                            }
                                            else{
                                                
                                                [orderStatusListDictionary setObject:[[tempDictionary objectForKey:@"Stat"] substringToIndex:1] forKey:@"orders_stat"];
                                                
                                            }
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Act"]]) {
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_act"];
                                            if (act ==YES) {
                                                [orderStatusListDictionary setObject:@"" forKey:@"orders_selected"];//Selection
                                            }
                                            else{
                                                [orderStatusListDictionary setObject:@"Y" forKey:@"orders_selected"];//Selection
                                            }
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Act"] forKey:@"orders_act"];
                                            
                                            [orderStatusListDictionary setObject:@"X" forKey:@"orders_selected"];//Selection
                                            
                                            if ([[[tempDictionary objectForKey:@"Stat"] substringToIndex:1] isEqualToString:@"E"]) {
                                                act = YES;
                                            }
                                            
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Txt04"]]) {
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_txt04"];
                                        }
                                        else{
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Txt04"] forKey:@"orders_txt04"];
                                        }
                                        
                                        if ([NullChecker isNull:[tempDictionary objectForKey:@"Txt30"]]) {
                                            [orderStatusListDictionary setObject:@"" forKey:@"orders_txt30"];
                                        }
                                        else{
                                            
                                            [orderStatusListDictionary setObject:[tempDictionary objectForKey:@"Txt30"] forKey:@"orders_txt30"];
                                        }
                                        
                                        [orderStatusDetailArray addObject:orderStatusListDictionary];
                                    }
                                }
                            }
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderStatusArray objectAtIndex:i]] replaceObjectAtIndex:6 withObject:orderStatusDetailArray];
                    }
                    
                    [orderStatusArray removeAllObjects];
                    
                    ////////////
                    
                    [orderOlistArray addObjectsFromArray:[orderOlistDictionary allKeys]];
                    
                    NSArray *recordOlistArray;
                    NSDictionary *orderObjectlistDictionary;
                    
                    for (int i =0; i<[orderOlistArray count]; i++) {
                        
                        orderObjectlistDictionary = [orderOlistDictionary objectForKey:[orderOlistArray objectAtIndex:i]];
                        recordOlistArray = [orderObjectlistDictionary allKeys];
                        NSMutableArray *orderObjectListArray = [NSMutableArray new];
                        
                        //CREATE TABLE "ORDER_OBJECTS" ("orderobject_header_id" VARCHAR, "orderobject_aufnr" VARCHAR, "orderobject_obknr" VARCHAR, "orderobject_obzae" VARCHAR, "orderobject_qmnum" VARCHAR, "orderobject_equnr" VARCHAR, "orderobject_strno" VARCHAR, "orderobject_tplnr" VARCHAR, "orderobject_bautl" VARCHAR, "orderobject_qmtxt" VARCHAR, "orderobject_pltxt" VARCHAR, "orderobject_eqktx" VARCHAR, "orderobject_maktx" VARCHAR, "orderobject_action" VARCHAR)
                        
                        for (int j=0; j<[recordOlistArray count]; j++) {
                            
                            NSMutableArray *orderDetailObjectListArray = [NSMutableArray new];
                            
                            tempDictionary = [orderObjectlistDictionary objectForKey:[recordOlistArray objectAtIndex:j]];
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[NSString stringWithFormat:@"%lld",[[tempDictionary objectForKey:@"Aufnr"] longLongValue]]];
                            }
                            
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Obknr"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Obknr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Obzae"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Obzae"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Qmnum"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Qmnum"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Equnr"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Equnr"]];
                                
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Strno"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Strno"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Tplnr"]]) {
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Tplnr"]];
                            }
                            
                            if([NullChecker isNull:[tempDictionary objectForKey:@"Bautl"]]){
                                
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Bautl"]];
                            }
                            
                            if([NullChecker isNull:[tempDictionary objectForKey:@"Qmtxt"]]){
                                
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Qmtxt"]];
                            }
                            
                            if([NullChecker isNull:[tempDictionary objectForKey:@"Pltxt"]]){
                                
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Pltxt"]];
                            }
                            
                            if([NullChecker isNull:[tempDictionary objectForKey:@"Eqktx"]]){
                                
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Eqktx"]];
                            }
                            
                            if([NullChecker isNull:[tempDictionary objectForKey:@"Maktx"]]){
                                
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Maktx"]];
                            }
                            
                            if([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]){
                                
                                [orderDetailObjectListArray addObject:@""];
                            }
                            else{
                                [orderDetailObjectListArray addObject:[tempDictionary objectForKey:@"Action"]];
                            }
                            
                            [orderObjectListArray addObject:orderDetailObjectListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderOlistArray objectAtIndex:i]] replaceObjectAtIndex:7 withObject:orderObjectListArray];
                    }
                    
                    [orderOlistArray removeAllObjects];
                    
                    ////////////
                    
                    responseObject = nil;
                    
                    [orderMeasurementDocumentsArray addObjectsFromArray:[orderMeasurementDocumentsDictionary allKeys]];
                    
                    NSArray *recordIDMDocsArray;
                    NSDictionary *mDocsDictionary;
                    
                    for (int i =0; i<[orderMeasurementDocumentsArray  count]; i++) {
                        mDocsDictionary = [orderMeasurementDocumentsDictionary objectForKey:[orderMeasurementDocumentsArray objectAtIndex:i]];
                        recordIDMDocsArray = [mDocsDictionary allKeys];
                        NSMutableArray *orderDocsListArray = [NSMutableArray new];
                        
                        for (int j=0; j<[recordIDMDocsArray count]; j++) {
                            NSMutableArray *orderDetailMDocsListArray = [NSMutableArray new];
                            
                            tempDictionary = [mDocsDictionary objectForKey:[recordIDMDocsArray objectAtIndex:j]];
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Qmnum"]]) {
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Qmnum"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Aufnr"]]) {
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Aufnr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Vornr"]]) {
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Vornr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Mdocm"]]) {
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Mdocm"]];
                            }
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Point"]]) {
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Point"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Mpobj"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Mpobj"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Mpobt"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Mpobt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Psort"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Psort"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Pttxt"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Pttxt"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Atinn"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Atinn"]];
                            }
                            
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Idate"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Idate"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Itime"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Itime"]];
                            }
                            
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Mdtxt"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Mdtxt"]];
                            }
                            
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Readr"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Readr"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Atbez"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Atbez"]];
                            }
                            
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Msehi"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];//
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Msehi"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Msehl"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Msehl"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Readc"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Readc"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Desic"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Desic"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Prest"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Prest"]];
                            }
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Docaf"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Docaf"]];
                            }
                            
                            
                            if ([NullChecker isNull:[tempDictionary objectForKey:@"Action"]]) {
                                
                                [orderDetailMDocsListArray addObject:@""];
                            }
                            else{
                                [orderDetailMDocsListArray addObject:[tempDictionary objectForKey:@"Action"]];
                            }
                            
                            
                            [orderDocsListArray addObject:orderDetailMDocsListArray];
                        }
                        
                        [[orderDetailDictionary objectForKey:[orderMeasurementDocumentsArray objectAtIndex:i]] replaceObjectAtIndex:11 withObject:orderDocsListArray];
                    }
                    
                    [orderMeasurementDocumentsArray removeAllObjects];
                    
                    ///
                    
                    NSArray *objectIds = [orderDetailDictionary allKeys];
                    
                    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
                    {
                        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#No of Due Orders received:%lu",(unsigned long)[objectIds count]]];
                    }
                    
                    for (int i=0; i<[objectIds count]; i++) {
                        
                        if (i ==1) {
                            
                            [orderWcmOperationWCDTaggingConditionsArray removeAllObjects];
                            [orderWcmPermitsStandardCheckPoints removeAllObjects];
                        }
                        
                        [[DataBase sharedInstance] insertDataIntoOrderHeader:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] firstObject] withAttachments:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:2] withPermitWorkApprovalsDetails:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:1] withOperation:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:3] withParts:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:4] withWSM:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:5] withObjects:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:7] withSystemStatus:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:6] withPermitsWorkApplications:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:8] withIssuePermits:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:9] withPermitsOperationWCD:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:10] withPermitsOperationWCDTagiingConditions:orderWcmOperationWCDTaggingConditionsArray withPermitsStandardCheckPoints:orderWcmPermitsStandardCheckPoints withMeasurementDocs:[[orderDetailDictionary objectForKey:[objectIds objectAtIndex:i]] objectAtIndex:11]];
                    }
                }
            }
            
            break;
            
        default :break;
    }
}

- (NSArray *)getPriorityListOrders:(NSString *)getFilteredList
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"select distinct orderh_id, orderh_type_id , orderh_type_name , orderh_shorttext , orderh_longtext , orderh_funcloc_id , orderh_funcloc_name , orderh_euipno_id , orderh_euipno_name , orderh_accindicator_id , orderh_accindicator_name , orderh_priority_id, orderh_priority_name, orderh_startdate , orderh_enddate , orderh_plant_id, orderh_plant_name, orderh_workcenter_id, orderh_workcenter_name, orderh_latitudes, orderh_longitudes, orderh_altitudes, orderh_reported_by, orderh_status, oh_objectID, oh_docs, orderh_kokrs, orderh_kostl, orderh_qmnum, orderh_malf_sdate, orderh_malf_edate, orderh_effect_id, orderh_msaus, orderh_Nreported_by, orderh_effect_name, orderh_systemcondition_id, orderh_systemcondition_text, orderh_user02 from ORDER_HEADER"];
    
    if ([getFilteredList length]) {
        
        [queryString appendFormat:@" where %@",getFilteredList];
    }
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    return statusFilters;
}


- (NSArray *)getSortedListOrders:(NSString *)getSortedList
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters;
    
    statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"select * from ORDER_HEADER"];
    
    if ([getSortedList length]) {
        
        [queryString appendFormat:@" ORDER BY %@",getSortedList];
    }
    
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    
    return statusFilters;
}

- (NSArray *)getAllOrders
{
    
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *allNotificationsArray = [NSMutableArray new];
    
    [queryString appendFormat:@"select * from ORDER_HEADER"];
    
    if ([self set_query:queryString]) {
        
        [allNotificationsArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    return allNotificationsArray;
    
}

- (NSArray *)getSortedListOrdersfor:(NSString *)equipmentId
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters;
    
    statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"SELECT distinct orderh_id, orderh_type_id , orderh_type_name , orderh_shorttext , orderh_longtext , orderh_funcloc_id , orderh_funcloc_name , orderh_euipno_id , orderh_euipno_name , orderh_accindicator_id , orderh_accindicator_name , orderh_priority_id, orderh_priority_name, orderh_startdate , orderh_enddate , orderh_plant_id, orderh_plant_name, orderh_workcenter_id, orderh_workcenter_name, orderh_latitudes, orderh_longitudes, orderh_altitudes, orderh_reported_by, orderh_status, oh_objectID, oh_docs, orderh_kokrs, orderh_kostl, orderh_qmnum, orderh_malf_sdate, orderh_malf_edate, orderh_effect_id, orderh_msaus, orderh_Nreported_by, orderh_effect_name, orderh_systemcondition_id, orderh_systemcondition_text FROM ORDER_HEADER where orderh_euipno_id='%@' ORDER BY orderh_priority_id ASC",equipmentId];
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return statusFilters;
}

- (NSArray *)getMapData:(NSString *)OrderId
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters;
    
    statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"SELECT distinct orderh_latitudes, orderh_longitudes, orderh_altitudes FROM ORDER_HEADER where oh_objectID='%@'",OrderId];
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return statusFilters;
}

- (NSArray *)getMapAllData
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *mapStatusFilters;
    
    mapStatusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"SELECT orderh_latitudes, orderh_longitudes, orderh_altitudes, oh_objectID FROM ORDER_HEADER"];
    
    if ([self set_query:queryString]) {
        
        [mapStatusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return mapStatusFilters;
}

- (NSArray *)getOrderforMplan:(NSString *)objectId
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *statusFilters;
    
    statusFilters = [NSMutableArray new];
    
    [queryString appendFormat:@"SELECT distinct orderh_id, orderh_type_id , orderh_type_name , orderh_shorttext , orderh_longtext , orderh_funcloc_id , orderh_funcloc_name , orderh_euipno_id , orderh_euipno_name , orderh_accindicator_id , orderh_accindicator_name , orderh_priority_id, orderh_priority_name, orderh_startdate , orderh_enddate , orderh_plant_id, orderh_plant_name, orderh_workcenter_id, orderh_workcenter_name, orderh_latitudes, orderh_longitudes, orderh_altitudes, orderh_reported_by, orderh_status, oh_objectID, oh_docs, orderh_kokrs, orderh_kostl, orderh_qmnum, orderh_malf_sdate, orderh_malf_edate, orderh_effect_id, orderh_msaus, orderh_Nreported_by, orderh_effect_name, orderh_systemcondition_id, orderh_systemcondition_text FROM ORDER_HEADER where oh_objectID='%@' ORDER BY orderh_priority_id ASC",objectId];
    
    if ([self set_query:queryString]) {
        
        [statusFilters addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return statusFilters;
}


//WCM

-(NSMutableArray *)insertWCMTypes :(NSMutableArray *)wcmTypesArray
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@"DELETE from WCM_TYPES"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //CREATE TABLE "WCM_TYPES" ("owcm_header_id" VARCHAR, "owcm_werks" VARCHAR, "owcm_objart" VARCHAR, "owcm_text" VARCHAR, "Objtyp" VARCHAR)
    
    for (int i=0; i<[wcmTypesArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into WCM_TYPES (owcm_header_id, owcm_werks, owcm_objart, owcm_text,Objtyp) values('','%@','%@','%@','%@')",[[wcmTypesArray objectAtIndex:i] objectForKey:@"Iwerk"] ,[[wcmTypesArray objectAtIndex:i] objectForKey:@"Objart"] ,[[wcmTypesArray objectAtIndex:i] objectForKey:@"Stxt"] ,[[wcmTypesArray objectAtIndex:i] objectForKey:@"Objtyp"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)insertWCMIsolation :(NSMutableArray *)wcmIsloationArray
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@"DELETE from WCM_ISOLATION_MASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    // CREATE TABLE "WCM_ISOLATION_MASTER" ("Iwerk" VARCHAR, "Tggrp" VARCHAR, "Tgproc" VARCHAR, "Tgtyp" VARCHAR, "Unproc" VARCHAR, "Untyp" VARCHAR, "Phblflg" VARCHAR, "Tgflg" VARCHAR, "Usable" VARCHAR, "Tgprocx" VARCHAR)
    
    for (int i=0; i<[wcmIsloationArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into WCM_ISOLATION_MASTER (Iwerk, Tggrp, Tgproc, Tgtyp, Unproc,Untyp,Phblflg,Tgflg,Usable,Tgprocx) values('%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Iwerk"] ,[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Tggrp"] ,[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Tgproc"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Tgtyp"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Unproc"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Untyp"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Phblflg"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Tgflg"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Usable"],[[wcmIsloationArray objectAtIndex:i] objectForKey:@"Tgprocx"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return [NSMutableArray array];
}


-(NSMutableArray *)insertetUsersTokenId :(NSMutableArray *)usersTokenIdArray
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    [queryString setString:@"DELETE from USER_TOKENIDS"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //CREATE TABLE "WCM_CHECKREQUEST" ("orderwcm_wapinr" VARCHAR,"orderwcm_wapityp" VARCHAR,"orderwcm_needid" VARCHAR,"orderwcm_value" VARCHAR,"orderwcm_chkpointtype" VARCHAR,"orderwcm_desctext" VARCHAR,"orderwcm_tplnr" VARCHAR,"orderwcm_equnr" VARCHAR)
    
    for (int i=0; i<[usersTokenIdArray count]; i++) {
        
        [queryString setString:@""];
        
        NSString *tokenIdString;
        
        if (![NullChecker isNull:[[usersTokenIdArray objectAtIndex:i] objectForKey:@"Tokenid"]]) {
            tokenIdString=[[usersTokenIdArray objectAtIndex:i] objectForKey:@"Tokenid"];
        }
        
        else{
            tokenIdString=@"";
        }
        
        [queryString appendFormat:@"insert into USER_TOKENIDS (user_header_id, Muser, Fname, LName, TokenId) values('%@','%@','%@','%@','%@')",@"",[[usersTokenIdArray objectAtIndex:i] objectForKey:@"Muser"],[[usersTokenIdArray objectAtIndex:i] objectForKey:@"Fname"],[[usersTokenIdArray objectAtIndex:i] objectForKey:@"Lname"],tokenIdString];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)insertUserChatHistory :(NSMutableArray *)usersChatName withMessage:(NSString *)message
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    NSDateFormatter *getDate = [[NSDateFormatter alloc] init];
    [getDate setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSArray *dateTimeArray = [NSArray arrayWithArray:[[getDate stringFromDate:[NSDate date]] componentsSeparatedByString:@" "]];
    
    NSString *dateTime=[NSString stringWithFormat:@"%@ %@",[dateTimeArray firstObject],[dateTimeArray lastObject]];
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"insert into USER_CHAT_HISTORY (user_header_id, user_message_text, user_name, user_datetime) values('%@','%@','%@','%@')",@"",message,usersChatName,dateTime];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    
    return [NSMutableArray array];
}

- (NSArray *)getuserChatHistoryforUser:(NSString *)userName
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    
    NSMutableArray *transactionHistory;
    
    transactionHistory = [NSMutableArray new];
    
    //  CREATE TABLE "USER_CHAT_HISTORY" ("user_header_id" VARCHAR, "user_message_text" VARCHAR, "user_name" VARCHAR, "user_datetime" VARCHAR)
    
    [queryString appendFormat:@"SELECT distinct user_header_id,user_message_text, user_name , user_datetime   FROM USER_CHAT_HISTORY where user_name='%@' ORDER BY user_datetime DESC",userName];
    
    if ([self set_query:queryString]) {
        
        [transactionHistory addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return transactionHistory;
}

//TASK CODE
-(NSMutableArray *)updateTokenIdforUser:(NSString *)userName withTokenId:(NSString *)tokenId{
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"update USER_TOKENIDS set TokenId = '%@' where Muser = '%@' ",tokenId,userName];
    
    if ([self set_query:queryString]) {
        [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)getOpstatDetails:(NSString *)materialNo{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *opStatRequest = [[NSFetchRequest alloc] init];
    
    opStatRequest = [NSFetchRequest fetchRequestWithEntityName:@"ETEHSOPSTAT"];
    
    opStatRequest.resultType = NSDictionaryResultType;
 
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:opStatRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

//etwcmcco
-(NSMutableArray *)insertWCMcco :(NSMutableArray *)wcmCCOArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[wcmCCOArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETWCMCCO"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[wcmCCOArray objectAtIndex:i] objectForKey:@"Asgnflg"] forKey:@"asgnflg"];
        
        [object setValue:[[wcmCCOArray objectAtIndex:i] objectForKey:@"Direction"] forKey:@"direction"];
        
        [object setValue:[[wcmCCOArray objectAtIndex:i] objectForKey:@"Iwerk"] forKey:@"iwerk"];
        
        [object setValue:[[wcmCCOArray objectAtIndex:i] objectForKey:@"Objart"] forKey:@"objart"];
        
        [object setValue:[[wcmCCOArray objectAtIndex:i] objectForKey:@"Objtyp"] forKey:@"objtyp"];

        [object setValue:[[wcmCCOArray objectAtIndex:i] objectForKey:@"Wcmuse"] forKey:@"wcmuse"];

 
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
 }

- (NSMutableArray *)fetchWCMCCOData:(NSString *)iwerkString forApplicationType:(NSString *)objtype withObjArt:(NSString *)objrt
{
    
    AppDelegate   *appdelgate = (AppDelegate *)[[UIApplication
                                                 sharedApplication]delegate];
    
    NSManagedObjectContext *context = appdelgate.coreDataControlObject.context;
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    //  building
    
   // objart
    
    NSFetchRequest *materialsRequest = [NSFetchRequest fetchRequestWithEntityName:@"ETWCMCCO"];
    
    NSPredicate *predicate;
    
     predicate = [NSPredicate predicateWithFormat:@"(iwerk == %@) AND (objart == %@) AND  (objtyp == %@)",iwerkString,objrt, objtype];
 
    if (predicate){
        
        [materialsRequest setPredicate:[[NSCompoundPredicate alloc] initWithType:NSOrPredicateType subpredicates:@[predicate]]];
    }
    
    [materialsRequest setResultType:NSDictionaryResultType];
    
    NSError *error = nil;
    NSArray *objs = [context executeFetchRequest:materialsRequest error:&error];
    if (error) {
        [NSException raise:@"no Building find" format:@"%@", [error localizedDescription]];
    }
    if (objs.count > 0) {
        // there is a Matnr with same id exsist. Use update method
        
        [dataArray addObjectsFromArray:objs];
        
    }else {
        
    }
    
    return dataArray;
}



//JSA

-(NSMutableArray *)insertJSA :(NSMutableArray *)jsaSopstatArray
{
     AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
     for (int i=0; i<[jsaSopstatArray count]; i++) {
 
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSOPSTAT"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSopstatArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaSopstatArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"text"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];

}


-(NSMutableArray *)insertJSAShacat:(NSMutableArray *)jsaShazcatArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaShazcatArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSHAZCAT"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaShazcatArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaShazcatArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"text"];
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
 }


-(NSMutableArray *)insertJSASHazard:(NSMutableArray *)jsaShazardArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaShazardArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSHAZARD"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaShazardArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaShazardArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"text"];
 
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
}



-(NSMutableArray *)insertJSASHazimp:(NSMutableArray *)jsaShazaimpArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaShazaimpArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSHAZAIMP"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaShazaimpArray objectAtIndex:i] objectForKey:@"HazardCode"] forKey:@"hazardcode"];
        [object setValue:[[jsaShazaimpArray objectAtIndex:i] objectForKey:@"ImpactCode"] forKey:@"impactcode"];
        [object setValue:[[jsaShazaimpArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"text"];
        [object setValue:[[jsaShazaimpArray objectAtIndex:i] objectForKey:@"Type"] forKey:@"type"];


        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
    
    return [NSMutableArray array];
}

-(NSMutableArray *)insertJSASHazctrl:(NSMutableArray *)jsaSHactrlArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaSHactrlArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSHAZCTRL"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSHactrlArray objectAtIndex:i] objectForKey:@"HazardCode"] forKey:@"hazardcode"];
        [object setValue:[[jsaSHactrlArray objectAtIndex:i] objectForKey:@"ControlCode"] forKey:@"controlcode"];
        [object setValue:[[jsaSHactrlArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"text"];
        [object setValue:[[jsaSHactrlArray objectAtIndex:i] objectForKey:@"Type"] forKey:@"type"];
        [object setValue:[[jsaSHactrlArray objectAtIndex:i] objectForKey:@"Subject"] forKey:@"subject"];
 
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
 
    return [NSMutableArray array];
}


-(NSMutableArray *)insertJSASLocTyp:(NSMutableArray *)jsaLocTypArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaLocTypArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSLOCTYP"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaLocTypArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaLocTypArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"text"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
}


-(NSMutableArray *)insertJSASSLocRev:(NSMutableArray *)jsaSLocRevArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaSLocRevArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSLOCREV"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"Type"] forKey:@"type"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"Status"] forKey:@"status"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"FunctLocID"] forKey:@"functlocId"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"EquipmentID"] forKey:@"equipmentid"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"PlantID"] forKey:@"plantid"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"DbKey"] forKey:@"dbkey"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"ParentKey"] forKey:@"parentkey"];
        [object setValue:[[jsaSLocRevArray objectAtIndex:i] objectForKey:@"Text"] forKey:@"text"];

        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
    
 }


-(NSMutableArray *)insertJSASJobTyp:(NSMutableArray *)jsaSJobTypArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaSJobTypArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"EHSJOBTYP"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSJobTypArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaSJobTypArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"descrption"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
    
}


-(NSMutableArray *)insertJSASReason:(NSMutableArray *)jsaSReasonArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaSReasonArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSREASON"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSReasonArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaSReasonArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"descrption"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
    
}


//EtEHSRasrole

-(NSMutableArray *)insertJSASRasrole:(NSMutableArray *)jsaSRasroleArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaSRasroleArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSRASROLE"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSRasroleArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaSRasroleArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"descrption"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
    
}


-(NSMutableArray *)insertJSASRastep:(NSMutableArray *)jsaSRastepArray
{
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    for (int i=0; i<[jsaSRastepArray count]; i++) {
        
        NSManagedObject *object = [NSEntityDescription insertNewObjectForEntityForName:@"ETEHSRASSTEP"
                                                                inManagedObjectContext:delegate.coreDataControlObject.context];
        [object setValue:[[jsaSRastepArray objectAtIndex:i] objectForKey:@"Code"] forKey:@"code"];
        [object setValue:[[jsaSRastepArray objectAtIndex:i] objectForKey:@"Description"] forKey:@"descrption"];
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
    
    if ([[defaults objectForKey:@"ACTIVATELOGS"] isEqualToString:@"X"])
    {
        [[DataBase sharedInstance] writToLogFile:[NSString stringWithFormat:@"#INFO#.com.enstrapp.fieldtekpro#StockOverView data received"]];
    }
    
    return [NSMutableArray array];
}



-(NSMutableArray *)insertWCMCheckRequest :(NSMutableArray *)wcmChequeRequestArray
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    [queryString setString:@"DELETE from WCM_CHECKREQUEST"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //CREATE TABLE "WCM_CHECKREQUEST" ("orderwcm_wapinr" VARCHAR,"orderwcm_wapityp" VARCHAR,"orderwcm_needid" VARCHAR,"orderwcm_value" VARCHAR,"orderwcm_chkpointtype" VARCHAR,"orderwcm_desctext" VARCHAR,"orderwcm_tplnr" VARCHAR,"orderwcm_equnr" VARCHAR)
    
    for (int i=0; i<[wcmChequeRequestArray count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into WCM_CHECKREQUEST (orderwcm_wapinr, orderwcm_wapityp, orderwcm_needid, orderwcm_value, orderwcm_chkpointtype, orderwcm_desctext, orderwcm_tplnr, orderwcm_equnr) values('','%@','%@','','%@','%@','','')",[[wcmChequeRequestArray objectAtIndex:i] objectForKey:@"Wapityp"],[[wcmChequeRequestArray objectAtIndex:i] objectForKey:@"Needid"],[[wcmChequeRequestArray objectAtIndex:i] objectForKey:@"ChkPointType"] ,[[wcmChequeRequestArray objectAtIndex:i] objectForKey:@"Desctext"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)insertWCMWcvp6 :(NSMutableArray *)WcmWcvp6
{
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    [queryString setString:@"DELETE from WCM_WCVP6"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    //CREATE TABLE "WCM_WCVP6" ("orderwcm_wapinr" VARCHAR,"orderwcm_wapityp" VARCHAR,"orderwcm_needid" VARCHAR,"orderwcm_value" VARCHAR,"orderwcm_chkpointtype" VARCHAR,"orderwcm_desctext" VARCHAR,"orderwcm_tplnr" VARCHAR,"orderwcm_equnr" VARCHAR)
    
    for (int i=0; i<[WcmWcvp6 count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into WCM_CHECKREQUEST (orderwcm_wapinr, orderwcm_wapityp, orderwcm_needid, orderwcm_value, orderwcm_chkpointtype, orderwcm_desctext, orderwcm_tplnr, orderwcm_equnr) values('','%@','%@','','%@','%@','','')",[[WcmWcvp6 objectAtIndex:i] objectForKey:@"Wapityp"],[[WcmWcvp6 objectAtIndex:i] objectForKey:@"Needid"],[[WcmWcvp6 objectAtIndex:i] objectForKey:@"ChkPointType"] ,[[WcmWcvp6 objectAtIndex:i] objectForKey:@"Desctext"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
    }
    
    return [NSMutableArray array];
}

//wwdata
-(NSMutableArray *)insertWorkApprovalHeaderDetails:(NSMutableArray *)workApprovalDetails{
    
    //  CREATE TABLE "WCM_WWDATA_HEADER" ("owcmww_header_id" VARCHAR, "owcmww_aufnr" VARCHAR, "owcmww_stext" VARCHAR, "owcmww_funclocation_id" VARCHAR, "owcmww_funclocation_name" VARCHAR, "owmwwww_from_date" VARCHAR, "owcmww_from_time" VARCHAR, "owcmww_to_date" VARCHAR, "owcmww_to_time" VARCHAR, "owcmww_vornr" VARCHAR, "owcmww_set_prepared" VARCHAR, "owcmww_completed" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString setString:@""];
    [queryString appendFormat:@"delete from WCM_WWDATA_HEADER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_WITHDATA];
    }
    
    [queryString setString:@""];
    
    
    NSString *uuid;
    if (![[workApprovalDetails  objectAtIndex:0] isEqualToString:@""]) {
        uuid=[workApprovalDetails  objectAtIndex:0];
    }
    else{
        
        uuid=@"";
    }
    
    [queryString appendFormat:@"insert into WCM_WWDATA_HEADER (owcmww_header_id, owcmww_aufnr, owcmww_stext, owcmww_funclocation_id, owcmww_funclocation_name, owmwwww_from_date, owcmww_from_time, owcmww_to_date, owcmww_to_time, owcmww_vornr, owcmww_set_prepared, owcmww_completed ) values('%@','','%@','%@','%@','%@','%@','%@','%@','%@','%@','%@')",uuid,[workApprovalDetails  objectAtIndex:2] ,[workApprovalDetails  objectAtIndex:3],[workApprovalDetails  objectAtIndex:4],[workApprovalDetails  objectAtIndex:5],[workApprovalDetails  objectAtIndex:6],[workApprovalDetails  objectAtIndex:7],[workApprovalDetails objectAtIndex:8],[workApprovalDetails  objectAtIndex:1],[workApprovalDetails  objectAtIndex:9],[workApprovalDetails  objectAtIndex:10]];
    
    
    if ([self set_query:queryString]) {
        [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
    
}

-(NSMutableArray *)WorkApprovalHeaderDetails{
    
    NSMutableArray *WorkApprovalHeaderDetailsArray=[NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct owcmww_header_id, owcmww_aufnr, owcmww_stext, owcmww_funclocation_id, owcmww_funclocation_name, owmwwww_from_date, owcmww_from_time, owcmww_to_date, owcmww_to_time, owcmww_vornr, owcmww_set_prepared, owcmww_completed  from WCM_WWDATA_HEADER"];
    
    
    if ([self set_query:queryString]) {
        [WorkApprovalHeaderDetailsArray  addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return WorkApprovalHeaderDetailsArray;
}

-(NSMutableArray *)fetchWCMTypesforPlantID:(NSString *)plantIDString
{
    NSMutableArray *wcmTypesDetailsArray=[NSMutableArray new];
    
    //   CREATE TABLE "WCM_TYPES" ("owcm_header_id" VARCHAR, "owcm_werks" VARCHAR, "owcm_objart" VARCHAR, "owcm_text" VARCHAR, "Objtyp" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select distinct owcm_header_id, owcm_werks, owcm_objart, owcm_text, Objtyp from WCM_TYPES where owcm_werks='%@' ORDER BY Objtyp ASC",plantIDString];
    
    if ([self set_query:queryString]) {
        [wcmTypesDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return wcmTypesDetailsArray;
}


-(NSMutableArray *)fetchWCMRequests
{
    NSMutableArray *wcmHazardsDetailsArray=[NSMutableArray new];
    NSMutableArray *wcmControlDetailsArray=[NSMutableArray new];
    
    NSMutableArray *wcmControlHazardsDetailsArray=[NSMutableArray new];
    
    //   CREATE TABLE "WCM_CHECKREQUEST" ("owcm_header_id" VARCHAR, "wapityp" VARCHAR, "checkpointtype" VARCHAR, "desctext" VARCHAR, "needid" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct owcm_header_id, wapityp , checkpointtype , desctext , needid  from WCM_CHECKREQUEST where checkpointtype ='C'"];
    
    if ([self set_query:queryString]) {
        [wcmControlDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    
    queryString = [[NSMutableString alloc] initWithString:@"select distinct owcm_header_id, wapityp , checkpointtype , desctext , needid  from WCM_CHECKREQUEST where checkpointtype ='H'"];
    
    if ([self set_query:queryString]) {
        [wcmHazardsDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [wcmControlHazardsDetailsArray addObject:[wcmControlDetailsArray copy]];
    [wcmControlHazardsDetailsArray addObject:[wcmHazardsDetailsArray copy]];
    
    return wcmControlHazardsDetailsArray;
}

-(NSMutableArray *)fetchWCMIsloationsData
{
    NSMutableArray *wcmRequestsDetailsArray=[NSMutableArray new];
    
    //   CREATE TABLE "WCM_ISOLATION_MASTER" ("Iwerk" VARCHAR, "Tggrp" VARCHAR, "Tgproc" VARCHAR, "Tgtyp" VARCHAR, "Unproc" VARCHAR, "Untyp" VARCHAR, "Phblflg" VARCHAR, "Tgflg" VARCHAR, "Usable" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@"select distinct Iwerk, Tggrp , Tgproc , Tgtyp , Unproc , Untyp, Phblflg, Tgflg, Usable from WCM_ISOLATION_MASTER"];
    
    if ([self set_query:queryString]) {
        [wcmRequestsDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return wcmRequestsDetailsArray;
}


 

-(NSMutableArray *)fetchNotifSystemStatus :(NSString *)uuidString
{
    NSMutableArray *notifSystemStatusArray=[NSMutableArray new];
    
    NSMutableArray *StonrZeroArray = [NSMutableArray new];
    NSMutableArray *StonrGreaterThanZeroArray = [NSMutableArray new];
    NSMutableArray *systemStatusArray = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select * from NOTIFICATION_STATUS where notifications_stonr != '00' and notifications_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [StonrGreaterThanZeroArray addObject:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from NOTIFICATION_STATUS where notifications_stonr = '00' and notifications_stat = 'E' and notifications_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [StonrZeroArray addObject:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from NOTIFICATION_STATUS where notifications_stonr = '00' and notifications_stat = 'I' and notifications_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [systemStatusArray addObject:[self run_Queries_WITHDICTIONARY]];
    }
    
    [notifSystemStatusArray addObjectsFromArray:[NSMutableArray arrayWithObjects:systemStatusArray,StonrGreaterThanZeroArray,StonrZeroArray, nil]];
    
    return notifSystemStatusArray;
}

-(NSMutableArray *)fetchOrderSystemStatus :(NSString *)uuidString
{
    NSMutableArray *orderSystemStatusArray=[NSMutableArray new];
    
    NSMutableArray *StonrZeroArray = [NSMutableArray new];
    NSMutableArray *StonrGreaterThanZeroArray = [NSMutableArray new];
    NSMutableArray *systemStatusArray = [NSMutableArray new];
    // CREATE TABLE "ORDER_SYSTEM_STATUS" ("orders_header_id" VARCHAR, "orders_aufnr" VARCHAR, "orders_vornr_operation" VARCHAR,"orders_objnr" VARCHAR, "orders_stsma" VARCHAR, "orders_inist" VARCHAR, "orders_stonr" VARCHAR, "orders_hsonr" VARCHAR, "orders_nsonr" VARCHAR, "orders_stat" VARCHAR, "orders_inact" VARCHAR, "orders_txt04" VARCHAR, "orders_txt30" VARCHAR, "orders_action" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select * from ORDER_SYSTEM_STATUS where orders_stonr != '00' and orders_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [StonrGreaterThanZeroArray addObject:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from ORDER_SYSTEM_STATUS where orders_stonr = '00' and orders_stat = 'E' and orders_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [StonrZeroArray addObject:[self run_Queries_WITHDICTIONARY]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from ORDER_SYSTEM_STATUS where orders_stonr = '00' and orders_stat = 'I' and orders_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [systemStatusArray addObject:[self run_Queries_WITHDICTIONARY]];
    }
    
    [orderSystemStatusArray addObjectsFromArray:[NSMutableArray arrayWithObjects:systemStatusArray,StonrGreaterThanZeroArray,StonrZeroArray, nil]];
    
    return orderSystemStatusArray;
}

-(NSMutableArray *)fetchNotificationSystemStatusOnly :(NSString *)uuidString
{
    NSMutableArray *notificaitonSystemStatusArray=[NSMutableArray new];
    
    //CREATE TABLE "NOTIFICATION_SYSTEM_STATUS" ("notifications_header_id" VARCHAR DEFAULT (null) ,"notifications_aufnr" VARCHAR,"notifications_objnr" VARCHAR,"notifications_manum" VARCHAR,"notifications_stsma" VARCHAR,"notifications_inist" VARCHAR,"notifications_stonr" VARCHAR,"notifications_hsonr" VARCHAR, "notifications_nsonr" VARCHAR, "notifications_stat" VARCHAR,"notifications_act" VARCHAR,"notifications_txt04" VARCHAR,"notifications_txt30" VARCHAR,"notifications_action" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select * from NOTIFICATION_STATUS where notifications_stonr = '00' and notifications_stat = 'I' and notifications_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [notificaitonSystemStatusArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return notificaitonSystemStatusArray;
}

-(NSMutableArray *)fetchOrderSystemStatusOnly :(NSString *)uuidString
{
    NSMutableArray *orderSystemStatusArray=[NSMutableArray new];
    
    // CREATE TABLE "ORDER_SYSTEM_STATUS" ("orders_header_id" VARCHAR, "orders_aufnr" VARCHAR, "orders_vornr_operation" VARCHAR,"orders_objnr" VARCHAR, "orders_stsma" VARCHAR, "orders_inist" VARCHAR, "orders_stonr" VARCHAR, "orders_hsonr" VARCHAR, "orders_nsonr" VARCHAR, "orders_stat" VARCHAR, "orders_inact" VARCHAR, "orders_txt04" VARCHAR, "orders_txt30" VARCHAR, "orders_action" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select * from ORDER_SYSTEM_STATUS where orders_stonr = '00' and orders_stat = 'I' and orders_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        [orderSystemStatusArray addObjectsFromArray:[self run_Queries_WITHDICTIONARY]];
    }
    
    return orderSystemStatusArray;
}

-(BOOL)fetchOrderStatforOrderCompletion :(NSString *)uuidString{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    [queryString appendFormat:@"select * from ORDER_SYSTEM_STATUS where orders_stonr = '00' and orders_stat = 'I' and orders_act = 'X' and (orders_txt04 = 'REL' or orders_txt04 = 'WOCO' or orders_txt04 = 'EXEC') and orders_header_id = '%@'",uuidString];
    
    if ([self set_query:queryString]) {
        if (![self run_Queries_NODATA]) {
            return NO;
        }
    }
    
    return YES;
}

-(NSMutableArray *)fetchWCMRequestsforApplicationType:(NSString *)wapId
{
    NSMutableArray *wcmHazardsDetailsArray=[NSMutableArray new];
    NSMutableArray *wcmControlDetailsArray=[NSMutableArray new];
    
    NSMutableArray *permitWorkApplications=[NSMutableArray new];
    
    // CREATE TABLE "WCM_CHECKPOINTS" ("owcm_header_id" VARCHAR, "owcm_ww_vornr" VARCHAR, "owcm_wa_vornr" VARCHAR, "owcm_aufnr" VARCHAR, "owcm_check_point_type" VARCHAR, "owcm_check_point_name" VARCHAR, "owcm_need_id" VARCHAR, "owcm_wap_type" VARCHAR, "owcm_item_status" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select * from WCM_CHECKPOINTS where owcm_check_point_type ='H' and owcm_wap_type= '%@'",wapId];
    
    if ([self set_query:queryString]) {
        [wcmHazardsDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    
    [queryString appendFormat:@"select * from WCM_CHECKPOINTS where owcm_check_point_type ='C' and owcm_wap_type= '%@' ",wapId];
    
    if ([self set_query:queryString]) {
        [wcmControlDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [permitWorkApplications addObjectsFromArray:[NSMutableArray arrayWithObjects:wcmHazardsDetailsArray,wcmControlDetailsArray, nil]];
    
    return permitWorkApplications;
}

-(NSMutableArray *)fetchNFCSettingsForPlantId:(NSString *)PlantID{
    
    NSMutableArray *nfcSettingsDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from NFCSETTINGSMASTER where Werks = '%@'",PlantID];
    
    if ([self set_query:queryString]) {
        [nfcSettingsDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return nfcSettingsDetails;
}

-(NSMutableArray *)fetchPlannerGrpForequipIngrp:(NSString *)IngrpID{
    
    NSMutableArray *plannerGroupDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [[NSMutableString alloc]initWithString:@""];
    
    [queryString appendFormat:@"SELECT * from PLANNERGROUPMASTER where Ingrp = '%@'",IngrpID];
    
    if ([self set_query:queryString]) {
        [plannerGroupDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return plannerGroupDetails;
}

#pragma mark-
#pragma mark- MIS

-(NSMutableArray *)fetchWCMTypesforPermitReport:(NSMutableArray *)objectTypeID
{
    NSMutableArray *wcmTypesDetailsArray=[NSMutableArray new];
    
    //   CREATE TABLE "WCM_TYPES" ("owcm_header_id" VARCHAR, "owcm_werks" VARCHAR, "owcm_objart" VARCHAR, "owcm_text" VARCHAR, "Objtyp" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select distinct owcm_text from WCM_TYPES where Objtyp='%@' AND owcm_objart = 'WA' ORDER BY Objtyp ASC",objectTypeID];
    //  [queryString appendFormat:@"select * from WCM_TYPES where Objtyp='%@' AND owcm_objart = 'WA' ORDER BY Objtyp ASC",objectTypeID];
    
    
    if ([self set_query:queryString]) {
        [wcmTypesDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return wcmTypesDetailsArray;
}

-(NSMutableArray *)getApplicationNameForObjType:(NSDictionary *)objTypeDictionary{
    
    NSMutableArray *objTypeTextArray = [NSMutableArray new];
    
    NSString *querysting = [NSString stringWithFormat:@"select distinct owcm_text from WCM_TYPES where Objtyp = '%@' and owcm_werks = '%@'",[objTypeDictionary objectForKey:@"ObjTypeID"],[objTypeDictionary objectForKey:@"PlantID"]];
    
    if ([self set_query:querysting]) {
        [objTypeTextArray addObjectsFromArray:[self run_Queries_WITHDATA_singleArray]];
    }
    
    return objTypeTextArray;
}


- (NSMutableArray *)fetchNotificationDetailsForNotifNo:(NSString *) NotifNo{
    
    NSMutableArray *notificationDetails = [NSMutableArray new];
    
    NSMutableString *queryString = [NSMutableString new];
    [queryString appendFormat:@"select *  from NOTIFICATION_HEADER where nh_objectID ='%@'",NotifNo];
    
    if([self set_query:queryString])
    {
        [notificationDetails addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return notificationDetails;
}

- (NSMutableArray *)fetchOrderDetailsForOrderNo:(NSString *) OrderNo{
    
    NSMutableArray *orderDetailsArray = [NSMutableArray new];
    
    NSMutableString *queryString = [NSMutableString new];
    [queryString appendFormat:@"select *  from ORDER_HEADER where oh_objectID ='%@'",OrderNo];
    
    if([self set_query:queryString])
    {
        [orderDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return orderDetailsArray;
}

-(NSMutableArray *)getPriorityDescriptionForPermitReport:(NSString *)priorityID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct priority_description from ORDER_PRIORITYMASTER where priority_id = '%@'",priorityID];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)getPriorityDescForNotificationReport:(NSString *)notifPriorityID
{
    NSMutableString *queryString = [[NSMutableString alloc] init];
    [queryString appendFormat:@"select distinct priority_description from NOTIFICATION_PRIORITYMASTER where priority_id = '%@'",notifPriorityID];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)getWOCOStatus:(NSString *)uuid{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select distinct orders_txt04, orders_act from ORDER_SYSTEM_STATUS where orders_txt04 = 'WOCO' and orders_header_id = '%@'",uuid];
    
    if ([self set_query:queryString]) {
        return [self run_Queries_WITHDATA_singleArray];
    }
    
    return [NSMutableArray array];
}

-(NSMutableArray *)fetchWCMRequestsforCreateApplicationType:(NSString *)wapId forUsage:(NSString *)usageID
{
    NSMutableArray *wcmHazardsDetailsArray=[NSMutableArray new];
    NSMutableArray *wcmControlDetailsArray=[NSMutableArray new];
    
    NSMutableArray *permitWorkApplications=[NSMutableArray new];
    
    //CREATE TABLE "WCM_WORK_REQUIREMENTS" ("Wapinr" VARCHAR, "Wapityp" VARCHAR, "ChkPointType" VARCHAR, "Wkid" VARCHAR, "Needid" VARCHAR, "Value" VARCHAR, "Desctext" VARCHAR, "Wkgrp" VARCHAR, "Needgrp" VARCHAR, "Tplnr" VARCHAR, "Equnr" VARCHAR, "Aprv4unmarked" VARCHAR, "Aprv4marked" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select * from WCM_WORK_REQUIREMENTS where  Tplnr ='%@' and Wkgrp ='%@' and ChkPointType ='W' and Dpflg = 'X' ",wapId,usageID];
    
    if ([self set_query:queryString]) {
        [wcmHazardsDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [queryString setString:@""];
    
    
    [queryString appendFormat:@"select * from WCM_WORK_REQUIREMENTS where  Tplnr ='%@' and Wkgrp ='%@' and ChkPointType ='R' and Dpflg = 'X' ",wapId,usageID];
    
    if ([self set_query:queryString]) {
        [wcmControlDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    [permitWorkApplications addObjectsFromArray:[NSMutableArray arrayWithObjects:wcmHazardsDetailsArray,wcmControlDetailsArray, nil]];
    
    return permitWorkApplications;
}

-(NSMutableArray *)fetchWCMTypesforPermitReport:(NSMutableArray *)objectTypeID forPlant:(NSString *)plantID
{
    NSMutableArray *wcmTypesDetailsArray=[NSMutableArray new];
    
    //   CREATE TABLE "WCM_TYPES" ("owcm_header_id" VARCHAR, "owcm_werks" VARCHAR, "owcm_objart" VARCHAR, "owcm_text" VARCHAR, "Objtyp" VARCHAR)
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString appendFormat:@"select distinct owcm_text from WCM_TYPES where Objtyp='%@' AND owcm_objart ='WA' AND owcm_werks ='%@' ORDER BY Objtyp ASC",objectTypeID,plantID];
    
    //  [queryString appendFormat:@"select * from WCM_TYPES where Objtyp='%@' AND owcm_objart = 'WA' ORDER BY Objtyp ASC",objectTypeID];
    
    if ([self set_query:queryString]) {
        [wcmTypesDetailsArray addObjectsFromArray:[self run_Queries_WITHDATA]];
    }
    
    return wcmTypesDetailsArray;
}


-(NSMutableArray *)insertMeascodes :(NSMutableArray *)measCodesArray
{
 
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from ET_MEASCODES"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
 
                    for (int i = 0; i <[measCodesArray count]; i++)
                    {

                        [queryString setString:@""];
                        
                      NSMutableArray *itemMeasCodeDetailsArray = [NSMutableArray new];
            
                     if ([[[measCodesArray objectAtIndex:i] objectForKey:@"MCodes"] objectForKey:@"results"]) {
            
                        if ([[[[measCodesArray objectAtIndex:i] objectForKey:@"MCodes"] objectForKey:@"results"] isKindOfClass:[NSArray class]]) {
            
                            [itemMeasCodeDetailsArray addObjectsFromArray:[[[measCodesArray objectAtIndex:i] objectForKey:@"MCodes"] objectForKey:@"results"]];
                         }
 
                        for (int j=0;j<[itemMeasCodeDetailsArray count]; j++) {
            
                            [queryString setString:@""];

                            [queryString appendFormat:@"insert into ET_MEASCODES (code, Kurztext1, Codegruppe, kurztext) values ('%@','%@','%@','%@')",[NSString stringWithFormat:@"%@",[[itemMeasCodeDetailsArray objectAtIndex:j] objectForKey:@"Code"]],[NSString stringWithFormat:@"%@",[[itemMeasCodeDetailsArray objectAtIndex:j] objectForKey:@"Kurztext1"]],[NSString stringWithFormat:@"%@",[[measCodesArray objectAtIndex:i] objectForKey:@"Codegruppe"]],[NSString stringWithFormat:@"%@",[[measCodesArray objectAtIndex:i] objectForKey:@"kurztext"]]];
 
                            if ([self set_query:queryString]) {
                                [self run_Queries_NODATA];
                            }
                          }
                     }
            }
 
     return [NSMutableArray array];
  }

-(NSArray *)getMeasCodes:(NSString *)fetchRequestString
{
    
      NSMutableString *queryString = [[NSMutableString alloc] init];
        [queryString setString:@""];
        [queryString appendFormat:@"select * from ET_MEASCODES where Codegruppe = '%@'",fetchRequestString];
        
        if ([self set_query:queryString]) {
            return [self run_Queries_WITHDICTIONARY];
        }
    
       return [NSMutableArray array];
 }


-(BOOL)insertItemCodeDetails :(NSMutableArray *)itemCodeDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
//    [queryString setString:@"delete from NOTIFICATION_COMPONENTMASTER; delete from NOTIFICATION_COMPONENT_PROBLEMMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
    
 
    for (int i =0; i<[itemCodeDetails count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTIFICATION_COMPONENTMASTER (component_id, component_description, component_notificationtype_id, component_catalogprofile_id) values ('%@','%@','%@','%@')",[[itemCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[itemCodeDetails objectAtIndex:i] objectForKey:@"Kurztext"],[[itemCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[itemCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        NSMutableArray *itemCodeDetailsArray = [NSMutableArray new];
        
        NSDictionary *itemCodeDetailsDictionary;
        
        if ([[itemCodeDetails objectAtIndex:i] objectForKey:@"ICodes"]) {
            
            itemCodeDetailsDictionary = [[itemCodeDetails objectAtIndex:i] objectForKey:@"ICodes"];
            
            if ([[itemCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSArray class]]) {
                
                [itemCodeDetailsArray addObjectsFromArray:[itemCodeDetailsDictionary objectForKey:@"results"]];
            }
            else if ([[itemCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSDictionary class]]){
                
                [itemCodeDetailsArray addObjectsFromArray:[NSMutableArray arrayWithObject:[itemCodeDetailsDictionary objectForKey:@"results"]]];
            }
        }
        
        for (int j =0; j<[itemCodeDetailsArray count]; j++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_COMPONENT_PROBLEMMASTER (problem_id, problem_description, problem_component_id, component_notificationtype_id,component_catalogprofile_id) values ('%@','%@','%@','%@','%@')",[[itemCodeDetailsArray objectAtIndex:j] objectForKey:@"Code"],[[itemCodeDetailsArray objectAtIndex:j] objectForKey:@"Kurztext1"],[[itemCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[itemCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[itemCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    
    return TRUE;
}


-(BOOL)insertActCodeDetails :(NSMutableArray *)actCodeDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
//    [queryString setString:@"delete from NOTIFICATION_ACTIVITY_CODEGROUP_MASTER; delete from NOTIFICATION_ACTIVITYMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
    
    //  CREATE TABLE `NOTIFICATION_ACTIVITY_CODEGROUP_MASTER` ( `notificationa_codegruppe` TEXT, `notificationa_codetext` TEXT, `notificationa_catalog_profileid` TEXT )
 
    for (int i =0; i<[actCodeDetails count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTIFICATION_ACTIVITY_CODEGROUP_MASTER (notificationa_codegruppe, notificationa_codetext, notificationa_catalog_profileid) values ('%@','%@','%@')",[[actCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[actCodeDetails objectAtIndex:i] objectForKey:@"Kurztext"],@""];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        NSMutableArray *activityCodeDetailsArray = [NSMutableArray new];
        
        NSDictionary *actCodeDetailsDictionary;
        
        if ([[actCodeDetails objectAtIndex:i] objectForKey:@"ACall"]) {
            
            actCodeDetailsDictionary = [[actCodeDetails objectAtIndex:i] objectForKey:@"ACall"];
            
            if ([[actCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSArray class]]) {
                
                [activityCodeDetailsArray addObjectsFromArray:[actCodeDetailsDictionary objectForKey:@"results"]];
            }
            else if ([[actCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSDictionary class]]){
                
                [activityCodeDetailsArray addObjectsFromArray:[NSMutableArray arrayWithObject:[actCodeDetailsDictionary objectForKey:@"results"]]];
            }
        }
        
        for (int j =0; j<[activityCodeDetailsArray count]; j++) {
            
            [queryString setString:@""];
 
            [queryString appendFormat:@"insert into NOTIFICATION_ACTIVITYMASTER (activity_id, activity_text, code_group_id) values ('%@','%@','%@')",[[activityCodeDetailsArray objectAtIndex:j] objectForKey:@"Code"],[[activityCodeDetailsArray objectAtIndex:j] objectForKey:@"Kurztext1"],[[actCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return TRUE;
}


-(BOOL)insertCuaseCodeDetails :(NSMutableArray *)causeCodeDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
//    [queryString setString:@"delete from NOTIFICATION_CAUSEGROUPMASTER; delete from NOTIFICATION_CGROUP_CAUSECODEMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
    
    for (int i =0; i<[causeCodeDetails count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTIFICATION_CAUSEGROUPMASTER (causegroup_id, causegroup_description, causegroup_notificationtype_id, causegroup_catalogprofile_id) values ('%@','%@','%@','%@')",[[causeCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[causeCodeDetails objectAtIndex:i] objectForKey:@"Kurztext"],[[causeCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[causeCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        NSMutableArray *causeCodeDetailsArray = [NSMutableArray new];
        
        NSDictionary *causeCodeDetailsDictionary;
        
        if ([[causeCodeDetails objectAtIndex:i] objectForKey:@"CCall"]) {
            
            causeCodeDetailsDictionary = [[causeCodeDetails objectAtIndex:i] objectForKey:@"CCall"];
            
            if ([[causeCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSArray class]]) {
                
                [causeCodeDetailsArray addObjectsFromArray:[causeCodeDetailsDictionary objectForKey:@"results"]];
            }
            else if ([[causeCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSDictionary class]]){
                
                [causeCodeDetailsArray addObjectsFromArray:[NSMutableArray arrayWithObject:[causeCodeDetailsDictionary objectForKey:@"results"]]];
            }
        }
        
        for (int j =0; j<[causeCodeDetailsArray count]; j++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_CGROUP_CAUSECODEMASTER (causecode_id, causecode_description, causecode_cgroup_id, causegroup_notificationtype_id,causegroup_catalogprofile_id) values ('%@','%@','%@','%@','%@')",[[causeCodeDetailsArray objectAtIndex:j] objectForKey:@"Code"],[[causeCodeDetailsArray objectAtIndex:j] objectForKey:@"Kurztext1"],[[causeCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[causeCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[causeCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    
    return TRUE;
}

-(BOOL)insertTaskCodeDetails :(NSMutableArray *)taskCodeDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
//    [queryString setString:@"delete from NOTIFICATION_TASKGROUPMASTER; delete from NOTIFICATION_TGROUP_TASKCODEMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
    
    for (int i =0; i<[taskCodeDetails count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTIFICATION_TASKGROUPMASTER (taskgroup_id, taskgroup_description, taskgroup_notificationtype_id, taskgroup_catalogprofile_id) values ('%@','%@','%@','%@')",[[taskCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[taskCodeDetails objectAtIndex:i] objectForKey:@"Kurztext"],[[taskCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[taskCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        NSMutableArray *taskCodeDetailsArray = [NSMutableArray new];
        
        NSDictionary *taskCodeDetailsDictionary;
        
        if ([[taskCodeDetails objectAtIndex:i] objectForKey:@"Codes"]) {
            
            taskCodeDetailsDictionary = [[taskCodeDetails objectAtIndex:i] objectForKey:@"Codes"];
            
            if ([[taskCodeDetailsDictionary objectForKey:@"item"] isKindOfClass:[NSArray class]]) {
                
                [taskCodeDetailsArray addObjectsFromArray:[taskCodeDetailsDictionary objectForKey:@"item"]];
            }
            else if ([[taskCodeDetailsDictionary objectForKey:@"item"] isKindOfClass:[NSDictionary class]]){
                
                [taskCodeDetailsArray addObjectsFromArray:[NSMutableArray arrayWithObject:[taskCodeDetailsDictionary objectForKey:@"item"]]];
            }
        }
        
        for (int j =0; j<[taskCodeDetailsArray count]; j++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_TGROUP_TASKCODEMASTER (taskcode_id, taskcode_description, taskcode_tgroup_id, taskgroup_notificationtype_id,taskgroup_catalogprofile_id) values ('%@','%@','%@','%@','%@')",[[taskCodeDetailsArray objectAtIndex:j] objectForKey:@"Code"],[[taskCodeDetailsArray objectAtIndex:j] objectForKey:@"Kurztext1"],[[taskCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[taskCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[taskCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return TRUE;
}


-(BOOL)deleteAllNotifCodesMasters
{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
    [queryString setString:@"delete from NOTIFICATION_OBJECTGROUPMASTER; delete from NOTIFICATION_OGROUP_OBJECTCODEMASTER"];
    
    [self set_query:queryString];
    if (![self run_Queries_NODATA]) {
        NSLog(@"Cannot delete");
    }
    
    [queryString setString:@""];
    
 
    [queryString setString:@"delete from NOTIFICATION_TASKGROUPMASTER; delete from NOTIFICATION_TGROUP_TASKCODEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
 
     [queryString setString:@""];
 
    
    [queryString setString:@"delete from NOTIFICATION_CAUSEGROUPMASTER; delete from NOTIFICATION_CGROUP_CAUSECODEMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
    
    [queryString setString:@""];

    
    [queryString setString:@"delete from NOTIFICATION_COMPONENTMASTER; delete from NOTIFICATION_COMPONENT_PROBLEMMASTER"];
    
    if ([self set_query:queryString]) {
        [self run_Queries_NODATA];
    }
 
    return YES;
}

-(BOOL)insertObjectCodeDetails :(NSMutableArray *)objectCodeDetails{
    
    NSMutableString *queryString = [[NSMutableString alloc] initWithString:@""];
    
//    [queryString setString:@"delete from NOTIFICATION_OBJECTGROUPMASTER; delete from NOTIFICATION_OGROUP_OBJECTCODEMASTER"];
//
//    if ([self set_query:queryString]) {
//        [self run_Queries_NODATA];
//    }
    
    for (int i =0; i<[objectCodeDetails count]; i++) {
        
        [queryString setString:@""];
        
        [queryString appendFormat:@"insert into NOTIFICATION_OBJECTGROUPMASTER (objectgroup_id, objectgroup_description, objectgroup_notificationtype_id, objectgroup_catalogprofile_id) values ('%@','%@','%@','%@')",[[objectCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[objectCodeDetails objectAtIndex:i] objectForKey:@"Kurztext"],[[objectCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[objectCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
        
        if ([self set_query:queryString]) {
            [self run_Queries_NODATA];
        }
        
        NSMutableArray *objectCodeDetailsArray = [NSMutableArray new];
        
        NSDictionary *objectCodeDetailsDictionary;
        
        if ([[objectCodeDetails objectAtIndex:i] objectForKey:@"OCall"]) {
            
            objectCodeDetailsDictionary = [[objectCodeDetails objectAtIndex:i] objectForKey:@"OCall"];
            
            if ([[objectCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSArray class]]) {
                
                [objectCodeDetailsArray addObjectsFromArray:[objectCodeDetailsDictionary objectForKey:@"results"]];
            }
            else if ([[objectCodeDetailsDictionary objectForKey:@"results"] isKindOfClass:[NSDictionary class]]){
                
                [objectCodeDetailsArray addObjectsFromArray:[NSMutableArray arrayWithObject:[objectCodeDetailsDictionary objectForKey:@"results"]]];
                
            }
        }
        
        for (int j =0; j<[objectCodeDetailsArray count]; j++) {
            
            [queryString setString:@""];
            
            [queryString appendFormat:@"insert into NOTIFICATION_OGROUP_OBJECTCODEMASTER (objectcode_id, objectcode_description, objectcode_ogroup_id, objectgroup_notificationtype_id,objectgroup_catalogprofile_id) values ('%@','%@','%@','%@','%@')",[[objectCodeDetailsArray objectAtIndex:j] objectForKey:@"Code"],[[objectCodeDetailsArray objectAtIndex:j] objectForKey:@"Kurztext1"],[[objectCodeDetails objectAtIndex:i] objectForKey:@"Codegruppe"],[[objectCodeDetails objectAtIndex:i] objectForKey:@"NotifType"],[[objectCodeDetails objectAtIndex:i] objectForKey:@"Rbnr"]];
            
            if ([self set_query:queryString]) {
                [self run_Queries_NODATA];
            }
        }
    }
    
    return TRUE;
}

- (NSMutableDictionary *)parseForMeasurementDocs:(NSDictionary *)resultDictionary
{
    NSMutableDictionary *xmlDoc = [NSMutableDictionary dictionary];
    NSDictionary *parseDictionary;
    if ([resultDictionary objectForKey:@"env:Body"]) {
        
        parseDictionary = [resultDictionary objectForKey:@"env:Body"];
        if ([parseDictionary objectForKey:[Response actionWithWebServiceResponse:ORDER_MDOCS]]) {
            parseDictionary = [parseDictionary objectForKey:[Response actionWithWebServiceResponse:ORDER_MDOCS]];
            
            if ([parseDictionary objectForKey:@"EtEquiMptt"]) {
                if ([[parseDictionary objectForKey:@"EtEquiMptt"] isKindOfClass:[NSDictionary class]]) {
                    [xmlDoc setObject:[NSMutableArray arrayWithObject:[parseDictionary objectForKey:@"EtEquiMptt"]] forKey:@"resultMDocs"];
                }
                else if ([[parseDictionary objectForKey:@"EtEquiMptt"] isKindOfClass:[NSArray class]]){
                    
                    [xmlDoc setObject:[parseDictionary objectForKey:@"EtEquiMptt"] forKey:@"resultMDocs"];
                }
            }
            
            return xmlDoc;
        }
    }
    
    return [NSMutableDictionary dictionary];
}

-(void)insertFunctionalocationToCoreData:(NSArray *)functionalLocationArray{
    
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    NSDictionary *functioalLocationDictionary;
    FunctionalLocation *location;
    
    for (int i = 0; i <[functionalLocationArray count]; i++) {
        
        location = [NSEntityDescription insertNewObjectForEntityForName:@"FunctionalLocation" inManagedObjectContext:delegate.coreDataControlObject.context];
        functioalLocationDictionary = [functionalLocationArray objectAtIndex:i];
        location.locationid = [functioalLocationDictionary objectForKey:@"Tplnr"];
        location.locationName = [functioalLocationDictionary objectForKey:@"Pltxt"];
        location.plantName = [functioalLocationDictionary objectForKey:@"Werks"];
        location.workStation = [functioalLocationDictionary objectForKey:@"Arbpl"];
        location.costCenter = [functioalLocationDictionary objectForKey:@"Kostl"];
        location.fltyp = [functioalLocationDictionary objectForKey:@"Fltyp"];
        location.plannerGroup = [functioalLocationDictionary objectForKey:@"Ingrp"];
        location.tplma = [functioalLocationDictionary objectForKey:@"Tplma"];
        location.level = [functioalLocationDictionary objectForKey:@"Level"];
        location.stplnr = [functioalLocationDictionary objectForKey:@"Stplnr"];
        
        if ([functioalLocationDictionary objectForKey:@"Iwerk"]) {
            
            location.iwerks = [functioalLocationDictionary objectForKey:@"Iwerk"];
        }
        else{
            location.iwerks = @"";
        }
        
    }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
}

-(void)insertEquipmentToCoreData:(NSArray *)equipmentArray{
    
    AppDelegate *delegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    
    Equipment *equipment;
    NSDictionary *equipmentDictionary;
    
    for (int i = 0; i <[equipmentArray count]; i++) {
        
        equipment = [NSEntityDescription insertNewObjectForEntityForName:@"Equipment" inManagedObjectContext:delegate.coreDataControlObject.context];
        
        equipmentDictionary = [equipmentArray objectAtIndex:i];
        
        equipment.tplnr = [equipmentDictionary objectForKey:@"Tplnr"];
        
        equipment.equipmentID = [equipmentDictionary objectForKey:@"Equnr"];
        
        if ([equipmentDictionary objectForKey:@"Hequi"]) {
            equipment.equipmentHID = [equipmentDictionary objectForKey:@"Hequi"];
        }
        else{
            equipment.equipmentHID = @"";
        }
        
        equipment.equipmentName = [equipmentDictionary objectForKey:@"Eqktx"];
        
        if ([equipmentDictionary objectForKey:@"Sequi"]) {
            equipment.sequip = [equipmentDictionary objectForKey:@"Sequi"];
        }
        else{
            
            equipment.sequip = @"";
        }
        
        if ([equipmentDictionary objectForKey:@"Level"]) {
            equipment.level = [equipmentDictionary objectForKey:@"Level"];
        }
        else{
            equipment.level = @"";
        }
        
        if ([equipmentDictionary objectForKey:@"Iwerk"]) {
            
            equipment.iwerks = [equipmentDictionary objectForKey:@"Iwerk"];
        }
        else{
            equipment.iwerks = @"";
        }
        
        if ([equipmentDictionary objectForKey:@"Ingrp"]) {
            
            equipment.ingrp = [equipmentDictionary objectForKey:@"Ingrp"];
        }
        else{
            equipment.ingrp = @"";
        }
        
        
        if (![NullChecker isNull:[equipmentDictionary objectForKey:@"Ivdat"]]) {
            
            equipment.ivdat = [equipmentDictionary objectForKey:@"Ivdat"];
        }
        else{
            equipment.ivdat = @"";
        }
        
        if (![NullChecker isNull:[equipmentDictionary objectForKey:@"Eqart"]]) {
            
            equipment.eqart = [equipmentDictionary objectForKey:@"Eqart"];
        }
        else{
            equipment.eqart = @"";
        }
        
 
        equipment.catalogProfileID = [equipmentDictionary objectForKey:@"Rbnr"];
        equipment.plantName = [equipmentDictionary objectForKey:@"Werks"];
        equipment.workStation = [equipmentDictionary objectForKey:@"Arbpl"];
        equipment.costCenter = [equipmentDictionary objectForKey:@"Kostl"];
        
        equipment.herst = [equipmentDictionary objectForKey:@"Herst"];
        equipment.mapar = [equipmentDictionary objectForKey:@"Mapar"];
        equipment.serge = [equipmentDictionary objectForKey:@"Serge"];
        equipment.typbz = [equipmentDictionary objectForKey:@"Typbz"];
        equipment.anlnr = [equipmentDictionary objectForKey:@"Anlnr"];
        equipment.anlun = [equipmentDictionary objectForKey:@"Anlun"];
        equipment.invzu = [equipmentDictionary objectForKey:@"Invzu"];
     }
    
    [delegate.coreDataControlObject saveContext];
    [delegate.coreDataControlObject.context reset];
}


-(NSMutableArray *)getStorageLocationFromMaterialNo:(NSString *)materialNo{
    
    NSManagedObjectContext *context = [[(AppDelegate *)[[UIApplication sharedApplication] delegate] coreDataControlObject] context];
    
    NSMutableArray *dataArray = [NSMutableArray new];
    
    NSFetchRequest *lgortRequest = [[NSFetchRequest alloc] init];
    
    NSEntityDescription *entity = [NSEntityDescription entityForName:@"StockOverView" inManagedObjectContext:context];
    
    lgortRequest = [NSFetchRequest fetchRequestWithEntityName:@"StockOverView"];
    
    lgortRequest.resultType = NSDictionaryResultType;
    
    lgortRequest.propertiesToFetch = [NSArray arrayWithObjects:[[entity propertiesByName] objectForKey:@"lgort"], nil];
    
    NSPredicate *bPredicate = [NSPredicate predicateWithFormat:@"matnr like[cd] %@",materialNo];
    
    [lgortRequest setPredicate:bPredicate];
    
    NSError *error;
    NSArray *tempArray = [context executeFetchRequest:lgortRequest error:&error];
    
    if (error) {
        [ConsoleLogHandler showLog:error.description];
    }
    
    [dataArray addObjectsFromArray:tempArray];
    
    return dataArray;
}

@end


